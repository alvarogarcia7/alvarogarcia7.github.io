<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Tdd | The long way through Software Craftsmanship]]></title>
  <link href="http://alvarogarcia7.github.io/blog/categories/tdd/atom.xml" rel="self"/>
  <link href="http://alvarogarcia7.github.io/"/>
  <updated>2015-01-27T21:36:12+01:00</updated>
  <id>http://alvarogarcia7.github.io/</id>
  <author>
    <name><![CDATA[alvaro garcia]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Bank Kata in Java]]></title>
    <link href="http://alvarogarcia7.github.io/blog/2015/01/22/bank-kata-in-java/"/>
    <updated>2015-01-22T22:52:01+01:00</updated>
    <id>http://alvarogarcia7.github.io/blog/2015/01/22/bank-kata-in-java</id>
    <content type="html"><![CDATA[<p><a href="https://twitter.com/trikitrok">Manuel Rivero</a> and I did a subset of the <a href="https://github.com/sandromancuso/Bank-kata">bank kata</a>, proposed by <a href="https://twitter.com/sandromancuso">Sandro Mancuso</a>.</p>

<p>We&rsquo;ve used java (mockito, hamcrest, junit), outside-in TDD. The code is spread among several sessions. We have not committed after each step, only at the end of the session.</p>

<p>The source code is on <a href="https://github.com/alvarogarcia7/bank-kata">github</a></p>

<p>You can read Manuel&rsquo;s take on the kata on <a href="http://garajeando.blogspot.com.es/2015/01/kata-bank-account-in-java.html">his blog</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Kata: Reverse Polish Notation in Java]]></title>
    <link href="http://alvarogarcia7.github.io/blog/2015/01/12/kata-reverse-polish-notation-in-java/"/>
    <updated>2015-01-12T03:56:58+01:00</updated>
    <id>http://alvarogarcia7.github.io/blog/2015/01/12/kata-reverse-polish-notation-in-java</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve written a <a href="http://en.wikipedia.org/wiki/Reverse_Polish_notation">RPN</a> string calculator in java, using TDD with these: mockito, hamcrest, junit</p>

<p>It&rsquo;s close to the <a href="http://osherove.com/tdd-kata-1/">String Calculator kata</a>, by <a href="https://twitter.com/RoyOsherove">Roy Osherove</a>. This RPN is using mocks (so more difficult than the String calculator)</p>

<p>I&rsquo;ve tried to practice <a href="http://us2.campaign-archive1.com/?u=80ca60ec48ef77dfaa1f38943&amp;id=42f9a0b66f&amp;e=6ca6702beb">&ldquo;Your tests are dragging you down&rdquo;</a> by <a href="https://twitter.com/jbrains">J.B Rainsberger</a> (mainly, to use something to write on). This behavior is also explained in the book <a href="http://www.carlosble.com/libro-tdd/">Dirigido por tests</a> (Spanish) by <a href="https://twitter.com/carlosble">Carlos Blé</a>.</p>

<p>My solution is <a href="https://github.com/alvarogarcia7/kata-rpn-calculator-java">here</a>. Every step (red, green, refactor) has been saved.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Listening to the Tests]]></title>
    <link href="http://alvarogarcia7.github.io/blog/2015/01/06/listening-to-the-tests/"/>
    <updated>2015-01-06T22:05:55+01:00</updated>
    <id>http://alvarogarcia7.github.io/blog/2015/01/06/listening-to-the-tests</id>
    <content type="html"><![CDATA[<p>Specifically the chapter no. 20 (&ldquo;Listening to the tests&rdquo;) from <a href="http://www.growing-object-oriented-software.com/">Growing Object-Oriented Software Guided by Tests</a> available <a href="http://www.amazon.com/dp/0321503627/ref=as_sl_pd_tf_lc?tag=httpwwwm3pcou-20&amp;camp=213381&amp;creative=390973&amp;linkCode=as4&amp;creativeASIN=0321503627&amp;adid=12B4KPA3REF515ASAZN8&amp;&amp;ref-refURL=http%3A%2F%2Fwww.growing-object-oriented-software.com%2F">here</a> is so good to learn to hear to your tests.</p>

<p>To hear what they&rsquo;re trying to tell you, the authors (<a href="https://twitter.com/sf105">Steve Freeman</a> and <a href="https://twitter.com/natpryce">Nat Pryce</a>) explain this to you:</p>

<ul>
<li>I Need to Mock an Object I Can’t Replace</li>
<li>Logging Is a Feature</li>
<li>Mocking Concrete Classes</li>
<li>Don’t Mock Values</li>
<li>Bloated Constructor</li>
<li>Confused Object</li>
<li>Too Many Dependencies</li>
<li>Too Many Expectations</li>
</ul>


<p>To close, a quote:</p>

<blockquote><p>[&hellip;] We’ve found that the qualities that make an object easy to test also make our code responsive to change</p>

<p><a href="http://www.growing-object-oriented-software.com/">Growing Object-Oriented Software Guided by Tests</a>, chapter 20, page 229</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Kata: Prime Factors]]></title>
    <link href="http://alvarogarcia7.github.io/blog/2015/01/06/kata-prime-factors/"/>
    <updated>2015-01-06T21:47:04+01:00</updated>
    <id>http://alvarogarcia7.github.io/blog/2015/01/06/kata-prime-factors</id>
    <content type="html"><![CDATA[<p>I just did the prime factors kata, in java using TDD. Results: <a href="https://github.com/alvarogarcia7/primeFactors">https://github.com/alvarogarcia7/primeFactors</a></p>

<p>Code review, comments, pull requests are more than welcome</p>

<p>Source: <a href="http://craftsmanship.sv.cmu.edu/katas/prime-factors-kata">http://craftsmanship.sv.cmu.edu/katas/prime-factors-kata</a></p>

<p>Source: <a href="http://butunclebob.com/ArticleS.UncleBob.ThePrimeFactorsKata">http://butunclebob.com/ArticleS.UncleBob.ThePrimeFactorsKata</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Talk: 'Is TDD Dead? Of Course Not! But What´s All the Fuzz About Then?' by Emily Bache]]></title>
    <link href="http://alvarogarcia7.github.io/blog/2015/01/06/talk-is-tdd-dead-of-course-not-by-emily-bache/"/>
    <updated>2015-01-06T15:47:47+01:00</updated>
    <id>http://alvarogarcia7.github.io/blog/2015/01/06/talk-is-tdd-dead-of-course-not-by-emily-bache</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve just seen this talk: <a href="https://www.youtube.com/watch?v=PCEHRFHKZSk">Is TDD dead? Of course not! But what´s all the fuzz about then?</a> by <a href="https://twitter.com/emilybache">Emily Bache</a></p>

<h3>My notes</h3>

<ul>
<li>deliberate vs accidental learning (around minute 19)</li>
<li><p>do not be an evangelist for tdd but rather &ldquo;come learn tdd, come at a dojo with us!&rdquo;</p></li>
<li><p>points to <a href="https://twitter.com/tastapod">Dan North</a>&rsquo;s <a href="www.youtube.com/watch?v=SPj-23z-hQA">talk</a> (at the same foo café)</p></li>
<li>points to her book - <a href="https://leanpub.com/codingdojohandbook">The Coding Dojo Handbook</a></li>
<li><p>points to <a href="http://cyber-dojo.org/">cyber dojo</a></p></li>
<li><p>design is hard whether you do TDD or not</p></li>
<li><a href="https://twitter.com/dhh">dhh</a>: too much focus on unit test.</li>
</ul>


<blockquote><p>I thought we got rid of best practices in agile</p></blockquote>

<ul>
<li>different kinds of advice for each kind of target (eg, based on experience level)</li>
<li>points to self-testing code (by <a href="https://twitter.com/martinfowler">Martin Fowler</a>)</li>
<li>problem: the test suite is no longer in sync with the production code</li>
<li>points to approval testing:

<ul>
<li>code kata &ldquo;minesweeper&rdquo;</li>
<li>test data + code produces output data</li>
<li>I approve the data</li>
<li>Useful for full features</li>
<li>Useful for asserting on difficult parts like images</li>
<li>realistic users to generate tests</li>
<li>tool to manage these &ldquo;approval tests&rdquo;. Easy way of managing tests cases</li>
<li><a href="http://texttest.org">TextTest</a> is one of these tools</li>
</ul>
</li>
</ul>


<h3>Her conclusions</h3>

<ul>
<li>Watch out the fundamentalism</li>
<li>TDD might take you to too many layers of indirection</li>
<li>The share of each test (end to end, integration, unit) depends on each project / part</li>
<li>Many TDD pieces of advice is directed to novices. When you&rsquo;re not, you should know when to stop listening</li>
</ul>


<p>PS: I&rsquo;ve first seen this video in <a href="http://garajeando.blogspot.com/2015/01/interesting-talk-is-tdd-dead-of-course.html">garajeando</a></p>
]]></content>
  </entry>
  
</feed>
