<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Bdd | The long way through Software Craftsmanship]]></title>
  <link href="http://alvarogarcia7.github.io/blog/categories/bdd/atom.xml" rel="self"/>
  <link href="http://alvarogarcia7.github.io/"/>
  <updated>2015-06-14T16:33:12+02:00</updated>
  <id>http://alvarogarcia7.github.io/</id>
  <author>
    <name><![CDATA[alvaro garcia]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Self-study in June 2015]]></title>
    <link href="http://alvarogarcia7.github.io/blog/2015/06/03/self-study-in-june-2015/"/>
    <updated>2015-06-03T13:13:10+02:00</updated>
    <id>http://alvarogarcia7.github.io/blog/2015/06/03/self-study-in-june-2015</id>
    <content type="html"><![CDATA[<p>Update: I&rsquo;ve grouped all small posts related to the self-study from June 2015
into a single post</p>

<h2>Le monitoring de flux par l’exemple</h2>

<p>I&rsquo;ve read <a href="http://blog.octo.com/le-monitoring-de-flux-par-lexemple/">this article</a> about monitoring, in the way of &ldquo;by example&rdquo;, by Cédrick Lunven and Julien Kirch (French)</p>

<h2>The First Micro-service Architecture</h2>

<p>I&rsquo;ve read <a href="http://blog.cleancoder.com/uncle-bob/2015/05/28/TheFirstMicroserviceArchitecture.html">this article</a> about microservices and how they were implemented many years ago by Robert C. Martin</p>

<h2>How I Learned to Balance My Life With Remote Work</h2>

<p>I&rsquo;ve read <a href="https://open.bufferapp.com/remote-work/?utm_content=bufferaa5a2&amp;utm_medium=social&amp;utm_source=twitter.com&amp;utm_campaign=buffer">this article</a> about balancing life and work, either physical or remote by Michael Erasmus</p>

<h2>Demystified CQRS</h2>

<p>I&rsquo;ve read <a href="https://blog.codecentric.de/en/2015/05/demystified-cqrs/?utm_content=buffer35b18&amp;utm_medium=social&amp;utm_source=twitter.com&amp;utm_campaign=buffer">this article</a> about CQRS by Nino Martincevic</p>

<h2>The perils of programmer education in the bazaar</h2>

<p>I&rsquo;ve read <a href="http://blog.practicingruby.com/2015/06/04/the-perils-of-programmer-education-in-the-bazaar/">this article</a> by Gregory Brown</p>

<h2>6 useful and lesser-known git commands</h2>

<p>I&rsquo;ve read <a href="http://blog.joncairns.com/2015/05/6-useful-and-lesser-known-git-commands/">this article</a> about git commands (log, checkout, stash, cherry-pick, annotate) by Jon Cairns</p>

<h2>Is Your Scrum Standup Slowing You Down?</h2>

<p>I&rsquo;ve read <a href="http://www.sitepoint.com/scrum-standup-slowing-down/">this article</a> by M. David Green</p>

<h2>Me duele Indra</h2>

<p>I&rsquo;ve read <a href="http://us2.campaign-archive2.com/?u=374c664073e1a1fa3deca53b4&amp;id=67ce79e01b">this Bonillista</a> (Spanish) by David Bonilla</p>

<h2>TDD, BDD, [add every other method that promises software quality here] and the tea tasting lady</h2>

<p>I&rsquo;ve read <a href="https://blinkingcaret.wordpress.com/2012/10/02/tdd-bdd-add-every-other-method-that-promises-software-quality-here-and-the-tea-tasting-lady/">this article</a> by Rui Figueiredo about the scientific method, TDD / BDD and how to scientifically detect if the &lsquo;how&rsquo; affects the result. In this case, exemplified by how to prepare your tea</p>

<h2>The Art of Metaprogramming in Java</h2>

<p>I&rsquo;ve read <a href="http://www.slideshare.net/PolymathicCoder/the-art-of-metaprogramming-in-java">these slides</a> by Abdelmonaim Remani</p>

<h2>When TDD does not work</h2>

<p>I&rsquo;ve read <a href="https://blog.8thlight.com/uncle-bob/2014/04/30/When-tdd-does-not-work.html">this article</a> by Uncle Bob on situations where TDD might not be appropiate, especially around the borders</p>

<h2>Mi primera semana como aprendiz</h2>

<p>I&rsquo;ve read <a href="http://ronnyancorini.es/blog/index.php/2015/06/08/mi-primera-semana-como-aprendiz/">Ronny Ancorini&rsquo;s experiences</a> in his first week as apprentince with Carlos Blé &amp; Associates (Spanish)</p>

<h2>Refactoring without good tests</h2>

<p>I&rsquo;ve read <a href="http://blog.codeclimate.com/blog/2013/12/05/refactoring-without-good-tests/">this article</a> by Peter Bell on how to deal with a legacy codebase, what are the effects of not having tests and how to deal with. How to add tests to a codebase that is not ready for it.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Maven Module Base for Cucumber in Java]]></title>
    <link href="http://alvarogarcia7.github.io/blog/2015/03/10/maven-module-base-for-cucumber-in-java/"/>
    <updated>2015-03-10T07:24:38+01:00</updated>
    <id>http://alvarogarcia7.github.io/blog/2015/03/10/maven-module-base-for-cucumber-in-java</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve built a small maven module, to be used directly with cucumber. You can fork the repository <a href="https://github.com/alvarogarcia7/base-bdd-cucumber">here</a></p>

<p>This is the setup I&rsquo;ve proposed for the meetup <a href="http://www.meetup.com/Agile-Barcelona-Meetup/events/220673134/">&ldquo;BDD Cucumber kata (gherkin + code)&rdquo;</a>. Will see if this code is successfully used by the ~40 participants in a couple of weeks</p>

<p>(Quote from the <a href="https://github.com/alvarogarcia7/base-bdd-cucumber/blob/master/README.md">README.md</a>):</p>

<p>This maven project has been possible due to <a href="https://twitter.com/@thomassundberg">Thomas Sundberg</a> and <a href="https://thomassundberg.wordpress.com/2014/05/29/cucumber-jvm-hello-world">this post</a></p>

<p>Should you want to, there&rsquo;s a tweet to thank him the effort: <a href="https://twitter.com/intent/tweet?text=@thomassundberg%20thanks%20for%20the%20cucumber%20bdd%20tutorial!%20Will%20be%20using%20it%20from%20@agilebcn;Keep%20up%0Athe%20good%20work&amp;url=https://thomassundberg.wordpress.com/2014/05/29/cucumber-jvm-hello-world/">tweet intent here</a></p>

<p>Happy katas and happy bdd&#8217;ing!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Open Discussion: Behaviour-Driven Development]]></title>
    <link href="http://alvarogarcia7.github.io/blog/2015/02/15/open-discussion-behaviour-driven-development/"/>
    <updated>2015-02-15T02:30:38+01:00</updated>
    <id>http://alvarogarcia7.github.io/blog/2015/02/15/open-discussion-behaviour-driven-development</id>
    <content type="html"><![CDATA[<p>This week we had a great discussion about Behavior Driven Development (BDD). We have explained it as a way of developing software based on requirements, via automatically tested specifications. For more information, see the <a href="http://en.wikipedia.org/wiki/Behavior-driven_development">wikipedia&rsquo;s article on the subject</a></p>

<p>I forgot to mention that this is the perfect start to TDD, as this is usually called the double-loop TDD. See a post on it on <a href="http://coding-is-like-cooking.info/2013/04/outside-in-development-with-double-loop-tdd/">coding is like cooking</a></p>

<p>In this double-loop TDD, the first thing is to create a BDD scenario, run it (red-1), create a unit test that reflects this red (red-2), pass it, refactor; go to red-1 as many times as you need, doing TDD cycles. When you think the feature is done, execute the BDD scenarios and go to green (outer layer) and refactor.</p>

<h2>(Our) Common setting</h2>

<p>Going back to BDD, a common scenario would be the following:</p>

<p>Layers of software:</p>

<ul>
<li>Domain-Specific Language (DSL). See <a href="http://en.wikipedia.org/wiki/Domain-specific_language">wikipedia&rsquo;s article</a></li>
<li>Test adapter: an interpreter for this DSL</li>
<li>Test software: test fixtures, methods, structures to arrange, act, and assert on the sut</li>
<li>Production software (system under test - SUT): thing being tested</li>
</ul>


<h2>A BDD test vs A TDD test</h2>

<p>Let&rsquo;s imagine a BDD test for a <a href="http://en.wikipedia.org/wiki/Linked_list">linked list</a>:</p>

<pre><code>Given I have an empty list
When I add an element
Then I have an element on the list
</code></pre>

<p>now, the same test in TDD [using java, junit 4, hamcrest]</p>

<pre><code class="java">@Test
public void add_an_element_to_an_empty_list(){
    MyLinkedList linkedList = new MyLinkedList();

    linkedList.add("something");

    assertThat(linkedList.size(), is(1));
}
</code></pre>

<p>In some aspects, a BDD and a TDD test are similar:</p>

<ul>
<li>the given is the arrange, i.e., the prerequisite</li>
<li>the when is the act, i.e., the command</li>
<li>the then is the assertion, i.e., the postcondition</li>
</ul>


<p>(for more information on this, see <a href="http://en.wikipedia.org/wiki/Hoare_logic">Hoare&rsquo;s triple</a>)</p>

<p>But in others, they are not. In BDD you do not specify the APIs, methods, etc. You only care about behavior.</p>

<h2>Conclusion</h2>

<p>Benefits:</p>

<ul>
<li>everyone might involved in the specification by example workshops (source: <a href="http://www.amazon.com/ATDD-Example-Test-Driven-Development-Addison-Wesley/dp/0321784154">ATDD by example</a>)</li>
<li>live specifications. managers can now understand the real state</li>
<li><a href="http://en.wikipedia.org/wiki/Regression_testing">regression tests</a> are much cheaper (from automation)</li>
</ul>


<p>Gotchas:</p>

<ul>
<li>Test only the happy paths</li>
<li>This has a cost, do not overdo it</li>
<li>Doesn&rsquo;t remove manual tests</li>
<li>How do you manage multiple scenarios</li>
<li>How fast should it be?</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Implementing BDD at a Client]]></title>
    <link href="http://alvarogarcia7.github.io/blog/2015/02/09/implementing-bdd-at-a-client/"/>
    <updated>2015-02-09T22:23:44+01:00</updated>
    <id>http://alvarogarcia7.github.io/blog/2015/02/09/implementing-bdd-at-a-client</id>
    <content type="html"><![CDATA[<p>This was a low-hanging fruit as a team member who specialises in QA complained about testing in the last moment during the last sprint&rsquo;s retrospective.</p>

<p>Did the grunt job of connecting the dots and configuring the maven project (using jbehave). Also, got the inspiration from a tutorial.</p>

<p>Announced it only as it was in place and QA approved of it</p>

<p>This grunt job clicked with <a href="http://chimera.labs.oreilly.com/books/1234000001813/ch04.html#solution_id21">Sweep the floor</a></p>

<p>Let&rsquo;s see how the sprint goes and what are the pain points during this sprint</p>
]]></content>
  </entry>
  
</feed>
