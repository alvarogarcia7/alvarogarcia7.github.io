<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>The long way through Software Craftsmanship</title>
    <link>https://alvarogarcia7.github.io/</link>
    <description>Recent content on The long way through Software Craftsmanship</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 30 Jun 2016 12:49:50 +0000</lastBuildDate>
    <atom:link href="https://alvarogarcia7.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Books read in 2016Q2</title>
      <link>https://alvarogarcia7.github.io/blog/2016/06/30/books-read-in-2016q2/</link>
      <pubDate>Thu, 30 Jun 2016 12:49:50 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2016/06/30/books-read-in-2016q2/</guid>
      <description>&lt;p&gt;Books I&amp;rsquo;ve read this quarter&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://shop.oreilly.com/product/0636920033158.do&#34; target=&#34;_blank&#34;&gt;Building Microservices, Designing Fine-Grained Systems&lt;/a&gt;, by Sam Newman, with the &amp;lsquo;&lt;a href=&#34;https://twitter.com/@deaprendices&#34; target=&#34;_blank&#34;&gt;@deAprendices&lt;/a&gt;&amp;rsquo;s reading club&amp;rsquo;. Blog posts under the tag &lt;a href=&#34;https://alvarogarcia7.github.io/{{site.category_dir}}/building-microservices&#34;&gt;building-microservices&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Books started, not yet finished (WIP):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.amazon.com/exec/obidos/ASIN/0321125215&#34; target=&#34;_blank&#34;&gt;Domain-Driven Design: Tackling Complexity in the Heart of Software&lt;/a&gt; by Eric Evans, again.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.manning.com/books/amazon-web-services-in-action&#34; target=&#34;_blank&#34;&gt;Amazon Web Services in Action&lt;/a&gt; by Michael Wittig and Andreas Wittig&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.reinventingorganizations.com/&#34; target=&#34;_blank&#34;&gt;Reinventing Organizations&lt;/a&gt; by Frederic Laloux. Blog posts under the tag &lt;a href=&#34;https://alvarogarcia7.github.io/{{site.category_dir}}/reinventing-organizations&#34;&gt;reinventing-organizations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.amazon.com/Extreme-Programming-Explained-Embrace-Change/dp/0321278658&#34; target=&#34;_blank&#34;&gt;Extreme Programming Explained: Embrace Change, 2nd Edition&lt;/a&gt; by Kent Beck and Cynthia Andres, again.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://pragprog.com/book/mnee/release-it&#34; target=&#34;_blank&#34;&gt;Release It! - Design and Deploy Production-Ready Software&lt;/a&gt;, by Michael T. Nygard, with the &amp;lsquo;&lt;a href=&#34;https://twitter.com/@deaprendices&#34; target=&#34;_blank&#34;&gt;@deAprendices&lt;/a&gt;&amp;rsquo;s reading club&amp;rsquo;. Blog posts under the tag &lt;a href=&#34;https://alvarogarcia7.github.io/{{site.category_dir}}/release-it&#34;&gt;release-it&lt;/a&gt;

&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Books I want to finish. Usually come from another quarter:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://leanpub.com/nightowls&#34; target=&#34;_blank&#34;&gt;Why programmers work at night&lt;/a&gt; by Swizec Teller&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.redbook.io/&#34; target=&#34;_blank&#34;&gt;Readings in Database Systems, 5th Edition&lt;/a&gt; by Peter Bailis, Joseph M. Hellerstein, Michael Stonebraker, editors&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Books that have entered the queue:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://leanpub.com/serverless&#34; target=&#34;_blank&#34;&gt;Serverless - Patterns of Modern Application Design Using Microservices (Amazon Web Services Edition)&lt;/a&gt; by Obie Fernandez&lt;/li&gt;
&lt;/ul&gt;

&lt;!--

repository for WIP books:

  * [The Well-Grounded Java Developer](http://www.manning.com/evans/) by Benjamin J. Evans and Martijn Verburg
  * [Learn You a Haskell for Great Good!](http://learnyouahaskell.com/) by Miran Lipovača
  * [Working Effectively with Legacy Code](http://www.amazon.co.uk/Working-Effectively-Legacy-Robert-Martin/dp/0131177052) by Michael Feathers, again. Blog posts under the tag [wewlc](/{{site.category_dir}}/wewlc)
  * [Haskell Programming](http://haskellbook.com/), By Chris Allen and Julie Moronuki. This book is still in progress and I&#39;m reviewing it
  * [Pragmatic Thinking and Learning: Refactor Your Wetware](https://pragprog.com/book/ahptl/pragmatic-thinking-and-learning) by Andy Hunt  
  
  Books I want to finish:

  * [Refactoring](http://martinfowler.com/books/refactoring.html) by Martin Fowler, with Kent Beck, John Brant, William Opdyke, and Don Roberts
  * [Java Performance: The Definitive Guide](http://shop.oreilly.com/product/0636920028499.do) by Scott Oaks
  * [Scrum and XP from the trenches](http://www.infoq.com/minibooks/scrum-xp-from-the-trenches) by Henrik Kniberg
  * [The Leprechauns of Software Engineering](https://leanpub.com/leprechauns) by Laurent Bossavit, again. [Gift](https://twitter.com/alvarobiz/status/611799849911103488)  
  * [Functional Programming Patterns in Scala and Clojure](https://pragprog.com/book/mbfpp/functional-programming-patterns-in-scala-and-clojure) by Michael Bevilacqua-Linn

Books in the queue:

  * [Mature optimization](http://carlos.bueno.org/optimization/mature-optimization.pdf), by Carlos Bueno
  * [XUnit Test Patterns](http://xunitpatterns.com/) by Gerard Meszaros
  * [Let Over Lambda](http://letoverlambda.com/) by Doug Hoyte
  * [The Haskell Road to Logic, Math and Programming](http://fldit-www.cs.uni-dortmund.de/~peter/PS07/HR.pdf) by Kees Doets and Jan van Eijck
  * [Types and Programming Languages](http://www.cis.upenn.edu/~bcpierce/tapl/) by Benjamin C. Pierce
  * [Fundamentals of Object-oriented Design in UML](http://www.amazon.co.uk/dp/020169946X/ref=pe_385721_37038051_TE_3p_dp_1) by Meilir Page-Jones
  * [Clojure for the brave and true](http://www.braveclojure.com/#toc)
  * [How to Solve It: A New Aspect of Mathematical Method](http://press.princeton.edu/titles/669.html) by George Pólya
  * [Conceptual Mathematics: A First Introduction to Categories](http://www.amazon.com/Conceptual-Mathematics-First-Introduction-Categories/dp/052171916X) by Lawvere and Schanuel
  * [Understanding Computation: From Simple Machines to Impossible Programs](http://computationbook.com/) by Tom Stuart
  * [Programming in Haskell](http://www.cambridge.org/wm-ecommerce-web/academic/landingPage/PIHMOOC) by Graham Hutton
  * [Programming Languages: Application and Interpretation](http://cs.brown.edu/~sk/Publications/Books/ProgLangs/2007-04-26/) by Shriram Krishnamurthi
  * [Doing Math with Python](https://www.nostarch.com/doingmathwithpython) by Amit Saha. [Gift from the PyConEs 2015](https://twitter.com/alvarobiz/status/668927802159288322)
  * [Perfect Software: And Other Illusions about Testing](http://www.geraldmweinberg.com/Site/Perfect_Software.html) by Gerald M. Weinberg  
  * [Computability and Complexity - From a Programming Perspective](https://mitpress.mit.edu/books/computability-and-complexity) by Neil Deaton Jones
  * [Thinking Forth: a language and philosophy for solving problems](http://thinking-forth.sourceforge.net/) by Leo Brodie
  * [Concepts, Techniques, and Models of Computer Programming](https://mitpress.mit.edu/index.php?q=books/concepts-techniques-and-models-computer-programming) by Peter Van Roy and Seif Haridi
  * [Bridging the Communication Gap](http://books.gojko.net/bridging-the-communication-gap/) by Gojko Adzic
  * [Specification by Example](http://books.gojko.net/specification-by-example/) by Gojko Adzic
  * [The Cucumber book](https://pragprog.com/book/hwcuc/the-cucumber-book) by Matt Wynne and Aslak Hellesøy
  * [Software Architecture for Developers](https://leanpub.com/software-architecture-for-developers) by Simon Brown
  * [Object Design: Roles, Responsibilities, and Collaborations ](http://www.amazon.com/Object-Design-Roles-Responsibilities-Collaborations/dp/0201379430) by Rebecca Wirfs-Brock and Alan McKean
  * [RESTful Web APIs](http://shop.oreilly.com/product/0636920028468.do) by Leonard Richardson, Mike Amundsen, Sam Ruby
  * [RESTful Web Services Cookbook](http://shop.oreilly.com/product/9780596801694.do) by Subbu Allamaraju
  * [Building Maintainable Software](https://www.sig.eu/en/building-maintainable-software) by Joost Visser

Learning paths that have entered the queue:

  * [Software Architecture Fundamentals](http://shop.oreilly.com/category/learning-path/software-architecture-fundamentals.do)
  * [HTML5 Fundamentals](http://shop.oreilly.com/category/learning-path/html5-fundamentals.do)
  * [Designing Web APIs](http://shop.oreilly.com/category/learning-path/designing-web-apis.do)
  * [Dive Deeper into PHP Programming](http://shop.oreilly.com/category/learning-path/dive-deeper-php-programming.do)
  * [Introduction to the Modern Front-End Web](http://shop.oreilly.com/category/learning-path/intro-modern-front-end-web.do)


--&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;The ending date of the quarter is the same as the publication date
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>The role of a software consultant</title>
      <link>https://alvarogarcia7.github.io/blog/2016/06/10/role-software-consultant/</link>
      <pubDate>Fri, 10 Jun 2016 10:50:50 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2016/06/10/role-software-consultant/</guid>
      <description>&lt;p&gt;A quote from &lt;a href=&#34;http://www.reinventingorganizations.com&#34; target=&#34;_blank&#34;&gt;Reinventing Organizations&lt;/a&gt;,
about roles, job descriptions and job titles in Chapter 2.2:
Self-management (structures), page 90:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;[In] Teal Organizations [&amp;hellip;] people are not made to fit pre-defined jobs;
 their job emerge from a multitude of roles and responsibilities they pick
 up based on their interests, talents, and the needs of the organization.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Frederic Laloux, Reinventing Organizations&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;In my opinion, this is the role of the software consultant when working with a client:
even if the customer has asked for help in some parts of their activity, a senior-enough
consultant can discover other areas where they can add value, even if that new
work doesn&amp;rsquo;t have much in common with the initial request (this change should
be approved by the people that will be affected).&lt;/p&gt;

&lt;p&gt;This is also a thought that &lt;a href=&#34;https://twitter.com/@mashooq&#34; target=&#34;_blank&#34;&gt;Mash&lt;/a&gt; and &lt;a href=&#34;https://twitter.com/@sandromancuso&#34; target=&#34;_blank&#34;&gt;Sandro&lt;/a&gt; were discussing lately.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Unwritten principles for coaching, a quote</title>
      <link>https://alvarogarcia7.github.io/blog/2016/06/10/unwritten-principles-coaching/</link>
      <pubDate>Fri, 10 Jun 2016 10:49:50 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2016/06/10/unwritten-principles-coaching/</guid>
      <description>&lt;p&gt;A quote from &lt;a href=&#34;http://www.reinventingorganizations.com&#34; target=&#34;_blank&#34;&gt;Reinventing Organizations&lt;/a&gt;,
about a few unwritten principles for coaching, in Chapter 2.2:
Self-management (structures), page 70:&lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;It’s okay for teams to struggle. From struggle comes learning. And
teams that have gone through difficult moments build resilience
and a deep sense of community. The coach’s role therefore is not
to prevent foreseeable problems, but to support teams in solving
them (and later help them reflect on how they’ve grown in the
process).&lt;/li&gt;
&lt;li&gt;The coach’s role is to let teams make their own choices, even if she
believes she knows a better solution.&lt;/li&gt;
&lt;li&gt;The coach supports the team mostly by asking insightful questions
and mirroring what she sees. She helps teams frame issues and
solutions in light of [the company’s] purpose and its holistic approach
to care.&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The starting point is always to look for enthusiasm, strengths, and
existing capabilities within the team. The coach projects trust that
the team has all it takes to solve the problems it faces.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Frederic Laloux, Reinventing Organizations&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Self-Study in June 2016</title>
      <link>https://alvarogarcia7.github.io/blog/2016/06/01/self-study/</link>
      <pubDate>Wed, 01 Jun 2016 21:47:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2016/06/01/self-study/</guid>
      <description>

&lt;h2 id=&#34;diversitymediocrityillusion&#34;&gt;DiversityMediocrityIllusion&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by &lt;a href=&#34;http://martinfowler.com/bliki/DiversityMediocrityIllusion.html&#34; target=&#34;_blank&#34;&gt;Martin Fowler&lt;/a&gt; (on his bliki) about the diversity in conferences and the profession. How it is our job to incentive a positive feedback cycle that brings more diverse people into the workforce.&lt;/p&gt;

&lt;p&gt;Explains how they do it in ThoughtWorks and how they have changed in the last decade.&lt;/p&gt;

&lt;p&gt;Tags: martin-fowler, diversity, gender, workforce, conference, profession, bliki&lt;/p&gt;

&lt;h2 id=&#34;what-do-cryptic-github-comments-mean&#34;&gt;What do cryptic Github comments mean?&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.freecodecamp.com/what-do-cryptic-github-comments-mean-9c1912bcc0a4&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Alex Beregszaszi on the abbreviations used in Github comments and pull requests.&lt;/p&gt;

&lt;p&gt;Tags: github, pull-request, alex-beregszaszi, abbreviation&lt;/p&gt;

&lt;h2 id=&#34;6-erreurs-à-éviter-en-tant-que-développeur-freelance&#34;&gt;6 erreurs à éviter en tant que développeur freelance&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@adrienjoly/enseignements-apr%C3%A8s-1-an-d-erreurs-en-tant-que-d%C3%A9veloppeur-freelance-916f855efd9b&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; (in French) by Adrien Joly on the mistakes freelancers shouldn&amp;rsquo;t do when working with clients.&lt;/p&gt;

&lt;p&gt;Tags: adrien-joly, freelance, list, mistake, french&lt;/p&gt;

&lt;h2 id=&#34;agile-methodology-s-promise-seems-to-fall-short-in-the-face-of-reality&#34;&gt;Agile Methodology’s Promise Seems To Fall Short in the Face of Reality&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@pagalvin/agile-methodology-s-promise-seems-to-fall-short-in-the-face-of-reality-b16d3e775dbe&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; on an experience by Paul Galvin on some failing agile implementations.&lt;/p&gt;

&lt;p&gt;Tags: paul-galvin, agile, reality, agility, team-management&lt;/p&gt;

&lt;h2 id=&#34;how-sharing-other-people-s-feelings-can-make-you-sick&#34;&gt;How sharing other people’s feelings can make you sick&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://www.newscientist.com/article/mg23030732-900-how-sharing-other-peoples-feelings-can-make-you-sick/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Emma Young on how being empathic to others can make you sick on their own illness. How illness can be socially transmitted, by loved ones or even by strangers.&lt;/p&gt;

&lt;p&gt;How algorithms (that display news) can affect your own well-being and how this is reduced by using compassion instead of empathy.&lt;/p&gt;

&lt;p&gt;Borders on the difference of empathy vs compassion.&lt;/p&gt;

&lt;p&gt;Tags: emma-young, empathy, compassion, feeling, team-management, vent-free-zone, sickness, illness&lt;/p&gt;

&lt;h2 id=&#34;aws-lambda-for-beginners&#34;&gt;AWS Lambda for Beginners&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://dzone.com/articles/aws-lambda-for-beginners&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Mashooq Badar on an introduction to AWS Lambdas, where the basics are covered until getting a Lambda service in production. Using Python or Java.&lt;/p&gt;

&lt;p&gt;Tags: mashooq-badar, serverless, aws, aws-lambda, lambda, python, java, devops, serverless-architecture&lt;/p&gt;

&lt;h2 id=&#34;advanced-logging-with-the-javascript-console&#34;&gt;Advanced Logging with the JavaScript Console&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched &lt;a href=&#34;https://egghead.io/series/js-console-for-power-users&#34; target=&#34;_blank&#34;&gt;this course&lt;/a&gt; by Mykola Bilokonsky at egghead.io.&lt;/p&gt;

&lt;p&gt;In it, he covers the following methods on the console:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;warn&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;error&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;info&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;debug&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The amount of parameters does not matter, it will put a space in between. printing an object will print its values&lt;/p&gt;

&lt;p&gt;console.log with the C&amp;rsquo;s printf syntax, as long as the first parameter is a string&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;  &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;o&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;an&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;object&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;CSS&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;group&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;groupCollapsed&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;groupEnd&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Tags: mykola-bilokonsky, logging, javascript, console, egghead, course&lt;/p&gt;

&lt;h2 id=&#34;after-work-is-what-determines-your-future-spend-one-hour-per-day-doing-these-5-things-and-your-life-will-change-forever&#34;&gt;After work, is what determines your future! Spend one hour per day doing these 5 things and your life will change forever!&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://www.linkedin.com/pulse/after-work-what-determines-your-future-spend-one-hour-sundaram&#34; target=&#34;_blank&#34;&gt;this post&lt;/a&gt; by Kalyana Sundaram on the activities we do at night, after a day&amp;rsquo;s work and how they influence our learning.&lt;/p&gt;

&lt;p&gt;Tags: kalyana-sundaram, after-work, career, career-management, learning, lifelong-learning&lt;/p&gt;

&lt;h2 id=&#34;expert-resumé-driven-development&#34;&gt;Expert Resumé Driven Development&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://dev.to/tra/expert-resum-driven-development&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Tariq Ali, where he explains the Resume-Driven Development, as a subset of the Principal-Agent Problem:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The Principal (management) hires an Agent (a developer) to build a program and
allow the Agent to choose the tech stack. But the Agent&amp;rsquo;s interest (making his resumé
more impressive) can be orthogonal to the Principal&amp;rsquo;s interest (producing a great
product by using the &amp;ldquo;right tool&amp;rdquo; for the job). If the Principal allows the Agent to
do as he wish, then the Agent will do as he wishes, thereby leading to the Agent to
prosper and the Principal to suffer.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;References the &lt;a href=&#34;http://www.gartner.com/technology/research/methodologies/hype-cycle.jsp&#34; target=&#34;_blank&#34;&gt;Gartner Hype Cycle&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tags: tariq-ali, resume-driven-development, hype, cycle, hype-cycle, career, professional-career&lt;/p&gt;

&lt;h2 id=&#34;resume-driven-development&#34;&gt;Resume Driven Development&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://radar.oreilly.com/2014/10/resume-driven-development.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by  Mike Loukides about the problem of finding a technical person based on CVs and the &lt;a href=&#34;https://en.wikipedia.org/wiki/Law_of_the_instrument&#34; target=&#34;_blank&#34;&gt;Law of the instrument&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;[&amp;hellip;] the inability of a technical team to specify what they really want
 (a developer with good programming taste and instincts), and
 instead hiring someone who has a particular skill or credential [&amp;hellip;]&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tags: law-instrument, mike-loukides, cv, career, resume-driven-development&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>About Alvaro Garcia</title>
      <link>https://alvarogarcia7.github.io/blog/about/</link>
      <pubDate>Sun, 01 May 2016 00:08:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/about/</guid>
      <description>&lt;img src=&#34;https://pbs.twimg.com/profile_images/378800000810292601/936ad5646696ac29610f2c1ca304936a.jpeg&#34; class=&#34;left&#34; title=&#34;&#34;&gt;


&lt;p&gt;Alvaro is a software developer who firmly believes in the eXtreme Programming methodology. He&amp;rsquo;s embarked on a lifelong learning process and is now in a symbiotic exchange process with the &lt;a href=&#34;http://www.meetup.com/Barcelona-Software-Craftsmanship/&#34; target=&#34;_blank&#34;&gt;Barcelona Software Craftsmanship meetup&lt;/a&gt;, where he is a co-organizer.&lt;/p&gt;

&lt;p&gt;He enjoys reading and reviewing technology books, providing feedback to the author whenever possible, to create the best experience for the final reader&lt;/p&gt;

&lt;p&gt;Alvaro has been working in the IT industry for product companies, consulting firms and on his own since 2005 and occasionally blogs at &lt;a href=&#34;https://alvarogarcia7.github.io&#34; target=&#34;_blank&#34;&gt;alvarogarcia7.github.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I sometimes tweet under the handle &lt;a href=&#34;http://twitter.com/@alvarobiz&#34; target=&#34;_blank&#34;&gt;@alvarobiz&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you need to improve / fix a post in this blog, please leave a comment or send a pull request to this &lt;a href=&#34;https://github.com/alvarogarcia7/blog_source/tree/source/source/_posts&#34; target=&#34;_blank&#34;&gt;repository&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Self-Study in May 2016</title>
      <link>https://alvarogarcia7.github.io/blog/2016/05/01/self-study/</link>
      <pubDate>Sun, 01 May 2016 00:08:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2016/05/01/self-study/</guid>
      <description>

&lt;h2 id=&#34;being-a-developer-after-40&#34;&gt;Being A Developer After 40&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.freecodecamp.com/being-a-developer-after-40-3c5dd112210c&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Adrian Kosmaczewski on the required topics to be a developer at age 40 and keep enjoying it:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Forget The Hype&lt;/li&gt;
&lt;li&gt;Choose Your Galaxy Wisely&lt;/li&gt;
&lt;li&gt;Learn About Software History&lt;/li&gt;
&lt;li&gt;Keep on Learning&lt;/li&gt;
&lt;li&gt;Teach&lt;/li&gt;
&lt;li&gt;Workplaces Suck&lt;/li&gt;
&lt;li&gt;Know Your Worth&lt;/li&gt;
&lt;li&gt;Send The Elevator Down&lt;/li&gt;
&lt;li&gt;LLVM&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;He references galaxy, the big stack you are positioned (JVM, .net, PHP, etc). He makes a special mention of the LLVM&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Take conscious decisions in your life. Be aware of your actions and their effect. Do not blush or be embarrased for changing your opinions. Say “I’m sorry” when required. Listen. Do not be a hotshot. Have integrity and self-respect.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Recommends these books:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Dealers of Lightning by Michael A. Hiltzik&lt;/li&gt;
&lt;li&gt;Revolution in the Valley by Andy Hertzfeld&lt;/li&gt;
&lt;li&gt;The Cathedral and the Bazaar by Eric S. Raymond&lt;/li&gt;
&lt;li&gt;The Success of Open Source by Steven Weber&lt;/li&gt;
&lt;li&gt;The Old New Thing by Raymond Chen&lt;/li&gt;
&lt;li&gt;The Mythical Man Month by Frederick P. Brooks Jr.&lt;/li&gt;
&lt;li&gt;Peopleware by Tom DeMarco and Tim Lister&lt;/li&gt;
&lt;li&gt;The Psychology of Software Programming by Gerald M. Weinberg&lt;/li&gt;
&lt;li&gt;Facts and Fallacies of Software Engineering by Robert L. Glass&lt;/li&gt;
&lt;li&gt;The Design of Everyday Things by Don Norman&lt;/li&gt;
&lt;li&gt;Agile!: The Good, the Hype and the Ugly by Bertrand Meyer&lt;/li&gt;
&lt;li&gt;Rework by Jason Fried and David Heinemeier Hansson&lt;/li&gt;
&lt;li&gt;Geekonomics by David Rice&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tags: adrian-kosmaczewski, career, profession, age, galaxy, long-term, book&lt;/p&gt;

&lt;h2 id=&#34;firing-people&#34;&gt;Firing people&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://zachholman.com/talk/firing-people&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Zach Holman on firing people at your current work, both from the perspective of the employee (fired), employer, coworker.&lt;/p&gt;

&lt;p&gt;Also explains his personal experience of being fired from Github.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You’ll know the difference between doing far and away your best work, and doing work that is still good, but just nominally better than what you’ve been doing. Once you catch yourself adjusting to that incremental progression… maybe it’s time to leave, to change things up&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tags: zach-holman, github, team-management, firing, coworker, employee, employer, job, relationship, next&lt;/p&gt;

&lt;h2 id=&#34;10-design-principles-for-developers&#34;&gt;10 design principles — for developers&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@nirbenita/the-10-design-heuristics-for-developers-1e70a9dc58a7&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; that explains what are the 10 design principles for programmers, as outlined by Jakob Nielsen. The article itself is by Nir Benita&lt;/p&gt;

&lt;p&gt;Tags: design-principle, ux, jakob-nielsen, nir-benita, usability, testing, list&lt;/p&gt;

&lt;h2 id=&#34;design-patterns-coming-full-circle-part-two&#34;&gt;Design Patterns — Coming Full Circle, Part Two&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/swlh/design-patterns-coming-full-circle-part-two-ced2c69e4724#.x8ud7eeqm&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; that explains how design patterns can be observed and then discovered and shows a list of four patterns dot working with data, by flux.io. Article by Jen Carlile&lt;/p&gt;

&lt;p&gt;Tags: design-pattern, data, pattern, flux, flux-io, pattern-catalog, jen-carlile&lt;/p&gt;

&lt;h2 id=&#34;why-i-m-ending-my-github-streak-after-844-days&#34;&gt;Why I’m Ending my Github Streak after 844 Days&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@karan/why-i-m-ending-my-github-streak-after-844-days-80fd014dc8df&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Karan Goel on the mechanics of following a pattern, of an activity sliced in small parts (1 problem a day or half an hour) and how this can be counterproductive sometimes.&lt;/p&gt;

&lt;p&gt;Discusses ROI of this type of activity at the beginning of your career and later.&lt;/p&gt;

&lt;p&gt;Tags: karan-goel, github, streak, python, code, everyday, practice, deliberate-practice, career, career-management&lt;/p&gt;

&lt;h2 id=&#34;good-lessons-learned-from-past-jobs&#34;&gt;Good lessons learned from past jobs&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.kartones.net/post/good-lessons-learned-from-past-jobs/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Diego &amp;lsquo;Kartones&amp;rsquo; on a synopsis of his work experience, job by job and what he has learned on each job.&lt;/p&gt;

&lt;p&gt;Tags: diego-kartones, job, professional-career, career&lt;/p&gt;

&lt;h2 id=&#34;too-much-work-in-progress&#34;&gt;Too Much Work In Progress&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://monospacedmonologues.com/post/144137568985/too-much-work-in-progress&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Samir Talwar on factors that indicate work in progress.&lt;/p&gt;

&lt;p&gt;Tags: wip, work-in-progress, list, samir-talwar&lt;/p&gt;

&lt;h2 id=&#34;testdouble&#34;&gt;TestDouble&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.martinfowler.com/bliki/TestDouble.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Martin Fowler describing the test doubles that Gerard Meszaros describes in xUnit Test Patterns.&lt;/p&gt;

&lt;p&gt;Tags: test-double, martin-fowler, gerard-meszaros, stub, fake, mock, dummy, spy, xunit, junit, pattern, test-pattern&lt;/p&gt;

&lt;h2 id=&#34;scaling-to-12-million-concurrent-connections-how-migratorydata-did-it&#34;&gt;Scaling to 12 Million Concurrent Connections: How MigratoryData Did It&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://mrotaru.wordpress.com/2013/10/10/scaling-to-12-million-concurrent-connections-how-migratorydata-did-it/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Mihai Rotaru on how MigratoryData scaled to 12 million concurrent connections in a 1U server. They explain what optimizations they did in order to achieve this.&lt;/p&gt;

&lt;p&gt;Tags: migratorydata, mihai-rotaru, concurrent-connection, 1u-server, scalability, websocket&lt;/p&gt;

&lt;h2 id=&#34;do-what-you-love&#34;&gt;Do what you love&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://www.linkedin.com/pulse/do-what-you-love-jorge-diaz&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Jorge Diaz on doing what takes you out of your comfort zone, changing careers, and life-work in general.&lt;/p&gt;

&lt;p&gt;Cites this &lt;a href=&#34;https://www.ted.com/talks/scott_dinsmore_how_to_find_work_you_love/transcript?language=en&#34; target=&#34;_blank&#34;&gt;TED talk: How to find work you love&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tags: jorge-diaz, work, life, career, comfort-zone, scott-dinsmore, career-management&lt;/p&gt;

&lt;h2 id=&#34;jhipster-the-best-way-to-breed-a-new-app&#34;&gt;JHipster - The best way to breed a new app&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://speakerdeck.com/olbpetersson/jhipster-the-best-way-to-breed-a-new-app&#34; target=&#34;_blank&#34;&gt;these slides&lt;/a&gt; by Ola Petersson, where he describes the architecture and contents of the jHipster, its pros and cons.&lt;/p&gt;

&lt;p&gt;Tags: jhipster, ola petersson, java, code-generation, code-generator, microservice&lt;/p&gt;

&lt;h2 id=&#34;how-going-to-coding-events-helped-me-get-an-awesome-job&#34;&gt;How going to coding events helped me get an awesome job&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.freecodecamp.com/networking-at-meet-ups-getting-hired-f0f7c4f4681a&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Gwendolyn Faraday on how to kickstart a career in web development, attending events, pairing and networking. That netted her some interviews to start programming for a living.&lt;/p&gt;

&lt;p&gt;Tags: networking, gwendolyn-faraday, event, job, learn-to-code&lt;/p&gt;

&lt;h2 id=&#34;maze-generation-algorithm-recap&#34;&gt;Maze Generation: Algorithm Recap&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://weblog.jamisbuck.org/2011/2/7/maze-generation-algorithm-recap&#34; target=&#34;_blank&#34;&gt;this list&lt;/a&gt; of maze-generation algorithms by Jamis Buck. Including:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;recursive backtracker&lt;/li&gt;
&lt;li&gt;Eller’s algorithm&lt;/li&gt;
&lt;li&gt;Kruskal’s algorithm&lt;/li&gt;
&lt;li&gt;Prim’s algorithm&lt;/li&gt;
&lt;li&gt;recursive division algorithm&lt;/li&gt;
&lt;li&gt;Aldous-Broder algorithm&lt;/li&gt;
&lt;li&gt;Wilson’s algorithm&lt;/li&gt;
&lt;li&gt;Hunt-and-Kill algorithm&lt;/li&gt;
&lt;li&gt;Growing Tree algorithm&lt;/li&gt;
&lt;li&gt;Binary Tree algorithm&lt;/li&gt;
&lt;li&gt;Sidewinder algorithm&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tags: recursive-backtracker,eller-algorithm,kruskal-algorithm,prim-algorithm,recursive-division-algorithm,aldous-broder-algorithm,wilson-algorithm,hunt-and-kill-algorithm,growing-tree-algorithm,binary-tree-algorithm,sidewinder-algorithm, jamis-buck, maze, maze-generation, algorithm, list&lt;/p&gt;

&lt;h2 id=&#34;the-poverty-of-constraints&#34;&gt;The Poverty of Constraints&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://weblog.jamisbuck.org/2016/3/19/poverty-of-constraints.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Jamis Buck on interpreting two Korean proverbs in the world of software:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A dutiful son comes from a poor home&lt;/li&gt;
&lt;li&gt;A poor house has many children&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tags: proverb, korea, philosophy, software, constraint, jamis-buck&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Quote: Characterization tests</title>
      <link>https://alvarogarcia7.github.io/blog/2016/04/18/quote-characterization-tests/</link>
      <pubDate>Mon, 18 Apr 2016 00:56:54 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2016/04/18/quote-characterization-tests/</guid>
      <description>&lt;p&gt;In Working effectively with legacy code, Michael Feathers talks a type of tests to define or characterize the current behavior of the legacy system:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;In nearly every legacy system, what the system does is more important than what it is supposed to do.&lt;/p&gt;

&lt;p&gt;A &lt;em&gt;characterization test&lt;/em&gt; is a test that characterizes the actual behavior of a piece of code. [&amp;hellip;] The test document the actual current behavior of the system. Here is a little algorithm for writing algorithm for writing characterization tests:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Use a piece of code in a test harness&lt;/li&gt;
&lt;li&gt;Write an assertion that you know will fail&lt;/li&gt;
&lt;li&gt;Let the failure tell you what the behavior is.&lt;/li&gt;
&lt;li&gt;Change the test so that it expects the behavior that the code produces&lt;/li&gt;
&lt;li&gt;Repeat&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;M Feathers, in the chapter 13&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;, section &amp;ldquo;Characterization tests&amp;rdquo; of Working effectively with legacy code. Actual page, 186.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Later on, he goes to describe them in a bigger environment:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Characterization tests record the actual behavior of a piece of code. If we find something unexpected when we write them, it pays to get some clarification. It could be a bu. That doesn&amp;rsquo;t mean that we don&amp;rsquo;t include the test in our test suite; instead, we should mark it as suspicious an find out what th effect would be of fixing it.&lt;/p&gt;

&lt;p&gt;M Feathers, in the chapter 13&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:2&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;, section &amp;ldquo;Characterization tests&amp;rdquo; of Working effectively with legacy code. Actual page, 188.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;Chapter 13, &amp;ldquo;I need to make a change, but I don&amp;rsquo;t know what tests to write&amp;rdquo;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;Chapter 13, &amp;ldquo;I need to make a change, but I don&amp;rsquo;t know what tests to write&amp;rdquo;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:2&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Brownish Greenfield Gilded Rose Kata</title>
      <link>https://alvarogarcia7.github.io/blog/2016/04/18/brownish-greenfield-gilded-rose-kata-formulation/</link>
      <pubDate>Mon, 18 Apr 2016 00:44:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2016/04/18/brownish-greenfield-gilded-rose-kata-formulation/</guid>
      <description>

&lt;p&gt;(This formulation has been copied and adapted from &lt;a href=&#34;https://twitter.com/NotMyself&#34; target=&#34;_blank&#34;&gt;Bobby Johnson&lt;/a&gt; and &lt;a href=&#34;https://twitter.com/TerryHughes&#34; target=&#34;_blank&#34;&gt;Terry Hughes&lt;/a&gt;&amp;rsquo;s &lt;a href=&#34;https://github.com/NotMyself/GildedRose&#34; target=&#34;_blank&#34;&gt;repository&lt;/a&gt;)&lt;/p&gt;

&lt;h2 id=&#34;formulation&#34;&gt;Formulation&lt;/h2&gt;

&lt;p&gt;Hi and welcome to team Gilded Rose. As you know, we are a small inn with a prime location in a prominent city ran by a friendly innkeeper named Allison. We also buy and sell only the finest goods.&lt;/p&gt;

&lt;p&gt;Unfortunately, our goods are constantly degrading in quality as they approach their sell by date. We have a system in place that updates our inventory for us. It was developed by a no-nonsense type named Leeroy, who has moved on to new adventures.&lt;/p&gt;

&lt;p&gt;Your task is to rewrite the system using an old class, that already exists.
First an introduction to our system:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;All items have a &lt;code&gt;SellIn&lt;/code&gt; value which denotes the number of days we have to sell the item&lt;/li&gt;
&lt;li&gt;All items have a &lt;code&gt;Quality&lt;/code&gt; value which denotes how valuable the item is&lt;/li&gt;
&lt;li&gt;At the end of each day our system lowers both values for every item&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Pretty simple, right? Well this is where it gets interesting:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Once the sell by date has passed, &lt;code&gt;Quality&lt;/code&gt; degrades twice as fast&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;Quality&lt;/code&gt; of an item is never negative&lt;/li&gt;
&lt;li&gt;&amp;ldquo;Aged Brie&amp;rdquo; actually increases in &lt;code&gt;Quality&lt;/code&gt; the older it gets&lt;/li&gt;
&lt;li&gt;&amp;ldquo;Sulfuras&amp;rdquo;, being a legendary item, never has to be sold or decreases in &lt;code&gt;Quality&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;Quality&lt;/code&gt; of an item is never more than 50, however &amp;ldquo;Sulfuras&amp;rdquo; is a legendary item and as such its &lt;code&gt;Quality&lt;/code&gt; is 80 and it never alters.&lt;/li&gt;
&lt;li&gt;&amp;ldquo;Backstage passes&amp;rdquo;, like aged brie, increases in &lt;code&gt;Quality&lt;/code&gt; as it&amp;rsquo;s &lt;code&gt;SellIn&lt;/code&gt; value approaches; &lt;code&gt;Quality&lt;/code&gt; increases by 2 when there are 10 days or less and by 3 when there are 5 days or less but &lt;code&gt;Quality&lt;/code&gt; drops to 0 after the concert&lt;/li&gt;
&lt;li&gt;&amp;ldquo;Conjured&amp;rdquo; items degrade in &lt;code&gt;Quality&lt;/code&gt; twice as fast as normal items&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Your task is to create the system from scratch, with only a restriction: you must use the class &lt;code&gt;Item&lt;/code&gt; that Leeroy developed. This class is:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;unmodifiable, if you do, a goblin in the corner who will insta-rage and one-shot you as he doesn&amp;rsquo;t believe in shared code ownership. This prohibition applies to modifying it, deleting it, adding new methods, deleting methodts, changing visibility of stuff, etc&lt;/li&gt;
&lt;li&gt;cannot be inherited, if you do, a goblin in the corner who will insta-rage and one-shot you as he doesn&amp;rsquo;t believe in code inheritance&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The &lt;code&gt;Item&lt;/code&gt; class can be found in many programming languages in &lt;a href=&#34;https://github.com/emilybache/GildedRose-Refactoring-Kata&#34; target=&#34;_blank&#34;&gt;Emily Bache&amp;rsquo;s repository&lt;/a&gt;. You are looking for the class / type &lt;code&gt;Item&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Happy katas and happy koding. Please be careful with the goblin!&lt;/p&gt;

&lt;h2 id=&#34;how-to-start&#34;&gt;How to start&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Create a new repo&lt;/li&gt;
&lt;li&gt;Find the class &lt;code&gt;Item&lt;/code&gt; in &lt;a href=&#34;https://github.com/emilybache/GildedRose-Refactoring-Kata&#34; target=&#34;_blank&#34;&gt;this repo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Use TDD to develop the functionality. Remember, &lt;code&gt;Item&lt;/code&gt; will stay as it is.&lt;/li&gt;
&lt;li&gt;Have fun&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;acknowledgements&#34;&gt;Acknowledgements&lt;/h2&gt;

&lt;p&gt;Thanks to &lt;a href=&#34;https://twitter.com/@trikitrok&#34; target=&#34;_blank&#34;&gt;@trikitrok&lt;/a&gt; for the idea, &lt;a href=&#34;https://twitter.com/NotMyself&#34; target=&#34;_blank&#34;&gt;Bobby Johnson&lt;/a&gt; and &lt;a href=&#34;https://twitter.com/TerryHughes&#34; target=&#34;_blank&#34;&gt;Terry Hughes&lt;/a&gt; for allowing me to copy and modify their kata.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Faster site generation with a native Octopress 2</title>
      <link>https://alvarogarcia7.github.io/blog/2016/04/17/faster-site-generation-native-octopress/</link>
      <pubDate>Sun, 17 Apr 2016 23:39:23 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2016/04/17/faster-site-generation-native-octopress/</guid>
      <description>

&lt;p&gt;Note: this article is an answer to &lt;a href=&#34;../../../../2015/07/13/faster-site-generation-for-octopress-2/&#34;&gt;a previous one&lt;/a&gt;, about the same topic: a tool for a faster site generation while developing / writing articles, using octopress 2.&lt;/p&gt;

&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;Octopress 2 packs, out of the box, some tasks to speed up the site generation while you&amp;rsquo;re writing articles:&lt;/p&gt;

&lt;p&gt;Isolate a post:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# usage rake isolate[my-post]&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;desc&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;Move all other posts than the one currently being worked on to a temporary stash location (stash) so regenerating the site happens much more quickly.&amp;quot;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;task&lt;/span&gt; &lt;span class=&#34;ss&#34;&gt;:isolate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;ss&#34;&gt;:filename&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;do&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;stash_dir&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;#{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;source_dir&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;#{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stash_dir&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;
  &lt;span class=&#34;no&#34;&gt;FileUtils&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mkdir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stash_dir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;unless&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;File&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;exist?&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stash_dir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;no&#34;&gt;Dir&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;glob&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;#{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;source_dir&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;#{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;posts_dir&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/*.*&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;do&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;post&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;system&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;git update-index --assume-unchanged &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;#{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;post&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;unless&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;post&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;include?&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;filename&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;no&#34;&gt;FileUtils&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mv&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;post&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;stash_dir&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;unless&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;post&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;include?&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;filename&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;end&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Integrate with the rest of the posts:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;&lt;span class=&#34;n&#34;&gt;desc&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;Move all stashed posts back into the posts directory, ready for site generation.&amp;quot;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;task&lt;/span&gt; &lt;span class=&#34;ss&#34;&gt;:integrate&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;do&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;posts_dir&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;#{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;source_dir&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;#{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;posts_dir&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/&amp;quot;&lt;/span&gt;
  &lt;span class=&#34;no&#34;&gt;Dir&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;glob&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;#{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;source_dir&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;#{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stash_dir&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/*.*&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;do&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;post&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;
    &lt;span class=&#34;no&#34;&gt;FileUtils&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mv&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;post&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;posts_dir&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;full_path&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;#{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;posts_dir&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;#{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;post&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;reverse&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;first&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;system&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;git update-index --no-assume-unchanged &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;#{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;full_path&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;end&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;

&lt;p&gt;(at the folder where the Rakefile is located)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;isolate the selected file. Specify the pattern to keep.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;rake isolate&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;draft&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;write the new content&lt;/li&gt;
&lt;li&gt;commit to git&lt;/li&gt;
&lt;li&gt;integrate with the rest of the files&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;rake integrate
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;git push&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;When I needed this tool, to speed up my feedback cycle, I didn&amp;rsquo;t find any that did this job, so I created &lt;a href=&#34;../../../../2015/07/13/faster-site-generation-for-octopress-2/&#34;&gt;a small tool for this same purpose&lt;/a&gt;. Unfortunately, there was one, so close to my nose that I could not find it. I was reinventing the wheel.&lt;/p&gt;

&lt;p&gt;It is better to switch to a tool that has been tested by more users, that has received the community&amp;rsquo;s approval than a custom-made tool.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Self-Study in April 2016</title>
      <link>https://alvarogarcia7.github.io/blog/2016/04/01/self-study/</link>
      <pubDate>Fri, 01 Apr 2016 00:08:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2016/04/01/self-study/</guid>
      <description>

&lt;h2 id=&#34;deliberate-practice-what-it-is-and-why-you-need-it&#34;&gt;Deliberate Practice: What It Is and Why You Need It&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Corbett Barr on what is deliberate practice and why it is needed to become an expert in a given domain field.&lt;/p&gt;

&lt;p&gt;The four essential components:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Motivation&lt;/li&gt;
&lt;li&gt;Tailored (practice)&lt;/li&gt;
&lt;li&gt;Feedback&lt;/li&gt;
&lt;li&gt;Repetion
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tags: corbett-barr, deliberate-practice, expert, practice, anders-ericsson, talent, professional-development, career&lt;/p&gt;

&lt;h2 id=&#34;10-features-i-wish-java-would-steal-from-the-kotlin-language&#34;&gt;10 Features I Wish Java Would Steal From the Kotlin Language&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.jooq.org/2016/03/31/10-features-i-wish-java-would-steal-from-the-kotlin-language/&#34; target=&#34;_blank&#34;&gt;this list of features&lt;/a&gt; that the Kotlin Language has that would be an improvement for the Java language. By Lukas Eder&lt;/p&gt;

&lt;p&gt;Tags: list, lukas-eder, kotlin, java, comparison, language, jooq&lt;/p&gt;

&lt;h2 id=&#34;how-we-built-uber-engineering-s-highest-query-per-second-service-using-go&#34;&gt;How we built Uber engineering&amp;rsquo;s highest query per second service using Go&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://eng.uber.com/go-geofence/&#34; target=&#34;_blank&#34;&gt;this post&lt;/a&gt; by Kai Wei on a microservice they&amp;rsquo;ve built using Go.&lt;/p&gt;

&lt;p&gt;Explains the reasons for choosing that algorithm for geofencing, the performance they&amp;rsquo;re achieving, and the architecture.&lt;/p&gt;

&lt;p&gt;Tags: uber, go, microservice, performance, geofence, geofencing, rps, go-memory-model, kai-wei&lt;/p&gt;

&lt;h2 id=&#34;unwinding-uber-s-most-efficient-service&#34;&gt;Unwinding Uber&amp;rsquo;s Most Efficient Service&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@buckhx/unwinding-uber-s-most-efficient-service-406413c5871d&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Buck Heroux commenting on the decisions of Uber for building the geofencing microservice (above read).&lt;/p&gt;

&lt;p&gt;Explains the different alternatives for algorithms in this problem space and has implemented them in go. Provides a benchmark for comparing those, including a profiling session.&lt;/p&gt;

&lt;p&gt;Tags: s2, quadtree, rtree, brute-force, geofence, geofencing, uber, comment, buck-heroux, go, read-on-read, meta-read&lt;/p&gt;

&lt;h2 id=&#34;lawful-hacking-and-continuing-vulnerabilities&#34;&gt;Lawful Hacking and Continuing Vulnerabilities&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://www.schneier.com/blog/archives/2016/03/lawful_hacking_.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Bruce Schneier on the stance the FBI is taking in regards to vulnerabilities discovered in Apple&amp;rsquo;s devices.&lt;/p&gt;

&lt;p&gt;Tags: bruce-schneier, apple, security, fbi, vulnerability, exploit, law, hacking&lt;/p&gt;

&lt;h2 id=&#34;a-side-project-helped-jumpstart-my-career-life-learning&#34;&gt;A Side Project Helped Jumpstart My Career — Life Learning&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/life-learning/a-side-project-helped-jumpstart-my-career-7cd6f8e9b07f&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Dave Gerhardt on how making a side project happen affected his life and his skills.&lt;/p&gt;

&lt;p&gt;Some of the reasons for doing it include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It forces you to figure stuff out&lt;/li&gt;
&lt;li&gt;The only way to learn is by doing&lt;/li&gt;
&lt;li&gt;It gets your brain working on something other than your job&lt;/li&gt;
&lt;li&gt;You have to create your own network&lt;/li&gt;
&lt;li&gt;You are the CEO&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tags: long-life-learning, continuous-learning, side-project, dave-gerhardt, drift, professional-development, personal-development, business, career&lt;/p&gt;

&lt;h2 id=&#34;fun-jekyll-tricks&#34;&gt;Fun Jekyll Tricks&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.madebymarket.com/blog/dev/fun-jekyll-tricks.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Brian Knapp where he explains some tips and tricks of jekyll (in which octopress is based on): speed, deployment, subcategories inside the blog, _data, _includes.&lt;/p&gt;

&lt;p&gt;Tags: brian-knapp, jekyll, octopress, tip-and-trick, improvement, subcategory, meta, automation, deployment&lt;/p&gt;

&lt;h2 id=&#34;la-ola-que-llega&#34;&gt;La ola que llega&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://us2.campaign-archive2.com/?u=374c664073e1a1fa3deca53b4&amp;amp;id=f8a8ee92cc&#34; target=&#34;_blank&#34;&gt;this bonilista&lt;/a&gt; by David Bonilla, where he explains (in Spanish) the &amp;lsquo;contractor&amp;rsquo; phenomenon arriving to Spain, 2-3 years after being in other countries and the effects that this could have both for workers and companies.&lt;/p&gt;

&lt;p&gt;Tags: bonilista, david-bonilla, contractor&lt;/p&gt;

&lt;h2 id=&#34;10-razones-por-las-que-este-sábado-deberías-ir-a-un-code-retreat&#34;&gt;10 razones por las que este sábado deberías ir a un code retreat&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://francho.org/2015/11/10/10-razones-para-ir-a-un-coderetreat/&#34; target=&#34;_blank&#34;&gt;this list&lt;/a&gt; of reasons for attending a code retreat, by Francho Joven, who I met in the Global Day Of Code Retreat (GDCR) &amp;lsquo;15 in Zaragoza&lt;/p&gt;

&lt;p&gt;Tags: francho-joven, list, zaragoza, code-retreat, gdcr&lt;/p&gt;

&lt;h2 id=&#34;meaningful-work-through-passion-not-genius&#34;&gt;Meaningful Work through Passion, not Genius&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched &lt;a href=&#34;https://www.youtube.com/watch?v=pIYUMwxKFzo&#34; target=&#34;_blank&#34;&gt;this talk&lt;/a&gt; on the importance of hard work and how it can be mistaken as genious. By Malcolm Gladwell&lt;/p&gt;

&lt;p&gt;Tags: malcolm-gladwell, passion, genius, work, time-management, productivity, career, mastery-autonomy-purpose&lt;/p&gt;

&lt;h2 id=&#34;how-to-ask-your-wife-for-permission-to-spend-250-000-on-a-domain-name&#34;&gt;How to ask your wife for permission to spend $250,000 on a domain name&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@Stockphoto.com/how-to-ask-your-wife-for-permission-to-spend-250-000-on-a-domain-name-c27a3c2852e1&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Jon Yau on how they started StockPhoto.com, buying a $250,000 domain name.&lt;/p&gt;

&lt;p&gt;Tags: startup, domain, stockphoto, jon-yau&lt;/p&gt;

&lt;h2 id=&#34;sorry-developer-bootcamps-i-was-wrong&#34;&gt;Sorry, developer bootcamps: I was wrong&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@dillonforrest/sorry-developer-bootcamps-i-was-wrong-ea37fcc5572c&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Dillon Forrest on the topic of developer bootcamps. Explains why developers should not be threatened by recent graduates of these programs and describes how people pursuing these programs usually are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Intelligence&lt;/li&gt;
&lt;li&gt;Risk appetite&lt;/li&gt;
&lt;li&gt;Resilience&lt;/li&gt;
&lt;li&gt;Self-investment&lt;/li&gt;
&lt;li&gt;Entrepreneurship&lt;/li&gt;
&lt;li&gt;Growth trajectory&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tags: bootcamp, developer-bootcamp, dev-bootcamp, dillon-forrest, intelligence, risk-appetite, resilience, self-investment, entrepreneurship, growth-trajectory&lt;/p&gt;

&lt;h2 id=&#34;the-jvm-and-java-garbage-collection&#34;&gt;The JVM and Java Garbage Collection&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched &lt;a href=&#34;https://www.youtube.com/watch?v=DoJr5QQYsl8&#34; target=&#34;_blank&#34;&gt;this webcast&lt;/a&gt; about how the JVM garbage collection works. By Michael W Williams&lt;/p&gt;

&lt;p&gt;Tags: michael-williams, oracle, webcast, jvm, garbage-collection, gc,&lt;/p&gt;

&lt;h2 id=&#34;files-are-hard&#34;&gt;Files Are Hard&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://danluu.com/file-consistency/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; on why software that writes on files is difficult, based on the different filesystems that are below, and the operating system. Written by Dan Luu.&lt;/p&gt;

&lt;p&gt;Uses software product to find bugs in filesystems&lt;/p&gt;

&lt;p&gt;Tags: filesystem, file, dan-luu, analysis&lt;/p&gt;

&lt;h2 id=&#34;contrata-a-un-fracasado-con-ilusión-inquebrantable&#34;&gt;Contrata a un fracasado con ilusión inquebrantable&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.contunegocio.es/tecnologia/contrata-a-un-fracasado-con-ilusion-inquebrantable/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Alberto Mena (in Spanish) on what are the qualities that define a good programmer:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;humility&lt;/li&gt;
&lt;li&gt;failure&lt;/li&gt;
&lt;li&gt;illusion&lt;/li&gt;
&lt;li&gt;hard work&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tags: alberto-mena, spanish, team-management, success, developer, quality, developer-quality&lt;/p&gt;

&lt;h2 id=&#34;don-t-react&#34;&gt;Don&amp;rsquo;t react&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://journal.avdi.org/2016/04/14/dont-react/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Avdi Grimm on how the action vs reaction attitude. Why to prefer the former.&lt;/p&gt;

&lt;p&gt;Tags: action, reaction, social-media, avdi-grimm, productivity&lt;/p&gt;

&lt;h2 id=&#34;ftp-is-so-90-s-let-s-deploy-via-git-instead&#34;&gt;FTP is so 90&amp;rsquo;s. Let&amp;rsquo;s deploy via Git instead!&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://coderwall.com/p/xczkaq/ftp-is-so-90-s-let-s-deploy-via-git-instead&#34; target=&#34;_blank&#34;&gt;this guide&lt;/a&gt; on how to deploy using git. By Kerrick Long&lt;/p&gt;

&lt;p&gt;Tags: kerrick-long, git, deployment, webapp, application, devops&lt;/p&gt;

&lt;h2 id=&#34;job-vs-career-10-key-differences-you-need-to-understand&#34;&gt;Job vs Career: 10 Key Differences You Need To Understand&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://www.officevibe.com/blog/job-vs-career&#34; target=&#34;_blank&#34;&gt;the infographic and the article&lt;/a&gt; by Jacob Shriar on what differentiates a job from a career&lt;/p&gt;

&lt;p&gt;Tags: jacob-shriar, infographic, job-vs-career, comparison, job, career&lt;/p&gt;

&lt;h2 id=&#34;the-secret-to-employee-motivation&#34;&gt;The Secret To Employee Motivation&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://www.officevibe.com/blog/secret-employee-motivation-infographic&#34; target=&#34;_blank&#34;&gt;the infographic and the article&lt;/a&gt; by Jacob Shriar on what motivates employess: mastery, autonomy and purpose. A direct reference to Dan Pink&amp;rsquo;s &amp;ldquo;The puzzle of motivation&amp;rdquo; TED talk.&lt;/p&gt;

&lt;p&gt;Tags: jacob-shriar, motivation, employee, infographic, mastery, autonomy, purpose&lt;/p&gt;

&lt;h2 id=&#34;the-puzzle-of-motivation&#34;&gt;The puzzle of motivation&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched &lt;a href=&#34;https://www.ted.com/talks/dan_pink_on_motivation&#34; target=&#34;_blank&#34;&gt;this TED talk&lt;/a&gt; by Dan Pink on what motivates us: intrinsic vs extrinsic motivation.&lt;/p&gt;

&lt;p&gt;Also about the gap that exists between what science knows and what businesses propose.&lt;/p&gt;

&lt;p&gt;Tags: ted, ted-talk, video, dan-pink, mastery, autonomy, purpose&lt;/p&gt;

&lt;h2 id=&#34;applying-a-ceiling-to-the-bug-count&#34;&gt;Applying a ceiling to the bug count&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://techblog.king.com/applying-a-ceiling-to-the-bug-count/&#34; target=&#34;_blank&#34;&gt;this interview&lt;/a&gt;, written by Susanna Berg, on how King has reduced the amount of bugs in their backlog using an agile technique, measuring and setting a limit.&lt;/p&gt;

&lt;p&gt;Tags: susanna-berg, king, agile, bug, bug-count, defect, defect-count, per-malmen&lt;/p&gt;

&lt;h2 id=&#34;coming-up-in-2016-spring-framework-4-3-5-0&#34;&gt;Coming up in 2016: Spring Framework 4.3 &amp;amp; 5.0&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://spring.io/blog/2015/08/03/coming-up-in-2016-spring-framework-4-3-5-0&#34; target=&#34;_blank&#34;&gt;this announcement&lt;/a&gt; of Spring&amp;rsquo;s new release, 5.0, which will require java 8 and will turn most of the features into the reactive programming paradigm. By Juergen Hoeller.&lt;/p&gt;

&lt;p&gt;Tags: juergen-hoeller, spring, reactive-programming, release, announcement&lt;/p&gt;

&lt;h2 id=&#34;why-offices-are-where-work-goes-to-die&#34;&gt;Why offices are where work goes to die&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://swizec.com/blog/why-offices-are-where-work-goes-to-die/swizec/6695&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Swizec Teller explaining the downsides of working in an office as compared to working remotely.&lt;/p&gt;

&lt;p&gt;Tags: swizec-teller, remote, home-office, office, comparison, time-management&lt;/p&gt;

&lt;h2 id=&#34;the-myth-of-the-passionate-developer&#34;&gt;The Myth of the Passionate Developer&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@bm2yogi/the-myth-of-the-passionate-developer-76a41d457304&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Michael Ibarra on what are the implications of being a passionate developer, how it affects your tasks and what are the factors to a job.&lt;/p&gt;

&lt;p&gt;Tags: michael-ibarra, passion, development, job, motivation, myth&lt;/p&gt;

&lt;h2 id=&#34;mossack-fonseca-breach-wordpress-revolution-slider-plugin-possible-cause&#34;&gt;Mossack Fonseca Breach – WordPress Revolution Slider Plugin Possible Cause&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://www.wordfence.com/blog/2016/04/mossack-fonseca-breach-vulnerable-slider-revolution/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Mark Maunder, which describes an hypothesis on how the Mossack Fonseca breach could have happened. Also describes and shows how to breach a Wordpress installation with a vulnerable Revolution Slider plugin.&lt;/p&gt;

&lt;p&gt;Tags: mark-maunder, security, breach, mossack-fonseca-breach, mossack-fonseca, hypothesis, attack, plugin, revolution-slider, wordpress&lt;/p&gt;

&lt;h2 id=&#34;tim-urban-inside-the-mind-of-a-master-procrastinator&#34;&gt;Tim Urban: Inside the mind of a master procrastinator&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched &lt;a href=&#34;https://www.ted.com/talks/tim_urban_inside_the_mind_of_a_master_procrastinator&#34; target=&#34;_blank&#34;&gt;this TED talk&lt;/a&gt; from Tim Urban on how the procrastinator&amp;rsquo;s mind works, exemplified by his own career.&lt;/p&gt;

&lt;p&gt;Tags: procrastinator, procrastination, mind, time-management, tim-urban&lt;/p&gt;

&lt;h2 id=&#34;pep-20-the-zen-of-python&#34;&gt;PEP 20 &amp;ndash; The Zen of Python&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://www.python.org/dev/peps/pep-0020/&#34; target=&#34;_blank&#34;&gt;the PEP20&lt;/a&gt;, the zen of python, with special attention to this:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Explicit is better than implicit.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tags: pep-20, pep, python, zen&lt;/p&gt;

&lt;h2 id=&#34;why-i-switched-from-octopress-2-to-hugo&#34;&gt;Why I switched from Octopress 2 to Hugo&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://conscientiousprogrammer.com/blog/2015/05/31/why-i-switched-from-octopress-2-to-hugo/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Franklin Chen on the change he made on the static site generator (SSG) he used. He considered hakyll, octopress, jekyll, hugo. Was decided between hakyll and hugo for their speed but, finally, decided to use hugo for their bigger community.&lt;/p&gt;

&lt;p&gt;Tags: franklin-chen, comparison, ssg, static-site-generator, hakyll, octopress, jekyll, hugo, change, speed, statically-typed, dynamically-typed, golang, performance&lt;/p&gt;

&lt;h2 id=&#34;why-incremental-regeneration-in-jekyll-3-0-is-such-a-big-deal&#34;&gt;Why incremental regeneration in Jekyll 3.0 is such a big deal&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://idratherbewriting.com/2015/11/04/jekyll-30-released-incremental-regeneration-rocks/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Tom Johnson on one of the new features that jekyll 3.0 brings: incremental generation. How this can speed up the generation&lt;/p&gt;

&lt;p&gt;Tags: tom-johnson, incremental-generation, speed, performance, octopress-2, octopress-3, jekyll-3&lt;/p&gt;

&lt;h2 id=&#34;hugo-s3-travis-ci-oh-boy&#34;&gt;Hugo, S3, Travis CI, oh boy!&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://continuousfailure.com/post/s3_blog/&#34; target=&#34;_blank&#34;&gt;this guide&lt;/a&gt; by Alan Scherger on how to set up a specific stack for developing and deploying a static site blog.&lt;/p&gt;

&lt;p&gt;Tags: alan-scherger, static-site-generator, ssg, travis, hugo, s3&lt;/p&gt;

&lt;h2 id=&#34;deploy-your-blog-to-github-pages-automatically-using-hugo-and-travis&#34;&gt;Deploy your blog to github pages automatically using Hugo and Travis&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://rcoedo.com/post/hugo-static-site-generator/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Roman Coedo on how to deploy a hugo blog to github pages, using travis.&lt;/p&gt;

&lt;p&gt;Tags: roman-coedo, travis, hugo, github, github-pages, ssg, static-site-generator&lt;/p&gt;

&lt;h2 id=&#34;improve-octopress-with-advanced-tweaks-tips&#34;&gt;Improve Octopress with Advanced Tweaks &amp;amp; Tips&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://www.narga.net/improve-octopress-advanced-tweaks-tips/&#34; target=&#34;_blank&#34;&gt;this list&lt;/a&gt; of tips on how to improve the octopress (2) installation. By Nguyễn Đình Quân.&lt;/p&gt;

&lt;p&gt;Tags: nguyen-dinh-quan, octopress-2, tip, tweak&lt;/p&gt;

&lt;h2 id=&#34;laboratorios&#34;&gt;Laboratorios&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.presionblogosferica.com/2014/11/12/laboratorios/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Ángel Medinilla, about laboratories to use a percentage of company time to investigate, innovate, learn and improve.&lt;/p&gt;

&lt;p&gt;Tags: angel-medinilla, team-management, time-management, innovation, strategy, improvement, kaizen, laboratory, craftsmanship, spanish&lt;/p&gt;

&lt;h2 id=&#34;what-refactoring-is-and-what-it-isn-t&#34;&gt;What Refactoring is, and what it isn’t&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://swreflections.blogspot.com/2012/04/what-refactoring-is-and-what-it-isnt.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Jim Bird, where he splits some practices into refactoring and not refactoring. Draws the line between these two different activities.&lt;/p&gt;

&lt;p&gt;Also cites scratch refactoring.&lt;/p&gt;

&lt;p&gt;Tags: jim-bird, scratch-refactoring, refactoring, martin-fowler, kent-beck, definition, quote, design&lt;/p&gt;

&lt;h2 id=&#34;pitfalls-of-unlimited-vacations&#34;&gt;Pitfalls of Unlimited Vacations&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://haacked.com/archive/2016/02/18/unlimited-vaction-pitfalls/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Phil Haack on the github, travis and netflix policies about unlimited vacations and the effects they have on the employees.&lt;/p&gt;

&lt;p&gt;Also about minimum vacation periods, (paternity) paid leave.&lt;/p&gt;

&lt;p&gt;Tags: phil-haack, unlimited-vacation, holiday, vacation, team-management, burnout, github, travis, netflix, policy&lt;/p&gt;

&lt;h2 id=&#34;cultura-corporativa&#34;&gt;Cultura Corporativa&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.presionblogosferica.com/2011/02/06/cultura-corporativa/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Ángel Medinilla about the corporate culture, and how &amp;ldquo;hanging a highly interchangeable sentence on a wall&amp;rdquo; does not represent it.&lt;/p&gt;

&lt;p&gt;Tags: angel-medinilla, corporate culture, spanish&lt;/p&gt;

&lt;h2 id=&#34;what-it-s-really-like-to-learn-to-code&#34;&gt;What It’s Really Like to Learn to Code&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@sandjar/what-it-s-really-like-to-learn-to-code-53f6d9156a32&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; that explains firsthand how it is to learn programming for a novice student,even with a strong financial background and having completed a university degree. By Sandjar Kozubaev&lt;/p&gt;

&lt;p&gt;Tags: sandjar-kozubaev, learning, programming, student, firsthand, coding, story&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Books read in 2016Q1</title>
      <link>https://alvarogarcia7.github.io/blog/2016/03/31/books-read-in-2016q1/</link>
      <pubDate>Thu, 31 Mar 2016 12:49:50 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2016/03/31/books-read-in-2016q1/</guid>
      <description>&lt;p&gt;Books I&amp;rsquo;ve read this quarter&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.amazon.es/cosas-sabes-siempre-olvidas-Pr%C3%A1cticos/dp/8408104314&#34; target=&#34;_blank&#34;&gt;101 cosas que ya sabes, pero siempre olvidas&lt;/a&gt; by Ernie J. Zelinski; in Spanish&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://mitpress.mit.edu/sicp/&#34; target=&#34;_blank&#34;&gt;Structure and Interpretation of Computer Programs&lt;/a&gt; by Abelson, Sussman, and Sussman, with the &amp;lsquo;&lt;a href=&#34;https://twitter.com/@deaprendices&#34; target=&#34;_blank&#34;&gt;@deAprendices&lt;/a&gt;&amp;rsquo;s reading club&amp;rsquo;. Blog posts under the tag &lt;a href=&#34;https://alvarogarcia7.github.io/{{site.category_dir}}/sicp&#34;&gt;sicp&lt;/a&gt;. Only chapters 1 and 2.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Books started, not yet finished (WIP):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Building microservices, by Sam Newman, with the &amp;lsquo;&lt;a href=&#34;https://twitter.com/@deaprendices&#34; target=&#34;_blank&#34;&gt;@deAprendices&lt;/a&gt;&amp;rsquo;s reading club&amp;rsquo;. Blog posts under the tag &lt;a href=&#34;https://alvarogarcia7.github.io/{{site.category_dir}}/building-microservices&#34;&gt;building-microservices&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://leanpub.com/nightowls&#34; target=&#34;_blank&#34;&gt;Why programmers work at night&lt;/a&gt; by Swizec Teller&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.redbook.io/&#34; target=&#34;_blank&#34;&gt;Readings in Database Systems, 5th Edition&lt;/a&gt; by Peter Bailis, Joseph M. Hellerstein, Michael Stonebraker, editors
&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Books I want to finish:&lt;/p&gt;

&lt;p&gt;Books that have entered the queue:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://shop.oreilly.com/product/0636920028468.do&#34; target=&#34;_blank&#34;&gt;RESTful Web APIs&lt;/a&gt; by Leonard Richardson, Mike Amundsen, Sam Ruby&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://shop.oreilly.com/product/9780596801694.do&#34; target=&#34;_blank&#34;&gt;RESTful Web Services Cookbook&lt;/a&gt; by Subbu Allamaraju&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.sig.eu/en/building-maintainable-software&#34; target=&#34;_blank&#34;&gt;Building Maintainable Software&lt;/a&gt; by Joost Visser&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Learning paths that have entered the queue:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://shop.oreilly.com/category/learning-path/software-architecture-fundamentals.do&#34; target=&#34;_blank&#34;&gt;Software Architecture Fundamentals&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://shop.oreilly.com/category/learning-path/html5-fundamentals.do&#34; target=&#34;_blank&#34;&gt;HTML5 Fundamentals&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://shop.oreilly.com/category/learning-path/designing-web-apis.do&#34; target=&#34;_blank&#34;&gt;Designing Web APIs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://shop.oreilly.com/category/learning-path/dive-deeper-php-programming.do&#34; target=&#34;_blank&#34;&gt;Dive Deeper into PHP Programming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://shop.oreilly.com/category/learning-path/intro-modern-front-end-web.do&#34; target=&#34;_blank&#34;&gt;Introduction to the Modern Front-End Web&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;The ending date of the quarter is the same as the publication date
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Self-Study in March 2016</title>
      <link>https://alvarogarcia7.github.io/blog/2016/03/02/self-study-in-march-2016/</link>
      <pubDate>Wed, 02 Mar 2016 12:58:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2016/03/02/self-study-in-march-2016/</guid>
      <description>

&lt;h2 id=&#34;learning-programming-isn-t-that-hard-deep-work-is-hard&#34;&gt;Learning Programming Isn’t That Hard, Deep Work Is Hard&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@benedictfritz/learning-programming-isn-t-that-hard-deep-work-is-hard-40a4cf3104f4&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Benedict Fritz on two types of work (i.e., deep and shallow) and how programming is of the deep type. He links the difficulty of learning to program to the difficulty of practicing deep work.&lt;/p&gt;

&lt;p&gt;Tags: analogy, benedict-fritz, deep-work, shallow-work, learn-to-program, psychology&lt;/p&gt;

&lt;h2 id=&#34;becodeweek-by-yeray-darias&#34;&gt;BeCodeWeek by Yeray Darias&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://developerscookbook.blogspot.com.es/search/label/desk-surfing&#34; target=&#34;_blank&#34;&gt;this category of posts&lt;/a&gt; by Yeray Darias about his BeCodeWeek, a desk-surfing experience at BeCode.&lt;/p&gt;

&lt;p&gt;Publishes one entry per day detailing his activities: working for an open-source library, discussions, etc&lt;/p&gt;

&lt;p&gt;Tags: becodeweek, yeray-darias, desk-surfing, experience, experience-report, analysis&lt;/p&gt;

&lt;h2 id=&#34;becodeweek-by-yeray-darias-1&#34;&gt;BeCodeWeek by Yeray Darias&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://developerscookbook.blogspot.com.es/search/label/desk-surfing&#34; target=&#34;_blank&#34;&gt;this category of posts&lt;/a&gt; by Yeray Darias about his BeCodeWeek, a desk-surfing experience at BeCode.&lt;/p&gt;

&lt;p&gt;Publishes one entry per day detailing his activities: working for an open-source library, discussions, etc&lt;/p&gt;

&lt;p&gt;Tags: becodeweek, yeray-darias, desk-surfing, experience, experience-report, analysis&lt;/p&gt;

&lt;h2 id=&#34;tracer-bullets&#34;&gt;Tracer Bullets&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://c2.com/cgi/wiki?TracerBullets&#34; target=&#34;_blank&#34;&gt;this page&lt;/a&gt; about tracer bullets, an analogy from the military warfare to a software project.&lt;/p&gt;

&lt;p&gt;Serves the purpose of adjusting the aim of the cannon to better reach the target.&lt;/p&gt;

&lt;p&gt;Tags: analogy, metaphor, warfare, management&lt;/p&gt;

&lt;h2 id=&#34;cohesion-the-cornerstone-of-software-design&#34;&gt;Cohesion - the cornerstone of software design&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://codurance.com/2016/03/03/cohesion-cornerstone-software-design/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Sandro Mancuso on the topic of cohesion. Describes the 7 types of cohesion, as described in Structured Design&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;, from worst to best:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Coincidental cohesion&lt;/li&gt;
&lt;li&gt;Logical cohesion&lt;/li&gt;
&lt;li&gt;Temporal cohesion&lt;/li&gt;
&lt;li&gt;Procedural cohesion&lt;/li&gt;
&lt;li&gt;Communicational/informational cohesion&lt;/li&gt;
&lt;li&gt;Sequential cohesion&lt;/li&gt;
&lt;li&gt;Functional cohesion&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;and about Design-Level Cohesion:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Coincidental relation (R1)&lt;/li&gt;
&lt;li&gt;Conditional relation (R2)&lt;/li&gt;
&lt;li&gt;Iterative relation (R3)&lt;/li&gt;
&lt;li&gt;Communication relation (R4)&lt;/li&gt;
&lt;li&gt;Sequential relation (R5)&lt;/li&gt;
&lt;li&gt;Functional (R6)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tags: cohesion, codurance, edward-yourdon, larry-constantine, list, sandro-mancuso, software-design, design-level-cohesion, smc-cohesion, dlc-cohesion&lt;/p&gt;

&lt;h2 id=&#34;etsy-cto-q-a-we-need-software-engineers-not-developers&#34;&gt;Etsy CTO Q&amp;amp;A: We Need Software Engineers, Not Developers&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://thenewstack.io/etsy-cto-qa-need-software-engineers-not-developers/&#34; target=&#34;_blank&#34;&gt;this interview&lt;/a&gt; with John Allspaw, where they explain the onboarding experience for new hires at Etsy, the DevOps philosophy and the need for engineering skills, more than developer skills. This can be exemplified in the need to know more, defining the boundaries of your job and finding the right tool for the job.&lt;/p&gt;

&lt;p&gt;Tags: devops, interview, q-and-a, john-allspaw, etsy, onboarding, hire, team-management, deploy&lt;/p&gt;

&lt;h2 id=&#34;frequency-reduces-difficulty&#34;&gt;Frequency Reduces Difficulty&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://martinfowler.com/bliki/FrequencyReducesDifficulty.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Martin Fowler on why we should repeat things that are difficult for us:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Perfectioning the technique&lt;/li&gt;
&lt;li&gt;Internalizing the details&lt;/li&gt;
&lt;li&gt;Easing its automation&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tags: martin-fowler, automation, process, perfection, internalizing, technique, detail, process-theory, agile&lt;/p&gt;

&lt;h2 id=&#34;lambdas-are-confusing&#34;&gt;Lambdas are confusing&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched this video where Coman Hamilton from JAXenter interviews Dr. Heinz Kabutz about Java&amp;rsquo;s lambda syntax. Cites the problem with exceptions, generics, method overloading.&lt;/p&gt;

&lt;p&gt;Tags: java, lambda, coman-hamilton, jaxenter, heinz-kabutz, problem&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=WcHom1eVhi4&amp;amp;feature=youtu.be&#34; target=&#34;_blank&#34;&gt;https://www.youtube.com/watch?v=WcHom1eVhi4&amp;amp;feature=youtu.be&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;el-full-stack-developer-en-2016&#34;&gt;El full-stack developer en 2016&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.developerdepueblo.com/development/full-stack-developer-2016/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Jose Ignacio Andrés about the job descriptions of 2016.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;El principal valor de un full-stack es poder simplificar el trabajo a los demás miembros del equipo.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;My translation:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The main value of a full-stack developer is to be able to simplify other teammates&amp;rsquo; work&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tags: teamwork, teammate, fullstack, simplification, work, team-management, jose andres&lt;/p&gt;

&lt;h2 id=&#34;i-am-a-software-craftsman&#34;&gt;I am a software craftsman&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.dirv.me/i-am-a-software-craftsman/index.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Daniel Irvine about calling yourself a craftsman or not. He says that if you adhere to their values, you should.&lt;/p&gt;

&lt;p&gt;Tags: craftsmanship, label, daniel-irvine, craftsman, group-belonging&lt;/p&gt;

&lt;h2 id=&#34;teaching-programming-languages-in-a-post-linnaean-age&#34;&gt;Teaching Programming Languages in a Post-Linnaean Age&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://cs.brown.edu/~sk/Publications/Papers/Published/sk-teach-pl-post-linnaean/paper.pdf&#34; target=&#34;_blank&#34;&gt;this paper&lt;/a&gt; by Shriram Krishnamurthi where he explains the need for books like &lt;a href=&#34;http://www.plai.org/&#34; target=&#34;_blank&#34;&gt;PLAI&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;lack of paradigms in new languages, and its separation (or lack of)&lt;/li&gt;
&lt;li&gt;design of languages cheaper and cheaper these days&lt;/li&gt;
&lt;li&gt;rigor level in publications&lt;/li&gt;
&lt;li&gt;inductive and deductive learning
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;notes&#34;&gt;Notes&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;post-Linnaean&lt;/code&gt; refers to the &lt;a href=&#34;https://en.wikipedia.org/wiki/Carl_Linnaeus&#34; target=&#34;_blank&#34;&gt;Carl Linnaeus&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;He is known as the father of modern taxonomy&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tags: inductive-learning, deductive-learning, dsl, domain-specific-language, type-soundness, continuation-style, garbage-collection, reactive-programming, scheme, plai, teaching, programming-language, shriram-krishnamurthi&lt;/p&gt;

&lt;h2 id=&#34;lazy-ruby&#34;&gt;Lazy Ruby&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://sonnym.github.io/2014/04/05/lazy-ruby/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by sonnym about using ruby&amp;rsquo;s lazy (non-strict) features, detailing an example with Fibonacci&amp;rsquo;s sequence.&lt;/p&gt;

&lt;p&gt;Tags: laziness, strictness, non-strictness, ruby, fibonacci, comparison&lt;/p&gt;

&lt;h2 id=&#34;jessica-livingston&#34;&gt;Jessica Livingston&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://paulgraham.com/jessica.html&#34; target=&#34;_blank&#34;&gt;this essay&lt;/a&gt; by Paul Graham about his co-founder at the Y-combinator: Jessica Livingston. She was considered the Social Radar at YC&lt;/p&gt;

&lt;p&gt;The essay also talks about the non-existent separation between working hours and not and about her implication and personality.&lt;/p&gt;

&lt;p&gt;Tags: jessica-livingston, paul-graham, y-combinator, feminism, yc, essay&lt;/p&gt;

&lt;h2 id=&#34;four-laws-of-software-economics-part-1&#34;&gt;Four Laws Of Software Economics (Part 1)&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@RichMironov/four-laws-of-software-economics-part-1-e162aa0ea9e5&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Rich Mironov on why the development team will never be big enough (because of economics, because there are more things to be done than time to do them, so we have to prioritize them) and about the communication problems between the dev team and the client(s).&lt;/p&gt;

&lt;p&gt;Also talks about the general personality of clients and devs and task prioritization&lt;/p&gt;

&lt;p&gt;Tags: exclusive-or, magical-thinking, tnstaafl, management, agile, team, capacity, death-march, estj, intp, software-economics, product-strategy, law-of-ruthless-prioritization, law, rich-mironov, slack, myers-briggs-type&lt;/p&gt;

&lt;h2 id=&#34;you-should-take-a-codecation&#34;&gt;You Should Take A Codecation&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://robots.thoughtbot.com/you-should-take-a-codecation&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Ben Orenstein explaining what is a codecation and what he&amp;rsquo;s done in the two codecations he&amp;rsquo;s taken.&lt;/p&gt;

&lt;p&gt;Tags: codecation, ben-orenstein, vacation, holiday, coding, shipping, in-company&lt;/p&gt;

&lt;h2 id=&#34;giving-up-on-tdd&#34;&gt;Giving Up on TDD&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://iansommerville.com/systems-software-and-technology/giving-up-on-test-first-development/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Ian Sommerville about the problems he&amp;rsquo;s found while doing TDD, mainly about design, but also about being conservative in the amount of tests you allow yourself to break while refactoring.&lt;/p&gt;

&lt;p&gt;Tags: tdd, ian-sommerville, refactoring, problem, design-problem, design, giving-up-tdd&lt;/p&gt;

&lt;h2 id=&#34;giving-up-on-tdd-answer&#34;&gt;Giving Up on TDD - answer&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.cleancoder.com/uncle-bob/2016/03/19/GivingUpOnTDD.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Robert C. Martin on the common issues for people adopting TDD:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The Fragile Test Problem&lt;/li&gt;
&lt;li&gt;The Design Problem&lt;/li&gt;
&lt;li&gt;The Testable Design Problem&lt;/li&gt;
&lt;li&gt;The Magic Bullet Problem&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This article is an answer to another by Ian Sommerville.&lt;/p&gt;

&lt;p&gt;Tags: tdd, uncle-bob, robert-martin, adoption, ian-sommerville, fragile-test-problem, giving-up-tdd, design-problem, testable-design-problem, magic-bullet-problem&lt;/p&gt;

&lt;h2 id=&#34;seek-out-jobs-with-fast-learning-cycles&#34;&gt;Seek out jobs with fast learning cycles&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@sarahtavel/seek-out-jobs-with-fast-learning-cycles-f923c8d8a4be#.7bxx65a4x&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Sarah Tavel on learning on the job and how fast these learning cycles can happen at companies at different stages of maturity.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;So if you’re thinking of changing jobs, or taking your first, my advice: find a place with a fast learning cycle, and a steep learning curve.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tags: learning, job, hypothesis, sarah-tavel, learning-cycle, maturity-level, learning-process, product-management&lt;/p&gt;

&lt;h2 id=&#34;clean-code-vs-implementation-patterns&#34;&gt;Clean Code Vs. Implementation Patterns&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.xebia.com/clean-code-vs-implementation-patterns/&#34; target=&#34;_blank&#34;&gt;this comparison&lt;/a&gt; of Clean Code vs Implementation Pattern books, by Vincent Partington.&lt;/p&gt;

&lt;p&gt;In it, the author explains the differences in style in both books, and how they compare to others.&lt;/p&gt;

&lt;p&gt;Tags: clean-code, implementation-patterns, comparison, book-review, book-comparison, vincent-partington&lt;/p&gt;

&lt;h2 id=&#34;stuck-in-traffic-vlog-103-new-spammer-techniques&#34;&gt;Stuck in Traffic vlog #103 - New Spammer Techniques&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve seen &lt;a href=&#34;https://www.peerlyst.com/posts/stuck-in-traffic-vlog-103-new-spammer-techniques-j-wolfgang-goerlich&#34; target=&#34;_blank&#34;&gt;this vlog entry&lt;/a&gt; on machines fighting machines (exemplified with the spam producing and filtering) and how some spammers are trying more direct techniques focusing on higher-value targets, sometimes even handcrafting messages and modifying them every few units.&lt;/p&gt;

&lt;p&gt;Tags: wolfgang-goerlich, spam, vlog, spammer, machine-learning&lt;/p&gt;

&lt;h2 id=&#34;becoming-a-finisher&#34;&gt;Becoming A Finisher&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://christopherdbui.com/becoming-a-finisher/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Christopher Bui where he explains that projects that are too ambitious stall your productivity and make you lose your focus.&lt;/p&gt;

&lt;p&gt;Tags: christopher-bui, pomodoro, time-management, productivity, motivation, ambition, paul-graham, quote&lt;/p&gt;

&lt;h2 id=&#34;hanging-around-with-red-black-tree-implementations-the-beginnings&#34;&gt;Hanging around with red-black tree implementations: the beginnings&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.fraixed.es/post/hanging-around-red-black-trees-implementations/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Ivan Fraixedes where he details the progress of implementing a red-black tree, and also his motivation for doing it.&lt;/p&gt;

&lt;p&gt;Tags: ivan-fraixedes, red-black-tree, abstract-data-structure, adt, deliberate-practice, pet-project&lt;/p&gt;

&lt;h2 id=&#34;some-tools-for-faster-blogging-in-octopress&#34;&gt;Some Tools for Faster Blogging in Octopress&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://dgmstuart.github.io/blog/2015/03/27/some-tools-for-faster-blogging-in-octopress/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; for tips and tricks on how to blog faster with octopress. Written by Duncan Stuart.&lt;/p&gt;

&lt;p&gt;Tags: duncan-stuart, blog, improvement, meta, octopress, tip-and-trick&lt;/p&gt;

&lt;h2 id=&#34;the-veil-of-ignorance&#34;&gt;The veil of ignorance&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://mrmrs.io/writing/2016/03/23/the-veil-of-ignorance/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Adam Morse on how not being on the top of the skills performance can affect your design and your user experience. Also, references the concept of &amp;ldquo;The Veil of Ignorance&amp;rdquo;, a concept by John Rawls.&lt;/p&gt;

&lt;p&gt;Tags: john-rawls, veil-of-ignorance, user-experience, design&lt;/p&gt;

&lt;h2 id=&#34;to-smile-again-recovering-from-the-paralysis-of-burnout&#34;&gt;To Smile Again &amp;ndash; Recovering from the paralysis of burnout&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://m.signalvnoise.com/to-smile-again-ae0ba9f2198c&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Jamis Buck on his story of burnout, what symptoms had on him and how he got out of it.&lt;/p&gt;

&lt;p&gt;Tags: burnout, jamis-buck, psychology, productivity, personal, story, analogy&lt;/p&gt;

&lt;h2 id=&#34;beyond-email-could-startup-slack-change-the-way-you-work&#34;&gt;Beyond email: could startup Slack change the way you work?&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.theguardian.com/technology/2016/mar/25/slack-butterfield-emoji-chat-nasa-harvard-silicon-valley&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; on Slack&amp;rsquo;s office culture, with their diversity, policies and values after a high people growth in a short period of time. By Jemima Kiss&lt;/p&gt;

&lt;p&gt;Tags: culture, office-culture, slack, jemima-kiss&lt;/p&gt;

&lt;h2 id=&#34;slack-work-this-way&#34;&gt;Slack: Work This Way&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@iaintait/slack-work-this-way-9221284472dd&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt;, a response to my above read, about the office culture at Slack.&lt;/p&gt;

&lt;p&gt;Tags: iain-tait, response, slack, office-culture&lt;/p&gt;

&lt;h2 id=&#34;bem-101&#34;&gt;BEM 101&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://css-tricks.com/bem-101/&#34; target=&#34;_blank&#34;&gt;this introduction&lt;/a&gt; to a CSS style called Block, Element, Modifier methodology (BEM).&lt;/p&gt;

&lt;p&gt;In it,&lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;a block is a top-level abstraction of a new component&lt;/li&gt;
&lt;li&gt;Child items, or elements, can be placed inside and these are denoted by two underscores following the name of the block [&amp;hellip;].
modifiers can manipulate the block so that we can theme or style that particular component without inflicting changes on a completely unrelated module. This is done by appending two hyphens to the name of the block [&amp;hellip;].&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;By Joe Richardson, Robin Rendle et al.&lt;/p&gt;

&lt;p&gt;Tags: joe-richardson, robin-rendle, bem, css, css-methodology, introduction, css-architecture, sass&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;Structured Design: Fundamentals of a Discipline of Computer Program and Systems Design by Yourdon and Constantine.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Tip: using tortoise credentials in git CLI</title>
      <link>https://alvarogarcia7.github.io/blog/2016/03/02/using-tortoise-credentials-from-cli/</link>
      <pubDate>Wed, 02 Mar 2016 12:41:28 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2016/03/02/using-tortoise-credentials-from-cli/</guid>
      <description>

&lt;h2 id=&#34;tortoisegit-part&#34;&gt;TortoiseGit part&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Go to a repo&lt;/li&gt;
&lt;li&gt;right button, Settings&lt;/li&gt;
&lt;li&gt;Git -&amp;gt; Credential&lt;/li&gt;
&lt;li&gt;Add a creadential&lt;/li&gt;
&lt;li&gt;Config type: global&lt;/li&gt;
&lt;li&gt;Helper: wincred&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sync once using your HTTPS password&lt;/p&gt;

&lt;h2 id=&#34;cli-part&#34;&gt;CLI part&lt;/h2&gt;

&lt;p&gt;Open the &lt;code&gt;$REPO/.git/config&lt;/code&gt; and add&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[credential]
	helper = wincred
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Remote git operations should not ask for credentials anymore&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Kata formulation: Find the comments</title>
      <link>https://alvarogarcia7.github.io/blog/2016/03/01/kata-formulation-find-comments/</link>
      <pubDate>Tue, 01 Mar 2016 08:57:28 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2016/03/01/kata-formulation-find-comments/</guid>
      <description>

&lt;p&gt;Little Johnny is inspecting a PHP source code that contains comments. These comments contains words that he doesn&amp;rsquo;t understand, as it written in another language.&lt;/p&gt;

&lt;h2 id=&#34;rules-and-constraints&#34;&gt;Rules and constraints&lt;/h2&gt;

&lt;p&gt;The source code in the PHP files does not need to be correct.&lt;/p&gt;

&lt;p&gt;A comment (a subset of PHP comments) is defined as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A line containing C-style comment delimiter, except when it is within a string

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;// hello C-style&lt;/code&gt; is a valid comment&lt;/li&gt;
&lt;li&gt;&lt;code&gt;echo &amp;quot;//&amp;quot;;&lt;/code&gt; is not a comment&lt;/li&gt;
&lt;li&gt;&lt;code&gt;echo &#39;//&#39;;&lt;/code&gt; is not a comment&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;A line containing Perl-style comment delimiter, except when it is within a string

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;# hello Perl-style&lt;/code&gt; is a valid comment&lt;/li&gt;
&lt;li&gt;&lt;code&gt;echo &amp;quot;#&amp;quot;;&lt;/code&gt; is not a comment&lt;/li&gt;
&lt;li&gt;&lt;code&gt;echo &#39;#&#39;;&lt;/code&gt; is not a comment&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;There are no multi-line comments

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/* ... */&lt;/code&gt; is not a comment&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can do this kata in any language you want. In any case it is not allowed to use a PHP parser. This task must be done manually.&lt;/p&gt;

&lt;h2 id=&#34;how-to-start&#34;&gt;How to start&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Clone/fork (any stars are welcome) &lt;a href=&#34;https://github.com/alvarogarcia7/kata-formulation-find-comments&#34; target=&#34;_blank&#34;&gt;this repo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Run the tests. &lt;a href=&#34;https://github.com/alvarogarcia7/cli-app-base-clojure/blob/master/README.md#tests&#34; target=&#34;_blank&#34;&gt;See this&lt;/a&gt; for help&lt;/li&gt;
&lt;li&gt;They should be red.&lt;/li&gt;
&lt;li&gt;Go to production code and fix it&lt;/li&gt;
&lt;li&gt;Have fun (happy kata and happy koding!)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;requirements&#34;&gt;Requirements&lt;/h2&gt;

&lt;p&gt;Please do not read ahead, just read the current assignment, do it, then read the next one:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Can you help Little Johnny fetch all those comments?&lt;/li&gt;
&lt;li&gt;These messages have not been audited yet and we want to publish the code, so it is better to remove the comments. Can you do it?&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;optional-requirement&#34;&gt;Optional requirement&lt;/h2&gt;

&lt;p&gt;As an optional task, when the problem is finished (you can attack in your preferred order), there must be an executable jar with some parameters to process the current folder with the &amp;lsquo;working modes&amp;rsquo; specified above.&lt;/p&gt;

&lt;p&gt;(This formulation is also present at the &lt;a href=&#34;https://github.com/alvarogarcia7/kata-formulation-find-comments/blob/master/README.md&#34; target=&#34;_blank&#34;&gt;repository&lt;/a&gt; )&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Two persons involved in a git commit, in github</title>
      <link>https://alvarogarcia7.github.io/blog/2016/02/14/two-persons-involved-in-a-git-commit/</link>
      <pubDate>Sun, 14 Feb 2016 17:12:28 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2016/02/14/two-persons-involved-in-a-git-commit/</guid>
      <description>

&lt;h2 id=&#34;on-git&#34;&gt;On git&lt;/h2&gt;

&lt;p&gt;You can have multiple persons involved in a single git commit: an author and a committer.&lt;/p&gt;

&lt;p&gt;The difference is explained by &lt;a href=&#34;https://groups.google.com/forum/#!topic/repo-discuss/6aH9rH8nUdo&#34; target=&#34;_blank&#34;&gt;Manuel Doninger&lt;/a&gt; &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The author is the one who did the code change.
The committer is the person who committed that change to a repository.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;an example, by the same author:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Example: I&amp;rsquo;m not a committer in the EGit project, so i have no rights
to push directly to the EGit repository at Eclipse. But i contribute
to EGit, so my changes have the author set to my name and email. If my
change gets reviewed by the EGit team, and submitted, the committer
field contains the name and email of the person who submitted the
change&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;on-github&#34;&gt;On github&lt;/h2&gt;

&lt;p&gt;This is represented in github with this format:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://alvarogarcia7.github.io/{{site.category_dir}}/../uploads/commit-with-two-persons.png&#34; alt=&#34;two persons involved&#34; /&gt;&lt;/p&gt;

&lt;p&gt;One of them is &amp;ldquo;sharplet&amp;rdquo; and the other one is &amp;ldquo;gfontenot&amp;rdquo;. Both are github users that match a github-registered mail.&lt;/p&gt;

&lt;p&gt;On a shallow inspection, the commit does not reveal anything special:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ g log 17a96dba38479de78cdb3b3aae1c802f4d54f485 -n1 --full-diff
commit 17a96dba38479de78cdb3b3aae1c802f4d54f485
Author: XXXX &amp;lt;xxxx@example.com&amp;gt;
Date:   Wed Dec &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt; 14:44:52 &lt;span class=&#34;m&#34;&gt;2015&lt;/span&gt; +1100

    Clarify specs by defining • as the composition operator
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;but looking a bit closer&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:2&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;,&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ g log 17a96dba38479de78cdb3b3aae1c802f4d54f485 -n1 --dense --full-diff --format&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;%H, %h, %T, %t, %P, %p, %an, %aN, %ae, %aE, %ad, %aD, %ar, %at, %ai, %cn, %cN, %ce, %cE, %cd, %cD, %cr, %ct, %ci, %cI, %d, %D, %e, %s, %f, %b, %B&amp;quot;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; less
17a96dba38479de78cdb3b3aae1c802f4d54f485, 17a96db, 6bc2a33e3a069b78b9fd36124f5ed039a125303e, 6bc2a33, 29488bc0be27c5c03b6af7d115c7d45645382a7a, 29488bc, XXXX, XXXX, xxxx@example.com, xxxx@example.com, Wed Dec &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt; 14:44:52 &lt;span class=&#34;m&#34;&gt;2015&lt;/span&gt; +1100, Wed, &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt; Dec &lt;span class=&#34;m&#34;&gt;2015&lt;/span&gt; 14:44:52 +1100, &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt; months ago, 1449027892, 2015-12-02 14:44:52 +1100, YYYY, YYYY, yyyy@example.com, yyyy@example.com, Tue Dec &lt;span class=&#34;m&#34;&gt;15&lt;/span&gt; 09:30:28 &lt;span class=&#34;m&#34;&gt;2015&lt;/span&gt; -0800, Tue, &lt;span class=&#34;m&#34;&gt;15&lt;/span&gt; Dec &lt;span class=&#34;m&#34;&gt;2015&lt;/span&gt; 09:30:28 -0800, &lt;span class=&#34;m&#34;&gt;9&lt;/span&gt; weeks ago, 1450200628, 2015-12-15 09:30:28 -0800, %cI, , %D, , Clarify specs by defining • as the composition operator, Clarify-specs-by-defining-as-the-composition-operator, , Clarify specs by defining • as the composition operator
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;or, just the emails:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ g log 17a96dba38479de78cdb3b3aae1c802f4d54f485 -n1 --dense --full-diff --format&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;%ae %ce&amp;#39;&lt;/span&gt;
xxxx@example.com yyyy@example.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;

&lt;p&gt;For a single commit:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ &lt;span class=&#34;nv&#34;&gt;GIT_COMMITTER_NAME&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;John Doe&amp;#39;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;GIT_COMMITTER_EMAIL&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;john@example.com&amp;#39;&lt;/span&gt; git commit -m &lt;span class=&#34;s2&#34;&gt;&amp;quot;...&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;For a session:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;export GIT_COMMITTER_NAME=&#39;John Doe&#39;
export GIT_COMMITTER_EMAIL=&#39;john@example.com&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Taken from &lt;a href=&#34;http://stackoverflow.com/a/23108169/1181094&#34; target=&#34;_blank&#34;&gt;this StackOverflow answer&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This can be useful for a pairing session or for some kinds of git history rewrite.&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;also explained in &lt;a href=&#34;http://stackoverflow.com/questions/6755824/what-is-the-difference-between-author-and-committer-in-git&#34; target=&#34;_blank&#34;&gt;this StackOverflow post&lt;/a&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;this list has been generated from the available arguments at the &lt;a href=&#34;https://git-scm.com/docs/git-log&#34; target=&#34;_blank&#34;&gt;&amp;ldquo;pretty formats&amp;rdquo; at the git-log page&lt;/a&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:2&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>