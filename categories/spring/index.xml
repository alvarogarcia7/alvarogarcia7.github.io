<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>spring on The long way through Software Craftsmanship</title>
    <link>https://alvarogarcia7.github.io/categories/spring/</link>
    <description>Recent content in spring on The long way through Software Craftsmanship</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 01 Jun 2018 10:32:19 +0000</lastBuildDate><atom:link href="https://alvarogarcia7.github.io/categories/spring/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Self-Study in June 2018</title>
      <link>https://alvarogarcia7.github.io/blog/2018/06/01/self-study-june-2018/</link>
      <pubDate>Fri, 01 Jun 2018 10:32:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2018/06/01/self-study-june-2018/</guid>
      <description>Don&amp;rsquo;t look, don&amp;rsquo;t tell I&amp;rsquo;ve read this bonilista by David Bonilla on what strategies companies use to deal with security and defects.
Explains full disclosure, responsible disclosure and bug bounties.
Tags: david-bonilla, bonilista, security, full-disclosure, responsible-disclosure, bug-bounty, reporting, hacker, cracker
Id: a1a6925a-7958-11e8-a87f-0242ac110002 Read: Tue, 26 Jun 2018 15:50:21 +0000
La vida de las ideas I&amp;rsquo;ve read this bonilista by David Bonilla about the value of the ideas and what differentiates a good idea from a good execution from a good outcome</description>
    </item>
    
    <item>
      <title>Self-Study in April 2016</title>
      <link>https://alvarogarcia7.github.io/blog/2016/04/01/self-study/</link>
      <pubDate>Fri, 01 Apr 2016 00:08:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2016/04/01/self-study/</guid>
      <description>Deliberate Practice: What It Is and Why You Need It I&amp;rsquo;ve read this article by Corbett Barr on what is deliberate practice and why it is needed to become an expert in a given domain field.
The four essential components:
 Motivation Tailored (practice) Feedback Repetion  Tags: corbett-barr, deliberate-practice, expert, practice, anders-ericsson, talent, professional-development, career
10 Features I Wish Java Would Steal From the Kotlin Language I&amp;rsquo;ve read this list of features that the Kotlin Language has that would be an improvement for the Java language.</description>
    </item>
    
    <item>
      <title>Searching on a suite of failing tests</title>
      <link>https://alvarogarcia7.github.io/blog/2015/08/13/searching-on-a-suite-of-failing-tests/</link>
      <pubDate>Thu, 13 Aug 2015 16:45:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/08/13/searching-on-a-suite-of-failing-tests/</guid>
      <description>Motivation Today, at a client, in the green phase, we had a test suite which was failing: the whole suite fails but the test cases, individually, succeed.
So my first impression was that something was being shared between tests. Also confirmed because the failing class was an EndToEnd test, in which we load the whole spring context
A quick glance was not revealing anything interesting, so I decided to find which is the minimum suite (as opposed as to the whole suite) that makes the new testcase fail, expecting to narrow the search for possible causes.</description>
    </item>
    
    <item>
      <title>Annotations and Aspects in Java</title>
      <link>https://alvarogarcia7.github.io/blog/2015/04/21/annotations-and-aspects-in-java/</link>
      <pubDate>Tue, 21 Apr 2015 07:23:23 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/04/21/annotations-and-aspects-in-java/</guid>
      <description>I&amp;rsquo;ve written a sample project with an annotation and an aspect to intercept it and decorate it.
The code provides a way of doing try|catch, specifying an exception to be caught.
The source code is available here
In the process This has taken me approximately one hour to prepare the spike and half more to refactor and massage a bit.
If you want to see the raw details, the refactor has been committed step by step (the spike hasn&amp;rsquo;t).</description>
    </item>
    
  </channel>
</rss>
