<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>The long way through Software Craftsmanship</title>
    <link>https://alvarogarcia7.github.io/categories/microservice/index.xml</link>
    <description>Recent content on The long way through Software Craftsmanship</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="https://alvarogarcia7.github.io/categories/microservice/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Self-Study in June 2018</title>
      <link>https://alvarogarcia7.github.io/blog/2018/06/01/self-study-june-2018/</link>
      <pubDate>Fri, 01 Jun 2018 10:32:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2018/06/01/self-study-june-2018/</guid>
      <description>

&lt;h2 id=&#34;don-t-look-don-t-tell&#34;&gt;[Don&amp;rsquo;t look, don&amp;rsquo;t tell]()&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this bonilista by David Bonilla on what strategies companies use to deal with security and defects.&lt;/p&gt;

&lt;p&gt;Explains full disclosure, responsible disclosure and bug bounties.&lt;/p&gt;

&lt;p&gt;Tags: david-bonilla, bonilista, security, full-disclosure, responsible-disclosure, bug-bounty, reporting, hacker, cracker&lt;/p&gt;

&lt;p&gt;Id: a1a6925a-7958-11e8-a87f-0242ac110002
Read: Tue, 26 Jun 2018 15:50:21 +0000&lt;/p&gt;

&lt;h2 id=&#34;la-vida-de-las-ideas&#34;&gt;[La vida de las ideas]()&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this bonilista by David Bonilla about the value of the ideas and what differentiates a good idea from a good execution from a good outcome&lt;/p&gt;

&lt;p&gt;Tags: david-bonilla, idea, startup, execution, value&lt;/p&gt;

&lt;p&gt;Id: c72f3522-7958-11e8-935c-0242ac110002
Read: Tue, 26 Jun 2018 15:51:24 +0000&lt;/p&gt;

&lt;h2 id=&#34;why-re-frame-instead-of-om-next-http-t-dripemail2-com-c-eyjhy2nvdw50x2lkijoimzy1mtcxnyisimrlbgl2zxj5x2lkijoimte1ntgzote5mcisinvybci6imh0dhbzoi8vchvyzwx5znvuy3rpb25hbc50di9hcnrpy2xll3does1yzs1mcmftzs1pbnn0zwfklw9mlw9tlw5lehqvp19fcz1moxa2dmrwc2n0ymluagjxyne2eij9&#34;&gt;&lt;a href=&#34;http://t.dripemail2.com/c/eyJhY2NvdW50X2lkIjoiMzY1MTcxNyIsImRlbGl2ZXJ5X2lkIjoiMTE1NTgzOTE5MCIsInVybCI6Imh0dHBzOi8vcHVyZWx5ZnVuY3Rpb25hbC50di9hcnRpY2xlL3doeS1yZS1mcmFtZS1pbnN0ZWFkLW9mLW9tLW5leHQvP19fcz1mOXA2dmRwc2N0YmluaGJxYnE2eiJ9&#34; target=&#34;_blank&#34;&gt;Why re-frame instead of om next&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Eric Normand on why he chose to write a course on clojure front-end framework&lt;/p&gt;

&lt;p&gt;Tags: eric-normand, clojure, david-nolen, frontend, framework, reframe, om-next, comparison, course, mooc&lt;/p&gt;

&lt;p&gt;Id: ea43a380-7959-11e8-bd3b-0242ac110002
Read: Tue, 26 Jun 2018 15:59:32 +0000&lt;/p&gt;

&lt;h2 id=&#34;lexnet-el-software-que-nunca-debió-existir&#34;&gt;[LexNET: el software que nunca debió existir]()&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this bonilista by David Bonilla on the software called LexNET and the scandal around it&lt;/p&gt;

&lt;p&gt;Tags: david-bonilla, lexnet, bonilista, software, scandal, spain&lt;/p&gt;

&lt;p&gt;Id: 1aa20256-795a-11e8-9b39-0242ac110002
Read: Tue, 26 Jun 2018 16:00:53 +0000&lt;/p&gt;

&lt;h2 id=&#34;40&#34;&gt;[40]()&lt;/h2&gt;

&lt;p&gt;I have read this bonilista by David Bonilla explaining some of the things he has learned from 40 years of experience in life. Explains some of his fears and how he has solved them.&lt;/p&gt;

&lt;p&gt;Tags: david-bonilla, bonilista, birthday, reflection, fear, money, money-management&lt;/p&gt;

&lt;p&gt;Id: 296a433e-795a-11e8-981e-0242ac110002
Read: Tue, 26 Jun 2018 16:01:18 +0000&lt;/p&gt;

&lt;h2 id=&#34;la-lucha-por-la-red&#34;&gt;[La lucha por la Red]()&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this bonilista by David Bonilla on the net neutrality in Spain and in the European union.&lt;/p&gt;

&lt;p&gt;Tags: david-bonilla, bonilista, net-neutrality, internet&lt;/p&gt;

&lt;p&gt;Id: 395a8984-795a-11e8-9102-0242ac110002
Read: Tue, 26 Jun 2018 16:01:45 +0000&lt;/p&gt;

&lt;h2 id=&#34;a-machine-has-figured-out-rubik-s-cube-all-by-itself-https-www-technologyreview-com-s-611281-a-machine-has-figured-out-rubiks-cube-all-by-itself&#34;&gt;&lt;a href=&#34;https://www.technologyreview.com/s/611281/a-machine-has-figured-out-rubiks-cube-all-by-itself/&#34; target=&#34;_blank&#34;&gt;A machine has figured out Rubik&amp;rsquo;s Cube all by itself&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article explaining how an AI has solved the rubik cube by itself. The team, including McAleer, has used a technique called &amp;ldquo;autodidactic iteration: a way for the machine to create its own system of rewards.&lt;/p&gt;

&lt;p&gt;Tags: rubik, rubik-cube, ai, autodidactic-iteration, autodidactic, reward, mcaleer, artificial-intelligence, deep-learning, monte-carlo, monte-carlo-tree-search&lt;/p&gt;

&lt;p&gt;Id: 0cb8305c-7a1d-11e8-9823-0242ac110002
Read: Wed, 27 Jun 2018 15:16:22 +0000&lt;/p&gt;

&lt;h2 id=&#34;la-tienda&#34;&gt;[La tienda]()&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this bonilista by David Bonilla on how more and more investors are deciding to do it only on profitable startups rather than a more global strategy&lt;/p&gt;

&lt;p&gt;Tags: david-bonilla, bonilista, investor, startup&lt;/p&gt;

&lt;p&gt;Id: 6735c620-7a1d-11e8-a2e9-0242ac110002
Read: Wed, 27 Jun 2018 15:18:53 +0000&lt;/p&gt;

&lt;h2 id=&#34;i-m-not-a-woman-in-tech-https-communequation-wordpress-com-2017-07-05-im-not-a-woman-in-tech&#34;&gt;&lt;a href=&#34;https://communequation.wordpress.com/2017/07/05/im-not-a-woman-in-tech/&#34; target=&#34;_blank&#34;&gt;I’m not a woman in tech&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Maria Scrivener on how she does not consider herself a woman in tech. She prefers to lose the labels and just be considered her, herself. Advocates for being inclusive rather than exclusive&lt;/p&gt;

&lt;p&gt;Tags: feminism, women-in-tech, maria-scrivener, women, label, equality&lt;/p&gt;

&lt;p&gt;Id: 7e2fbffc-7a1d-11e8-bbd2-0242ac110002
Read: Wed, 27 Jun 2018 15:19:32 +0000&lt;/p&gt;

&lt;h2 id=&#34;password-security-alert-https-blog-8tracks-com-2017-06-27-password-security-alert&#34;&gt;&lt;a href=&#34;https://blog.8tracks.com/2017/06/27/password-security-alert/&#34; target=&#34;_blank&#34;&gt;PASSWORD SECURITY ALERT&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by David Porter in which they alert their users that their database has been leaked, therefore some passwords are at risk.&lt;/p&gt;

&lt;p&gt;The passwords were hashed and salted, not stored in plain text, but those who share a password across services could be at risk.&lt;/p&gt;

&lt;p&gt;The attack has been successful given that a developer didn&amp;rsquo;t have two-factor authentication (2FA) on their github account and the company was using GitHub LFS (git large file system) to store database backups&lt;/p&gt;

&lt;p&gt;Tags: david-porter, backup, storage, configuration, github, 2fa, plain-text, password, security, security-alert, lfs, git-lfs, github-lfs&lt;/p&gt;

&lt;p&gt;Id: 97212f3c-7a1d-11e8-bdcd-0242ac110002
Read: Wed, 27 Jun 2018 15:20:14 +0000&lt;/p&gt;

&lt;h2 id=&#34;matthew-green-https-blog-cryptographyengineering-com-2017-07-02-beyond-public-key-encryption&#34;&gt;&lt;a href=&#34;https://blog.cryptographyengineering.com/2017/07/02/beyond-public-key-encryption/&#34; target=&#34;_blank&#34;&gt;Matthew Green&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Matthew Green on the ideas presented by Shamir in 1984: Identity Based Cryptography (IBE), Attribute Based Cryptography (ABE)&lt;/p&gt;

&lt;p&gt;Tags: rsa, matthew-green, cryptography, identity-based-cryptography, attribute-based-cryptography, shamir, public-key, encryption, private-key&lt;/p&gt;

&lt;p&gt;Id: a942bf96-7a1d-11e8-b122-0242ac110002
Read: Wed, 27 Jun 2018 15:20:44 +0000&lt;/p&gt;

&lt;h2 id=&#34;starbucks-should-really-make-their-apis-public-https-blog-tendigi-com-starbucks-should-really-make-their-apis-public-6b64a1c2e923&#34;&gt;&lt;a href=&#34;https://blog.tendigi.com/starbucks-should-really-make-their-apis-public-6b64a1c2e923&#34; target=&#34;_blank&#34;&gt;Starbucks should really make their APIs public&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Nick Lee in which he explains how he has reverse-engineered the Starbucks API so you can connect to it from another device (not only phones, with the app installed)&lt;/p&gt;

&lt;p&gt;Tags: certificate-pinning, tendigi, nick-lee, security, man-in-the-middle, proxy, api, attribute-fingerprinting, open-api, starbucks&lt;/p&gt;

&lt;p&gt;Id: b3ffb61e-7a1d-11e8-a08c-0242ac110002
Read: Wed, 27 Jun 2018 15:21:02 +0000&lt;/p&gt;

&lt;h2 id=&#34;feature-toggles-are-one-of-the-worst-kinds-of-technical-debt-https-dzone-com-articles-feature-toggles-are-one-worst&#34;&gt;&lt;a href=&#34;https://dzone.com/articles/feature-toggles-are-one-worst&#34; target=&#34;_blank&#34;&gt;Feature Toggles are one of the Worst kinds of Technical Debt&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article on the ups and downs of using feature toggles.&lt;/p&gt;

&lt;p&gt;Especially with long lived branches and feature by abstraction&lt;/p&gt;

&lt;p&gt;Tags: feature-by-abstraction, feature-toggle, canary-test, jim-bird, technical-debt&lt;/p&gt;

&lt;p&gt;Id: dbb1ff46-7a1d-11e8-b40e-0242ac110002
Read: Wed, 27 Jun 2018 15:22:09 +0000&lt;/p&gt;

&lt;h2 id=&#34;testcontainers-making-java-integration-tests-easy-https-zeroturnaround-com-rebellabs-java-integration-testing-with-testcontainers&#34;&gt;&lt;a href=&#34;https://zeroturnaround.com/rebellabs/java-integration-testing-with-testcontainers/&#34; target=&#34;_blank&#34;&gt;TestContainers: making Java integration tests easy&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article on how to start a new docker container from Java code (using a junit @rule).&lt;/p&gt;

&lt;p&gt;Using the library TestContainers&lt;/p&gt;

&lt;p&gt;Tags: testcontainers, rebel-labs, anton-arhipov, test, docker, image, integration-test, testing&lt;/p&gt;

&lt;p&gt;Id: f13f63bc-7a1d-11e8-a6a2-0242ac110002
Read: Wed, 27 Jun 2018 15:22:45 +0000&lt;/p&gt;

&lt;h2 id=&#34;code-health-to-comment-or-not-to-comment-http-testing-googleblog-com-2017-07-code-health-to-comment-or-not-to-comment-html&#34;&gt;&lt;a href=&#34;http://testing.googleblog.com/2017/07/code-health-to-comment-or-not-to-comment.html&#34; target=&#34;_blank&#34;&gt;Code Health: To Comment or Not to Comment?&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article about comments in code: where to use them and when not to&lt;/p&gt;

&lt;p&gt;Tags: dori-reuveni, kevin-bourrillion, comment, clean-code&lt;/p&gt;

&lt;p&gt;Id: 15740b0c-7a1e-11e8-9169-0242ac110002
Read: Wed, 27 Jun 2018 15:23:46 +0000&lt;/p&gt;

&lt;h2 id=&#34;saints-and-traders-the-john-henry-fable-reconsidered-https-www-ribbonfarm-com-2014-06-04-saints-and-traders-the-john-henry-fable-reconsidered&#34;&gt;&lt;a href=&#34;https://www.ribbonfarm.com/2014/06/04/saints-and-traders-the-john-henry-fable-reconsidered/&#34; target=&#34;_blank&#34;&gt;Saints and Traders: The John Henry Fable Reconsidered&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article on the guardian syndrome and the Saint syndrome.&lt;/p&gt;

&lt;p&gt;Explains the story of John Henry, who died right after winning a drilling contest with a machine.&lt;/p&gt;

&lt;p&gt;Explains the finite game and the infinite game.&lt;/p&gt;

&lt;p&gt;Tags: finite-game, infinite-game, saint-syndrome, guardian-syndrome, comparison, philosophy, venkatesh-rao, john-henry&lt;/p&gt;

&lt;p&gt;Id: 5228464e-7a1e-11e8-9125-0242ac110002
Read: Wed, 27 Jun 2018 15:25:28 +0000&lt;/p&gt;

&lt;h2 id=&#34;stacked-pull-requests-keeping-github-diffs-small-https-graysonkoonce-com-stacked-pull-requests-keeping-github-diffs-small&#34;&gt;&lt;a href=&#34;https://graysonkoonce.com/stacked-pull-requests-keeping-github-diffs-small/&#34; target=&#34;_blank&#34;&gt;Stacked Pull Requests: Keeping GitHub Diffs Small&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article on using a technique (stacked pull requests) to keep pull requests small and get more feedback, more comments from teammates, therefore reducing the code review fatigue. By Grayson Koonce&lt;/p&gt;

&lt;p&gt;Tags: grayson-koonce, fatigue, code-fatigue, pull-request, pull-request-fatigue, stacked-pull-request, technique, comment, feedback, teammate, team&lt;/p&gt;

&lt;p&gt;Id: 6e3df860-7a1e-11e8-ba6a-0242ac110002
Read: Wed, 27 Jun 2018 15:26:15 +0000&lt;/p&gt;

&lt;h2 id=&#34;i-hate-almost-all-software-http-tinyclouds-org-rant-html&#34;&gt;&lt;a href=&#34;http://tinyclouds.org/rant.html&#34; target=&#34;_blank&#34;&gt;I hate almost all software&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Ryan Dahl on the focus of the software and the inherent complexity of today&amp;rsquo;s software&lt;/p&gt;

&lt;p&gt;Tags: ryan-dahl, complexity, software, rant&lt;/p&gt;

&lt;p&gt;Id: 7ab3fcd4-7a1e-11e8-9590-0242ac110002
Read: Wed, 27 Jun 2018 15:26:36 +0000&lt;/p&gt;

&lt;h2 id=&#34;the-real-reason-for-developers-salaries-stagnation-https-simpleprogrammer-com-developers-salaries-stagnation&#34;&gt;&lt;a href=&#34;https://simpleprogrammer.com/developers-salaries-stagnation/&#34; target=&#34;_blank&#34;&gt;The Real Reason for Developers’ Salaries Stagnation&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Im this article, the author speaks of developer salaries related to their skills, proficiency, area of interest and role. Also about the real purchasing power stagnation.&lt;/p&gt;

&lt;p&gt;Tags: salary, skill, role, position, money, career, career-management, fiodar-sazanavets&lt;/p&gt;

&lt;p&gt;Id: a4e26bee-7a1e-11e8-ac68-0242ac110002
Read: Wed, 27 Jun 2018 15:27:46 +0000&lt;/p&gt;

&lt;h2 id=&#34;what-is-a-10x-programmer-https-dev-to-nathanepstein-what-is-a-10x-programmer&#34;&gt;&lt;a href=&#34;https://dev.to/nathanepstein/what-is-a-10x-programmer&#34; target=&#34;_blank&#34;&gt;What is a &amp;ldquo;10x&amp;rdquo; Programmer?&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article about makes a good programmer, under the label of the mythical 10x programmer.&lt;/p&gt;

&lt;p&gt;There are two different groups of things in the list: things you are/have (skills) and things you do (actitudes). On the former, writing code (good, business code that is correctly organized, architected, designed), to know a lot. On the latter, ownership for the project (implication, care), teaching and learning from others.&lt;/p&gt;

&lt;p&gt;Tags: 10x, author, productivity, skill, attitude, aptitude, attitude-vs-aptitude, nathan-epstein&lt;/p&gt;

&lt;p&gt;Id: e5d53f46-7a1e-11e8-9097-0242ac110002
Read: Wed, 27 Jun 2018 15:29:35 +0000&lt;/p&gt;

&lt;h2 id=&#34;why-podcasts-have-become-popular-http-www-donnfelker-com-why-podcasts-have-become-popular&#34;&gt;&lt;a href=&#34;http://www.donnfelker.com/why-podcasts-have-become-popular/&#34; target=&#34;_blank&#34;&gt;Why Podcasts Have Become Popular&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Donn Felker on the effect that the Internet is having on consumers: they now decide when to consume the resources, instead of passively waiting for the resources to appear.&lt;/p&gt;

&lt;p&gt;This is the suggested explanation for on-demand video vs television, podcasts vs radio&lt;/p&gt;

&lt;p&gt;Tags: podcast, on-demand, consumer, internet, donn-felker&lt;/p&gt;

&lt;p&gt;Id: f7f8a73a-7a1e-11e8-836d-0242ac110002
Read: Wed, 27 Jun 2018 15:30:06 +0000&lt;/p&gt;

&lt;h2 id=&#34;don-t-know-what-you-want-improve-these-7-universal-skills-self-discipline-get-better-at-ignoring-the-negative-voice-in-your-head-get-out-of-your-bed-go-to-the-gym-don-t-listen-to-i-don-t-want-to&#34;&gt;&lt;a href=&#34;Self-Discipline: Get better at ignoring the negative voice in your head. Get out of your bed. Go to the gym. Don’t listen to “I don’t want to.”&#34; target=&#34;_blank&#34;&gt;Don’t Know What You Want? Improve These 7 Universal Skills&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Personal Effectiveness: Learn how to maximize the results you can get during the 16–18 hours you’re awake. Get more done — effectively.
Communication: We think we’re all master communicators. But the truth is that we suck. Communication is both art and science. And our ability to work with others depends on it.
Negotiation: You negotiate all the time. With your spouse, kids, parents, teachers, friends, co-workers, managers, etc. Learn to get the best deal for all parties.
Persuasion: Learn how to get what you want in an ethical way.
Physical Strength &amp;amp; Stamina: Getting stronger is a skill. Pull your own weight. It’s something every human should be able to do.
Flexibility: Sitting all day long behind your computer or in your car turns you into a stiff being. Learn how to stretch your hips, lower back, hamstrings, and calves — the most common weak points of desk workers.&lt;/p&gt;

&lt;p&gt;Tags:&lt;/p&gt;

&lt;p&gt;Id: 0862fbca-7a1f-11e8-83fb-0242ac110002
Read: Wed, 27 Jun 2018 15:30:33 +0000&lt;/p&gt;

&lt;h2 id=&#34;your-concentration-training-program-11-exercises-that-will-strengthen-your-attention-https-www-artofmanliness-com-2014-01-30-your-concentration-training-program-11-exercises-that-will-strengthen-your-attention&#34;&gt;&lt;a href=&#34;https://www.artofmanliness.com/2014/01/30/your-concentration-training-program-11-exercises-that-will-strengthen-your-attention/&#34; target=&#34;_blank&#34;&gt;Your Concentration Training Program: 11 Exercises That Will Strengthen Your Attention&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Brett &amp;amp; Kate McKay on exercises for training the attention&lt;/p&gt;

&lt;p&gt;Tags: brett-mckay, kate-mckay, training, concentration, exercise, focus, attention&lt;/p&gt;

&lt;p&gt;Id: 14f5e064-7a1f-11e8-be86-0242ac110002
Read: Wed, 27 Jun 2018 15:30:54 +0000&lt;/p&gt;

&lt;h2 id=&#34;the-great-attention-heist-https-lareviewofbooks-org-article-the-great-attention-heist&#34;&gt;&lt;a href=&#34;https://lareviewofbooks.org/article/the-great-attention-heist/&#34; target=&#34;_blank&#34;&gt;The Great Attention Heist&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by John Bell, John Zada on the current war for attention, what they call the &amp;lsquo;attention heist&amp;rsquo;: publishers fight for your attention, selling it to third parties. The more they can lure you to spend your (finite) attention with them, the higher the profits.&lt;/p&gt;

&lt;p&gt;They talk about two kinds of attention: short span and long span. Reading news is the first while reading a book or a long article is the second one.&lt;/p&gt;

&lt;p&gt;They mention unplugging (i.e., a &amp;ldquo;digital sabbath&amp;rdquo;) to help improving the level of concentration&lt;/p&gt;

&lt;p&gt;(this was a book review, of &amp;lsquo;The attention merchants&amp;rsquo;, by Tim Wu)&lt;/p&gt;

&lt;p&gt;Tags: john-bell, john-zada, attention-heist, attention, app, smartphone, book-review, tim-wu, book, sabbath, digital-sabbath, long-article&lt;/p&gt;

&lt;p&gt;Id: 3f41e6ec-7a1f-11e8-85fc-0242ac110002
Read: Wed, 27 Jun 2018 15:32:05 +0000&lt;/p&gt;

&lt;h2 id=&#34;how-to-read-more-books-http-verraes-net-2012-12-2012-12-23-how-to-read-more-books&#34;&gt;&lt;a href=&#34;http://verraes.net/2012/12/2012-12-23-how-to-read-more-books/&#34; target=&#34;_blank&#34;&gt;How to read more books&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Tags: mathias-verraes, reading, tips-and-tricks, self-study, training&lt;/p&gt;

&lt;p&gt;Id: c451a048-7a1f-11e8-82f7-0242ac110002
Read: Wed, 27 Jun 2018 15:35:49 +0000&lt;/p&gt;

&lt;h2 id=&#34;serving-100-gbps-from-an-open-connect-appliance-https-medium-com-netflix-techblog-serving-100-gbps-from-an-open-connect-appliance-cdb51dda3b99&#34;&gt;&lt;a href=&#34;https://medium.com/netflix-techblog/serving-100-gbps-from-an-open-connect-appliance-cdb51dda3b99&#34; target=&#34;_blank&#34;&gt;Serving 100 Gbps from an Open Connect Appliance&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article on how Netflix has optimized their servers to be able to send TLS content at 100 Gbps, using openbsd.&lt;/p&gt;

&lt;p&gt;Tags: netflix, openbsd, performance, optimization, drew-gallatin&lt;/p&gt;

&lt;p&gt;Id: dc8f92dc-7a1f-11e8-818a-0242ac110002
Read: Wed, 27 Jun 2018 15:36:29 +0000&lt;/p&gt;

&lt;h2 id=&#34;rebellabs-developer-productivity-report-2017-why-do-you-use-the-java-tools-you-use-https-zeroturnaround-com-rebellabs-developer-productivity-report-2017-why-do-you-use-java-tools-you-use&#34;&gt;&lt;a href=&#34;https://zeroturnaround.com/rebellabs/developer-productivity-report-2017-why-do-you-use-java-tools-you-use/&#34; target=&#34;_blank&#34;&gt;RebelLabs Developer Productivity Report 2017: Why do you use the Java tools you use?&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Tags: java-ee, spring, kotlin, java, jvm, scala, clojure, productivity, rebel-labs, oleg-shelajev, zero-turnaround, 2017, report, comparison&lt;/p&gt;

&lt;p&gt;Id: 1c603222-7a20-11e8-8f75-0242ac110002
Read: Wed, 27 Jun 2018 15:38:16 +0000&lt;/p&gt;

&lt;h2 id=&#34;why-paper-is-the-real-killer-app-http-www-bbc-com-capital-story-20170120-why-paper-is-the-real-killer-app&#34;&gt;&lt;a href=&#34;http://www.bbc.com/capital/story/20170120-why-paper-is-the-real-killer-app&#34; target=&#34;_blank&#34;&gt;Why paper is the real &amp;lsquo;killer app&amp;rsquo;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Alison Birrane on how working on a low-tech device is different than on a high-tech device (e.g., taking notes on a paper sheet vs on a laptop). On how it stimulates different parts of the brain. The multiple uses of the paper as compared to the narrowness of the apps.&lt;/p&gt;

&lt;p&gt;Tags: alison-birrane, killer-app, comparison, media, social-media, gadget, low-tech, technology, smartphone&lt;/p&gt;

&lt;p&gt;Id: 2ac58bdc-7a20-11e8-a82d-0242ac110002
Read: Wed, 27 Jun 2018 15:38:40 +0000&lt;/p&gt;

&lt;h2 id=&#34;self-study-guide-to-machine-learning-https-machinelearningmastery-com-self-study-guide-to-machine-learning&#34;&gt;&lt;a href=&#34;https://machinelearningmastery.com/self-study-guide-to-machine-learning/&#34; target=&#34;_blank&#34;&gt;Self-Study Guide to Machine Learning&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Tags: self-study, machine-learning, jason-brownlee&lt;/p&gt;

&lt;p&gt;Id: 388125f6-7a20-11e8-aae6-0242ac110002
Read: Wed, 27 Jun 2018 15:39:04 +0000&lt;/p&gt;

&lt;h2 id=&#34;breaking-up-the-behemoth&#34;&gt;[Breaking Up the Behemoth]()&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Sandi Metz explaining how applications evolve, and what we might do if we&amp;rsquo;re unhappy with the results using:  Design Stamina Hypothesis (Fowler), Procedural vs Object-Oriented Code and X.&lt;/p&gt;

&lt;p&gt;Tags: ood, object-orientation, sandi-metz, martin-fowler, design-stamina, quality, behemoth, monolith&lt;/p&gt;

&lt;p&gt;Id: 457003ea-7a20-11e8-a3ff-0242ac110002
Read: Wed, 27 Jun 2018 15:39:25 +0000&lt;/p&gt;

&lt;h2 id=&#34;10-hard-things-to-start-doing-for-yourself-http-www-marcandangel-com-2017-09-24-10-hard-things-to-start-doing-for-yourself&#34;&gt;&lt;a href=&#34;http://www.marcandangel.com/2017/09/24/10-hard-things-to-start-doing-for-yourself/&#34; target=&#34;_blank&#34;&gt;10 Hard Things to Start Doing for Yourself&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this self-help article on how to help yourself by doing hard things:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Start letting go of unnecessary ideals
Start putting your heart and soul into the things you do
Start stretching yourself just beyond the edge of comfort
Start taking more deep breaths, so you can mindfully collect more lessons for the long run
Start side-stepping senseless drama
Start staying true to your values and convictions
Start looking for silver linings
Start focusing inward more often
Start embracing your humanness and giving yourself more credit
Start taking the next small, insignificant step (one at a time, every day).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;By Marc Chernoff&lt;/p&gt;

&lt;p&gt;Tags: marc-chernoff, self-help, meditation, breathing, comfort-zone, help&lt;/p&gt;

&lt;p&gt;Id: 53a89846-7a20-11e8-abd1-0242ac110002
Read: Wed, 27 Jun 2018 15:39:49 +0000&lt;/p&gt;

&lt;h2 id=&#34;happiness-is-overrated-finding-deep-meaning-in-life-comes-down-to-4-pillars-http-www-businessinsider-com-emily-esfehani-smith-finding-meaning-life-4-pillars-2017-9&#34;&gt;&lt;a href=&#34;http://www.businessinsider.com/emily-esfehani-smith-finding-meaning-life-4-pillars-2017-9&#34; target=&#34;_blank&#34;&gt;Happiness is overrated — finding deep meaning in life comes down to 4 &amp;lsquo;pillars&amp;rsquo;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article about what life is about: not happiness but four pillars: belonging and purpose, transcendence and storytelling
storytelling helps people create meaning because it allows people to create, edit, and transform the story of their lives&lt;/p&gt;

&lt;p&gt;Tags: happiness, life, fulfillment, pillar, belonging, purpose, flow, transcendence, storytelling,, chris-weller&lt;/p&gt;

&lt;p&gt;Id: 9737002a-7a20-11e8-a864-0242ac110002
Read: Wed, 27 Jun 2018 15:41:42 +0000&lt;/p&gt;

&lt;h2 id=&#34;it-s-time-to-kill-the-web-https-blog-plan99-net-its-time-to-kill-the-web-974a9fe80c89&#34;&gt;&lt;a href=&#34;https://blog.plan99.net/its-time-to-kill-the-web-974a9fe80c89&#34; target=&#34;_blank&#34;&gt;It’s time to kill the web&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article that explains the background of the web and how it wasn&amp;rsquo;t designed to support applications but documents. Explains the downsides and security profile of a webapp as compared to a desktop/native application. By Mike Hearn&lt;/p&gt;

&lt;p&gt;Tags: comparison, web-app, application, app, desktop-app, native-app, mike-hearn, security, html, html5, javascript, web&lt;/p&gt;

&lt;p&gt;Id: a3e1c936-7a20-11e8-8fbe-0242ac110002
Read: Wed, 27 Jun 2018 15:42:04 +0000&lt;/p&gt;

&lt;h2 id=&#34;how-to-stay-focused-when-you-re-working-from-home-https-hbr-org-2017-09-how-to-stay-focused-when-youre-working-from-home-formcheck-bc3e82f422e9567c25d37e403ee877e6&#34;&gt;&lt;a href=&#34;https://hbr.org/2017/09/how-to-stay-focused-when-youre-working-from-home&amp;amp;formCheck=bc3e82f422e9567c25d37e403ee877e6&#34; target=&#34;_blank&#34;&gt;How to Stay Focused When You’re Working from Home&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article on structuring your workday while being at home (remote work).&lt;/p&gt;

&lt;p&gt;Some tips:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Structure for success&lt;/li&gt;
&lt;li&gt;Schedule your day: when it&amp;rsquo;s work-related time and when not&lt;/li&gt;
&lt;li&gt;Set boundaries&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;By Elizabeth Grace Saunders&lt;/p&gt;

&lt;p&gt;Tags: remote, remote-work, hbr, harvard-business-review, elizabeth-saunders&lt;/p&gt;

&lt;p&gt;Id: b2ddd326-7a20-11e8-9af5-0242ac110002
Read: Wed, 27 Jun 2018 15:42:29 +0000&lt;/p&gt;

&lt;h2 id=&#34;cognitive-biases-in-programming-https-hackernoon-com-cognitive-biases-in-programming-5e937707c27b&#34;&gt;&lt;a href=&#34;https://hackernoon.com/cognitive-biases-in-programming-5e937707c27b&#34; target=&#34;_blank&#34;&gt;Cognitive Biases in Programming&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article that explains some cognitive biases (prejudices of our mind) while programming:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Hyperbolic Discounting: Going for an immediate payoff instead of a delayed larger one&lt;/li&gt;
&lt;li&gt;IKEA Effect:Overvaluing your own solutions to a problem, and thus in contrast undervalue other solutions. Also called the &amp;ldquo;Not-Invented-Here (NIH) Syndrome&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Premature Optimization: Optimizing before you know that you need to.&lt;/li&gt;
&lt;li&gt;Planning Fallacy: Optimistically underestimating the time required to complete a task&lt;/li&gt;
&lt;li&gt;Recency Bias: Placing higher value on recent events than ones that occurred further in the past&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;We can never completely eliminate our biases, by being aware of how it is affecting us, we can somewhat mitigate the problems it causes.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;By Yash Ranadive&lt;/p&gt;

&lt;p&gt;Tags: yash-ranadive, bias, programming, mind&lt;/p&gt;

&lt;p&gt;Id: c8742b18-7a20-11e8-b36f-0242ac110002
Read: Wed, 27 Jun 2018 15:43:05 +0000&lt;/p&gt;

&lt;h2 id=&#34;keybase-launches-encrypted-git-https-keybase-io-blog-encrypted-git-for-everyone&#34;&gt;&lt;a href=&#34;https://keybase.io/blog/encrypted-git-for-everyone&#34; target=&#34;_blank&#34;&gt;Keybase launches encrypted git&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read how to encrypt git repositories using keybase&lt;/p&gt;

&lt;p&gt;Tags: keybase, git, encryption, security, private-key, public-key, storage, archive&lt;/p&gt;

&lt;p&gt;Id: dcd43756-7a20-11e8-b0ee-0242ac110002
Read: Wed, 27 Jun 2018 15:43:39 +0000&lt;/p&gt;

&lt;h2 id=&#34;general-and-surprising-http-paulgraham-com-sun-html&#34;&gt;&lt;a href=&#34;http://paulgraham.com/sun.html&#34; target=&#34;_blank&#34;&gt;General and Surprising&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article about how information can be classified as general vs specific and surprising vs unsurprising. How it&amp;rsquo;s best to find a small surprising general thing.&lt;/p&gt;

&lt;p&gt;Tags: paul-graham, surprising, general, information, classification&lt;/p&gt;

&lt;p&gt;Id: f611b626-7a20-11e8-8172-0242ac110002
Read: Wed, 27 Jun 2018 15:44:22 +0000&lt;/p&gt;

&lt;h2 id=&#34;i-built-a-server-less-telegram-bot-over-a-weekend-and-here-s-what-i-learned-https-medium-com-moses-soh-how-to-build-a-server-less-telegram-bot-227f842f4706&#34;&gt;&lt;a href=&#34;https://medium.com/@moses.soh/how-to-build-a-server-less-telegram-bot-227f842f4706&#34; target=&#34;_blank&#34;&gt;I built a server-less Telegram bot over a weekend and here’s what I learned&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article on creating a telegram chatbot for a specific purpose. Connects two people (first one subscribes, then the other asks for help and the first is contacted) so the first helps the second. By Moses Soh&lt;/p&gt;

&lt;p&gt;Tags: telegram, chatbot, app, moses-soh, side-project, pet-project, project&lt;/p&gt;

&lt;p&gt;Id: 25b1e5d6-7a21-11e8-a838-0242ac110002
Read: Wed, 27 Jun 2018 15:45:41 +0000&lt;/p&gt;

&lt;h2 id=&#34;reviewing-ethereum-smart-contracts-https-blog-gdssecurity-com-labs-2017-9-27-reviewing-ethereum-smart-contracts-html&#34;&gt;&lt;a href=&#34;https://blog.gdssecurity.com/labs/2017/9/27/reviewing-ethereum-smart-contracts.html&#34; target=&#34;_blank&#34;&gt;Reviewing Ethereum Smart Contracts&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article about how to review ethereum contracts and a concrete example of an attack to a smart contract&lt;/p&gt;

&lt;p&gt;Tags: ethereum, smart-contract, crypto-currency, ico, trustless, security, code-review&lt;/p&gt;

&lt;p&gt;Id: 5d73322c-7a21-11e8-8e1a-0242ac110002
Read: Wed, 27 Jun 2018 15:47:15 +0000&lt;/p&gt;

&lt;h2 id=&#34;keep-calm-and-carry-on-scaling-your-org-with-microservices-https-bridgetkromhout-com-speaking-2017-srecon&#34;&gt;&lt;a href=&#34;https://bridgetkromhout.com/speaking/2017/srecon/&#34; target=&#34;_blank&#34;&gt;Keep Calm and Carry On - Scaling Your Org with Microservices&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read the slides of this presentation by Bridget Kromhout and Charity Majors about organizations and microservices: the main problem is the communication&lt;/p&gt;

&lt;p&gt;Tags: charity-majors, bridget-kromhout, microservice, organization, communication, devops&lt;/p&gt;

&lt;p&gt;Id: ea81381c-7a21-11e8-b418-0242ac110002
Read: Wed, 27 Jun 2018 15:51:12 +0000&lt;/p&gt;

&lt;h2 id=&#34;guía-al-movimiento-noestimates-https-jeronimopalacios-com-2016-09-guia-al-movimiento-noestimates&#34;&gt;&lt;a href=&#34;https://jeronimopalacios.com/2016/09/guia-al-movimiento-noestimates/&#34; target=&#34;_blank&#34;&gt;Guía al movimiento #NoEstimates&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Jeronimo Palacios, giving an overview of the no estimates movement.&lt;/p&gt;

&lt;p&gt;Tags: no-estimates, jeronimo-palacios, agile, scrum, estimate, forecast, management&lt;/p&gt;

&lt;p&gt;Id: f6c70a98-7a21-11e8-a896-0242ac110002
Read: Wed, 27 Jun 2018 15:51:32 +0000&lt;/p&gt;

&lt;h2 id=&#34;core-competence-http-www-economist-com-node-12231124&#34;&gt;&lt;a href=&#34;http://www.economist.com/node/12231124&#34; target=&#34;_blank&#34;&gt;Core competence&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article describing what a core competence is and how can we find out if a competence is considered core or not.&lt;/p&gt;

&lt;p&gt;Tags: economy, definition, core-competence, core-business, management, prahalad, gary-hamel&lt;/p&gt;

&lt;p&gt;Id: 01a58660-7a22-11e8-b4f8-0242ac110002
Read: Wed, 27 Jun 2018 15:51:50 +0000&lt;/p&gt;

&lt;h2 id=&#34;how-i-stopped-procrastinating-learned-to-code-and-launched-my-first-product-https-dev-to-lynnetye-how-i-stopped-procrastinating-learned-to-code-and-launched-my-first-product-2i1&#34;&gt;&lt;a href=&#34;https://dev.to/lynnetye/how-i-stopped-procrastinating-learned-to-code-and-launched-my-first-product-2i1&#34; target=&#34;_blank&#34;&gt;How I stopped procrastinating, learned to code, and launched my first product&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article explaining some tips and tricks to launch a side project. By Lynne Tye&lt;/p&gt;

&lt;p&gt;Tags: lynne-tye, tips-and-tricks, product, side-project, launch, business, lean, startup, product-management&lt;/p&gt;

&lt;p&gt;Id: 0e85e3f2-7a22-11e8-b818-0242ac110002
Read: Wed, 27 Jun 2018 15:52:12 +0000&lt;/p&gt;

&lt;h2 id=&#34;when-are-citi-bikes-faster-than-taxis-in-new-york-city-http-toddwschneider-com-posts-taxi-vs-citi-bike-nyc&#34;&gt;&lt;a href=&#34;http://toddwschneider.com/posts/taxi-vs-citi-bike-nyc/&#34; target=&#34;_blank&#34;&gt;When are Citi Bikes Faster than Taxis in New York City?&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Todd Schneider analysing how city bikes compare to taxis in New York city.&lt;/p&gt;

&lt;p&gt;Good analysis, using a Monte Carlo simulation, written in R. Good data visualization.&lt;/p&gt;

&lt;p&gt;Tags: todd-schneider, data-visualization, map, city-bike, taxi, cab, new-york, new-york-city, comparison, data, data-analytics, monte-carlo, simulation, r&lt;/p&gt;

&lt;p&gt;Id: 18bc20c0-7a22-11e8-9209-0242ac110002
Read: Wed, 27 Jun 2018 15:52:29 +0000&lt;/p&gt;

&lt;h2 id=&#34;java-9-and-intellij-idea-https-blog-jetbrains-com-idea-2017-09-java-9-and-intellij-idea&#34;&gt;&lt;a href=&#34;https://blog.jetbrains.com/idea/2017/09/java-9-and-intellij-idea/&#34; target=&#34;_blank&#34;&gt;Java 9 and IntelliJ IDEA&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Trisha Gee about upcoming features to IntelliJ Idea 2017.3, centered around java 9 features&lt;/p&gt;

&lt;p&gt;Tags: trisha-gee, java-9, jdk-9, java, jdk, intellij-idea, ide, ide-support, jetbrains&lt;/p&gt;

&lt;p&gt;Id: 23b8350e-7a22-11e8-a9f3-0242ac110002
Read: Wed, 27 Jun 2018 15:52:48 +0000&lt;/p&gt;

&lt;h2 id=&#34;learn-from-your-attackers-ssh-honeypot-https-www-robertputt-co-uk-learn-from-your-attackers-ssh-honeypot-html&#34;&gt;&lt;a href=&#34;https://www.robertputt.co.uk/learn-from-your-attackers-ssh-honeypot.html&#34; target=&#34;_blank&#34;&gt;Learn from your attackers - SSH HoneyPot&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article on how to setup a honey pot machine using honssh. By Robert Putt&lt;/p&gt;

&lt;p&gt;Tags: robert-putt, honey-pot, security, honeypot, honssh, attacker&lt;/p&gt;

&lt;p&gt;Id: 2e36336e-7a22-11e8-9424-0242ac110002
Read: Wed, 27 Jun 2018 15:53:05 +0000&lt;/p&gt;

&lt;h2 id=&#34;to-type-or-not-to-type-quantifying-detectable-bugs-in-javascript-https-blog-acolyer-org-2017-09-19-to-type-or-not-to-type-quantifying-detectable-bugs-in-javascript&#34;&gt;&lt;a href=&#34;https://blog.acolyer.org/2017/09/19/to-type-or-not-to-type-quantifying-detectable-bugs-in-javascript/&#34; target=&#34;_blank&#34;&gt;To type or not to type: quantifying detectable bugs in JavaScript&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this paper commentary by Adrian Colyer (on a paper by Zheng Gao, Christian Bird, Earl T. Barr) on a study that tries to reproduce fixes for defects based on the dynamic to static typing system.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;both Flow and TypeScript are pretty good, and conservatively either of them can prevent about 15% of the bugs that end up in committed code.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It&amp;rsquo;s interesting to see these effects quantified:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Running the binomial test on the results shows that, at the confidence level of 95%, the true percentage of detectable bugs for Flow and TypeScript falls into [11.5%, 18.5%] with mean 15%.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Also, some recommendations for the future: for typescript and flow to be compatible for more gains.&lt;/p&gt;

&lt;p&gt;Original paper: &lt;a href=&#34;http://ttendency.cs.ucl.ac.uk/projects/type_study/documents/type_study.pdf&#34; target=&#34;_blank&#34;&gt;http://ttendency.cs.ucl.ac.uk/projects/type_study/documents/type_study.pdf&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tags: zheng-gao, christian-bird, earl-barr, typescript, javascript, flow, bug, defect, type-system, dynamic-typing, static-typing&lt;/p&gt;

&lt;p&gt;Id: 398cc606-7a22-11e8-b33c-0242ac110002
Read: Wed, 27 Jun 2018 15:53:24 +0000&lt;/p&gt;

&lt;h2 id=&#34;how-artificial-intelligence-can-be-used-for-password-guessing-https-medium-com-heyfebin-how-artificial-intelligence-can-be-used-for-password-guessing-cf4fd4184a46&#34;&gt;&lt;a href=&#34;https://medium.com/@heyfebin/how-artificial-intelligence-can-be-used-for-password-guessing-cf4fd4184a46&#34; target=&#34;_blank&#34;&gt;How Artificial Intelligence Can Be Used For Password Guessing&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Febin John James on how neural networks can learn from the leaked passwords and try to guess passwords for existing users&lt;/p&gt;

&lt;p&gt;Tags: febin-james, ai, artificial-intelligence, generative-adversarial-neural-network, gann, gan, nn, neural-network, guessing, password&lt;/p&gt;

&lt;p&gt;Id: 44fe19ae-7a22-11e8-8e06-0242ac110002
Read: Wed, 27 Jun 2018 15:53:43 +0000&lt;/p&gt;

&lt;h2 id=&#34;chrome-to-force-dev-domains-to-https-via-preloaded-hsts-https-ma-ttias-be-chrome-force-dev-domains-https-via-preloaded-hsts&#34;&gt;&lt;a href=&#34;https://ma.ttias.be/chrome-force-dev-domains-https-via-preloaded-hsts/&#34; target=&#34;_blank&#34;&gt;Chrome to force .dev domains to HTTPS via preloaded HSTS&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Mattias Geniar explaining the having the new Chrome redirecting .dev domains to https means that people using said .dev for local development will have to either provide a https server on their machines or change to another domain&lt;/p&gt;

&lt;p&gt;Tags: mattias-geniar, chrome, http, https, server, development, test, machine&lt;/p&gt;

&lt;p&gt;Id: 509c472c-7a22-11e8-81d7-0242ac110002
Read: Wed, 27 Jun 2018 15:54:03 +0000&lt;/p&gt;

&lt;h2 id=&#34;six-ways-to-functional-fizzbuzz-with-vavr-https-www-sitepoint-com-functional-fizzbuzz-with-vavr&#34;&gt;&lt;a href=&#34;https://www.sitepoint.com/functional-fizzbuzz-with-vavr/&#34; target=&#34;_blank&#34;&gt;Six Ways to Functional FizzBuzz with Vavr&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Gregor Trefs about solving the fizzbuzz kata using vavr, importing some concepts from functional programming&lt;/p&gt;

&lt;p&gt;Tags: functional-programming, gregor-trefs, vavr, case-statement, pattern-matching, functional, kata, fizzbuzz&lt;/p&gt;

&lt;p&gt;Id: 6866497a-7a22-11e8-af91-0242ac110002
Read: Wed, 27 Jun 2018 15:54:43 +0000&lt;/p&gt;

&lt;h2 id=&#34;more-women-take-on-role-of-cfo-at-home-https-paidpost-nytimes-com-northern-trust-more-women-take-on-role-of-cfo-at-home-html&#34;&gt;&lt;a href=&#34;https://paidpost.nytimes.com/northern-trust/more-women-take-on-role-of-cfo-at-home.html&#34; target=&#34;_blank&#34;&gt;More Women Take on Role of CFO — at Home&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article on how women act as CFO of their houses (managing 30% of the world&amp;rsquo;s wealth), how they teach money and meaning to their children.&lt;/p&gt;

&lt;p&gt;Tags: money-management, cfo, women, gender, home, house&lt;/p&gt;

&lt;p&gt;Id: 74f60720-7a22-11e8-a9a3-0242ac110002
Read: Wed, 27 Jun 2018 15:55:04 +0000&lt;/p&gt;

&lt;h2 id=&#34;the-internet-of-things-is-sending-us-back-to-the-middle-ages-https-thenextweb-com-lifestyle-2017-09-13-internet-things-sending-us-back-middle-ages&#34;&gt;&lt;a href=&#34;https://thenextweb.com/lifestyle/2017/09/13/internet-things-sending-us-back-middle-ages/&#34; target=&#34;_blank&#34;&gt;The Internet of Things is sending us back to the Middle Ages&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by JOSHUA A.T. FAIRFIELD on the right-to-own, right-to-repair and property.&lt;/p&gt;

&lt;p&gt;On the difference in the real property of a smartphone vs a car. On the imaginary, they are the same, but in contractual terms, there is a big difference.&lt;/p&gt;

&lt;p&gt;Tags: joshua-fairfield, right-to-repair, bill, law, property, smartphone, eula, license, clause, imaginary&lt;/p&gt;

&lt;p&gt;Id: 80c233ee-7a22-11e8-8743-0242ac110002
Read: Wed, 27 Jun 2018 15:55:24 +0000&lt;/p&gt;

&lt;h2 id=&#34;an-in-depth-guide-to-personal-cybersecurity-https-medium-com-nickrosener-an-in-depth-guide-to-personal-cybersecurity-be98ba47c968&#34;&gt;&lt;a href=&#34;https://medium.com/@nickrosener/an-in-depth-guide-to-personal-cybersecurity-be98ba47c968&#34; target=&#34;_blank&#34;&gt;An In-Depth Guide to Personal Cybersecurity&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this guide to personal security in the net, by Nick Rosener. Examples include 2fa, password management, app security, phone security, etc&lt;/p&gt;

&lt;p&gt;Tags: nick-rosener, 2fa, mfa, password, security, phone&lt;/p&gt;

&lt;p&gt;Id: 92c637d4-7a22-11e8-baba-0242ac110002
Read: Wed, 27 Jun 2018 15:55:54 +0000&lt;/p&gt;

&lt;h2 id=&#34;como-generar-fake-data-en-nuestros-tests-de-aceptación-http-programmeratwork-com-2017-09-06-como-generar-fake-data-en-nuestros-tests-de-aceptacion&#34;&gt;&lt;a href=&#34;http://programmeratwork.com/2017/09/06/Como-generar-fake-data-en-nuestros-tests-de-aceptacion/&#34; target=&#34;_blank&#34;&gt;Como generar &amp;ldquo;fake data&amp;rdquo; en nuestros tests de aceptación&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article (in Spanish) by Ricardo Borillo on using and generating fake data for our tests&lt;/p&gt;

&lt;p&gt;Tags: ricardo-borillo, borillo, fake-data, npm, npm-module, acceptance-testing, test, test-data, spanish&lt;/p&gt;

&lt;p&gt;Id: a0be3cd8-7a22-11e8-a5aa-0242ac110002
Read: Wed, 27 Jun 2018 15:56:17 +0000&lt;/p&gt;

&lt;h2 id=&#34;making-crash-bandicoot-gool-part-9-http-all-things-andy-gavin-com-2011-03-12-making-crash-bandicoot-gool-part-9&#34;&gt;&lt;a href=&#34;http://all-things-andy-gavin.com/2011/03/12/making-crash-bandicoot-gool-part-9/&#34; target=&#34;_blank&#34;&gt;Making Crash Bandicoot – GOOL – part 9&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Andy Gavin on making a lisp for games, an embedded language inside another language.&lt;/p&gt;

&lt;p&gt;GOOL prefers the power and maintainability of a lisp rather than the raw power of a lower-level programming language&lt;/p&gt;

&lt;p&gt;Tags: andy-gavin, lisp, gool, crash-bandicoot, game, game-development&lt;/p&gt;

&lt;p&gt;Id: 46ffc936-7a23-11e8-882f-0242ac110002
Read: Wed, 27 Jun 2018 16:00:56 +0000&lt;/p&gt;

&lt;h2 id=&#34;history-of-symbolics-lisp-machines-rebuttal-to-stallman-s-story-about-the-formation-of-symbolics-and-lmi-https-danluu-com-symbolics-lisp-machines&#34;&gt;&lt;a href=&#34;https://danluu.com/symbolics-lisp-machines/&#34; target=&#34;_blank&#34;&gt;History of Symbolics lisp machines - Rebuttal to Stallman’s Story About The Formation of Symbolics and LMI&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Dan Weinreb on the history of lisp machines, the AI winter and the rebuttal of some stories by Richard M. Stallman&lt;/p&gt;

&lt;p&gt;Tags: dan-weinreb, lisp, symbolics, rms, richard-stallman, lisp-machine, lmi, dan-luu, ai-winter, ai&lt;/p&gt;

&lt;p&gt;Id: 5174beda-7a23-11e8-bf1e-0242ac110002
Read: Wed, 27 Jun 2018 16:01:14 +0000&lt;/p&gt;

&lt;h2 id=&#34;free-for-dev-https-github-com-ripienaar-free-for-dev-blob-master-readme-md&#34;&gt;&lt;a href=&#34;https://github.com/ripienaar/free-for-dev/blob/master/README.md&#34; target=&#34;_blank&#34;&gt;free-for-dev&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this list of (free) resources for programmers&lt;/p&gt;

&lt;p&gt;Tags: free-resource, resource, service, amazon, aws, free-tier, free-trial, github&lt;/p&gt;

&lt;p&gt;Id: 5bd0ece6-7a23-11e8-8014-0242ac110002
Read: Wed, 27 Jun 2018 16:01:31 +0000&lt;/p&gt;

&lt;h2 id=&#34;every-programmer-should-know-https-github-com-mr-mig-every-programmer-should-know&#34;&gt;&lt;a href=&#34;https://github.com/mr-mig/every-programmer-should-know&#34; target=&#34;_blank&#34;&gt;Every Programmer Should Know&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this page on things a programmer should know&lt;/p&gt;

&lt;p&gt;Tags: github, programmer, knowledge&lt;/p&gt;

&lt;p&gt;Id: 67c8032c-7a23-11e8-9ab7-0242ac110002
Read: Wed, 27 Jun 2018 16:01:51 +0000&lt;/p&gt;

&lt;h2 id=&#34;haste-makes-waste-when-you-over-staff-to-achieve-schedule-compression-http-www-qsm-com-risk-02-html&#34;&gt;&lt;a href=&#34;http://www.qsm.com/risk_02.html&#34; target=&#34;_blank&#34;&gt;Haste Makes Waste When You Over-Staff to Achieve Schedule Compression&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Quantitative Software Management (QSM) on how software projects are affected by the size of the team producing it, with charts and based on previous investigation&lt;/p&gt;

&lt;p&gt;Tags: research, meta-research, quality, software, software-quality, qsm, quantitative-software-management&lt;/p&gt;

&lt;p&gt;Id: 72b999a8-7a23-11e8-b831-0242ac110002
Read: Wed, 27 Jun 2018 16:02:10 +0000&lt;/p&gt;

&lt;h2 id=&#34;hacking-back-considered-harmful-https-blog-0day-rocks-hacking-back-considered-harmful-1ea38f882e8f&#34;&gt;&lt;a href=&#34;https://blog.0day.rocks/hacking-back-considered-harmful-1ea38f882e8f&#34; target=&#34;_blank&#34;&gt;Hacking back considered harmful?&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by x0rz, a security researcher, on hacking back&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;active countermeasure that result in limiting the attacker capabilities&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And whether it is ethical to do it, even if it were illegal&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Ethics is knowing the difference between what you have a right to do and what is right to do. — Potter Stewart&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tags: x0rz, security, hacking, hacking-back, ethic, legality, law, quote, potter-stewart, countermeasure, attacker&lt;/p&gt;

&lt;p&gt;Id: 7d3d216a-7a23-11e8-8d31-0242ac110002
Read: Wed, 27 Jun 2018 16:02:27 +0000&lt;/p&gt;

&lt;h2 id=&#34;kurt-gödel-separating-truth-from-proof-in-mathematics-http-science-sciencemag-org-content-sci-298-5600-1899-full-pdf-sid-c031062c-8030-4e2c-8716-04409d7abefb&#34;&gt;&lt;a href=&#34;http://science.sciencemag.org/content/sci/298/5600/1899.full.pdf?sid=c031062c-8030-4e2c-8716-04409d7abefb&#34; target=&#34;_blank&#34;&gt;Kurt Gödel—Separating Truth from Proof in Mathematics&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Keith Devlin on Goedel&amp;rsquo;s work, especially on the Incompleteness theorem&lt;/p&gt;

&lt;p&gt;Tags: kurt-godel, kurt-goedel, incompleteness-theorem, bertrand-russell, alfred-north, principia-mathematica, david-hilbert, mathematics, theorem, computability, philosophy&lt;/p&gt;

&lt;p&gt;Id: 8bda1c3c-7a23-11e8-b1cb-0242ac110002
Read: Wed, 27 Jun 2018 16:02:52 +0000&lt;/p&gt;

&lt;h2 id=&#34;ml-for-the-working-programmer-2nd-edition-chapter-5-https-www-cl-cam-ac-uk-lp15-mlbook-pdf-chapter5-pdf&#34;&gt;&lt;a href=&#34;https://www.cl.cam.ac.uk/~lp15/MLbook/PDF/chapter5.pdf&#34; target=&#34;_blank&#34;&gt;ML for the working programmer, 2nd edition - chapter 5&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this chapter, to better understand finite and infinite data structures. Talks about streams (called sequences in ML), HOFs, lambda calculus. The book is by Lawrence Paulson&lt;/p&gt;

&lt;p&gt;Some of my examples are in&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/alvarogarcia7/haskell-simple-sessions/blob/master/trees/src/Trees.hs&#34; target=&#34;_blank&#34;&gt;https://github.com/alvarogarcia7/haskell-simple-sessions/blob/master/trees/src/Trees.hs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/alvarogarcia7/javascript-simple-sessions/tree/master/streams&#34; target=&#34;_blank&#34;&gt;https://github.com/alvarogarcia7/javascript-simple-sessions/tree/master/streams&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tags: book, chapter, lawrence-paulson, ml, sequence, hof, lambda-calculus, combinator, stream, lazy-list, data-structure, infinite-list, higher-order-function, function-composition&lt;/p&gt;

&lt;p&gt;Id: 97e67a7a-7a23-11e8-bc72-0242ac110002
Read: Wed, 27 Jun 2018 16:03:12 +0000&lt;/p&gt;

&lt;h2 id=&#34;how-to-hack-the-uk-tax-system-i-guess-https-medium-com-zemnmez-how-to-hack-the-uk-tax-system-i-guess-3e84b70f8b&#34;&gt;&lt;a href=&#34;https://medium.com/@Zemnmez/how-to-hack-the-uk-tax-system-i-guess-3e84b70f8b&#34; target=&#34;_blank&#34;&gt;how to hack the uk tax system, i guess&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this investigation of how a security investigator found a security defect in the UK tax system page and the process of reporting it and seeing it fixed&lt;/p&gt;

&lt;p&gt;Tags: zemnmez, open-source, uk, hmrc, responsible-disclosure&lt;/p&gt;

&lt;p&gt;Id: a4263c08-7a23-11e8-86c0-0242ac110002
Read: Wed, 27 Jun 2018 16:03:33 +0000&lt;/p&gt;

&lt;h2 id=&#34;indirect-sale-value-models-http-www-catb-org-esr-writings-magic-cauldron-magic-cauldron-9-html&#34;&gt;&lt;a href=&#34;http://www.catb.org/esr/writings/magic-cauldron/magic-cauldron-9.html&#34; target=&#34;_blank&#34;&gt;Indirect Sale-Value Models&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article on models for selling/monetising open source. By Eric S. Raymond&lt;/p&gt;

&lt;p&gt;Tags: eric-raymond, open-source, monetization&lt;/p&gt;

&lt;p&gt;Id: b0788d3a-7a23-11e8-82df-0242ac110002
Read: Wed, 27 Jun 2018 16:03:53 +0000&lt;/p&gt;

&lt;h2 id=&#34;i-ll-never-bring-my-phone-on-an-international-flight-again-neither-should-you-https-medium-freecodecamp-org-ill-never-bring-my-phone-on-an-international-flight-again-neither-should-you-e9289cde0e5f&#34;&gt;&lt;a href=&#34;https://medium.freecodecamp.org/ill-never-bring-my-phone-on-an-international-flight-again-neither-should-you-e9289cde0e5f&#34; target=&#34;_blank&#34;&gt;I’ll never bring my phone on an international flight again. Neither should you&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Quincy Larson on what happens when you bring your phone over to the US&lt;/p&gt;

&lt;p&gt;Tags: us, phone, privacy, quincy-larson, international-flight, cross-border-flight, flight, device, laptop, burner-phone&lt;/p&gt;

&lt;p&gt;Id: bc93aaf0-7a23-11e8-8ffe-0242ac110002
Read: Wed, 27 Jun 2018 16:04:14 +0000&lt;/p&gt;

&lt;h2 id=&#34;remote-starter-kit-http-www-remotestarterkit-com&#34;&gt;&lt;a href=&#34;http://www.remotestarterkit.com&#34; target=&#34;_blank&#34;&gt; Remote Starter Kit&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this page detailing some tools for a remote position&lt;/p&gt;

&lt;p&gt;Tags: remote, remote-work, remote-tool, tool, starter-kit&lt;/p&gt;

&lt;p&gt;Id: cfe1bdfe-7a23-11e8-b024-0242ac110002
Read: Wed, 27 Jun 2018 16:04:46 +0000&lt;/p&gt;

&lt;h2 id=&#34;moving-java-forward-faster-https-mreinhold-org-blog-forward-faster&#34;&gt;&lt;a href=&#34;https://mreinhold.org/blog/forward-faster&#34; target=&#34;_blank&#34;&gt;Moving Java Forward Faster&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Mark Reinhold, explaining his proposal for a faster java release train, changing from every two years to every six months.&lt;/p&gt;

&lt;p&gt;Tags: release, mark-reinhold, release-management, release-train, java, sun, oracle, brian-goetz, jre, jdk&lt;/p&gt;

&lt;p&gt;Id: dc842498-7a23-11e8-8b35-0242ac110002
Read: Wed, 27 Jun 2018 16:05:07 +0000&lt;/p&gt;

&lt;h2 id=&#34;keeping-a-tidy-life-https-medium-com-ctrlaltjustine-keeping-a-tidy-life-f01bbe2a9b3e&#34;&gt;&lt;a href=&#34;https://medium.com/@ctrlaltjustine/keeping-a-tidy-life-f01bbe2a9b3e&#34; target=&#34;_blank&#34;&gt;Keeping a tidy life&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Justine Arreche on how she manages her productivity tools: calendar, todo list; for all the activities in her life&lt;/p&gt;

&lt;p&gt;Tags: justine-arreche, productivity, management, calendar, todo-list, activity, time-management&lt;/p&gt;

&lt;p&gt;Id: e799c860-7a23-11e8-9f75-0242ac110002
Read: Wed, 27 Jun 2018 16:05:26 +0000&lt;/p&gt;

&lt;h2 id=&#34;to-understand-rising-inequality-consider-the-janitors-at-two-top-companies-then-and-now-https-www-nytimes-com-2017-09-03-upshot-to-understand-rising-inequality-consider-the-janitors-at-two-top-companies-then-and-now-html&#34;&gt;&lt;a href=&#34;https://www.nytimes.com/2017/09/03/upshot/to-understand-rising-inequality-consider-the-janitors-at-two-top-companies-then-and-now.html&#34; target=&#34;_blank&#34;&gt;To Understand Rising Inequality, Consider the Janitors at Two Top Companies, Then and Now&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Neil Irwin on inequality, explaining the professional career of two janitors at two different companies, in a different period of time.&lt;/p&gt;

&lt;p&gt;Tags: neil-irwin, inequality, kodak, apple, janitor, mercer, drucker, management, career-management, career, cto, cio&lt;/p&gt;

&lt;p&gt;Id: f66efafe-7a23-11e8-ae3d-0242ac110002
Read: Wed, 27 Jun 2018 16:05:51 +0000&lt;/p&gt;

&lt;h2 id=&#34;episode-8-interview-with-ryan-dahl-creator-of-node-js-https-www-mappingthejourney-com-single-post-2017-08-31-episode-8-interview-with-ryan-dahl-creator-of-nodejs&#34;&gt;&lt;a href=&#34;https://www.mappingthejourney.com/single-post/2017/08/31/Episode-8-Interview-with-Ryan-Dahl-Creator-of-Nodejs&#34; target=&#34;_blank&#34;&gt;Episode 8: Interview with Ryan Dahl, Creator of Node.js&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read [the transcription of] this interview, to Ryan Dahl.&lt;/p&gt;

&lt;p&gt;In it, he describes his view of Node.js and how it is not well-suited for building massive web servers, but could be appropriate for web applications&lt;/p&gt;

&lt;p&gt;Tags: ryan-dahl, go, microservice, web-app, interview, podcast, web-server, go, golang&lt;/p&gt;

&lt;p&gt;Id: 03cbbfca-7a24-11e8-927a-0242ac110002
Read: Wed, 27 Jun 2018 16:06:13 +0000&lt;/p&gt;

&lt;h2 id=&#34;the-recovering-programmer-http-prog21-dadgum-com-56-html&#34;&gt;&lt;a href=&#34;http://prog21.dadgum.com/56.html&#34; target=&#34;_blank&#34;&gt;The Recovering Programmer&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by James Hague on the user-centric vision and how he faces the problems related to programming&lt;/p&gt;

&lt;p&gt;Tags: programming, user-centric, vision, game, assembler, james-hague, recovering-programmer&lt;/p&gt;

&lt;p&gt;Id: 0db84e2c-7a24-11e8-ac3c-0242ac110002
Read: Wed, 27 Jun 2018 16:06:30 +0000&lt;/p&gt;

&lt;h2 id=&#34;we-who-value-simplicity-have-built-incomprehensible-machines-http-prog21-dadgum-com-139-html&#34;&gt;&lt;a href=&#34;http://prog21.dadgum.com/139.html&#34; target=&#34;_blank&#34;&gt;We Who Value Simplicity Have Built Incomprehensible Machines&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by  James Hague on examples of libraries that went wrong. How we should have said &amp;lsquo;no&amp;rsquo; early on instead of accepting it. A blog post about simplicity&lt;/p&gt;

&lt;p&gt;Tags: james-hague, simplicity, library, complexity, example&lt;/p&gt;

&lt;p&gt;Id: 192eae72-7a24-11e8-bc6c-0242ac110002
Read: Wed, 27 Jun 2018 16:06:49 +0000&lt;/p&gt;

&lt;h2 id=&#34;rapid-release-at-massive-scale-https-code-facebook-com-posts-270314900139291-rapid-release-at-massive-scale&#34;&gt;&lt;a href=&#34;https://code.facebook.com/posts/270314900139291/rapid-release-at-massive-scale/&#34; target=&#34;_blank&#34;&gt;Rapid release at massive scale&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Tags:&lt;/p&gt;

&lt;p&gt;Id: 24c02266-7a24-11e8-bddd-0242ac110002
Read: Wed, 27 Jun 2018 16:07:08 +0000&lt;/p&gt;

&lt;h2 id=&#34;having-a-work-wife-or-work-husband-is-good-for-your-career-https-www-linkedin-com-pulse-having-work-wife-husband-good-your-career-rebecca-holman&#34;&gt;&lt;a href=&#34;https://www.linkedin.com/pulse/having-work-wife-husband-good-your-career-rebecca-holman&#34; target=&#34;_blank&#34;&gt;Having a &amp;ldquo;work wife&amp;rdquo; or &amp;ldquo;work husband&amp;rdquo; is good for your career&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Rebecca Holman explaining what is a work spouse (i.e., a trusted equal to bounce off ideas, discuss, advance together). Not a mentor, not a trusted boss, not someone reporting to you.&lt;/p&gt;

&lt;p&gt;Explains some of the benefits of finding that role.&lt;/p&gt;

&lt;p&gt;Tags: rebecca-holman, work-wife, work-husband, work-spouse, team-management, work, job, pairing, mentor&lt;/p&gt;

&lt;p&gt;Id: 3136db02-7a24-11e8-b84e-0242ac110002
Read: Wed, 27 Jun 2018 16:07:29 +0000&lt;/p&gt;

&lt;h2 id=&#34;rest-apis-are-rest-in-peace-apis-long-live-graphql-https-medium-freecodecamp-org-rest-apis-are-rest-in-peace-apis-long-live-graphql-d412e559d8e4&#34;&gt;&lt;a href=&#34;https://medium.freecodecamp.org/rest-apis-are-rest-in-peace-apis-long-live-graphql-d412e559d8e4&#34; target=&#34;_blank&#34;&gt;REST APIs are REST-in-Peace APIs. Long Live GraphQL.&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article about GraphQL and its comparison to REST APIs&lt;/p&gt;

&lt;p&gt;Tags: graphql, rest, api, data, comparison, samer-buna&lt;/p&gt;

&lt;p&gt;Id: 3df70628-7a24-11e8-9c3c-0242ac110002
Read: Wed, 27 Jun 2018 16:07:51 +0000&lt;/p&gt;

&lt;h2 id=&#34;history-of-lisp-http-www-formal-stanford-edu-jmc-history-lisp-lisp-html&#34;&gt;&lt;a href=&#34;http://www-formal.stanford.edu/jmc/history/lisp/lisp.html&#34; target=&#34;_blank&#34;&gt;History of Lisp&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this paper by John McCarthy explaining the history of lisp&lt;/p&gt;

&lt;p&gt;Tags: john-mccarthy, lisp, invention, language, list-processing, s-expression, m-expression, data, code, lisp-dialect, fortran, ibm&lt;/p&gt;

&lt;p&gt;Id: 492eebb4-7a24-11e8-bcec-0242ac110002
Read: Wed, 27 Jun 2018 16:08:10 +0000&lt;/p&gt;

&lt;h2 id=&#34;software-development-450-words-per-minute-https-www-vincit-fi-en-blog-software-development-450-words-per-minute&#34;&gt;&lt;a href=&#34;https://www.vincit.fi/en/blog/software-development-450-words-per-minute/&#34; target=&#34;_blank&#34;&gt;Software development 450 words per minute&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article in which Tuukka Ojala explains how his tools for a (blind) software developer: the screen reader, the browser, the braille reader&lt;/p&gt;

&lt;p&gt;Tags: tuukka-ojala, blindness, accesibility, browser, screen-reader, braille-reader, braille, disability&lt;/p&gt;

&lt;p&gt;Id: 54e4e076-7a24-11e8-abd6-0242ac110002
Read: Wed, 27 Jun 2018 16:08:29 +0000&lt;/p&gt;

&lt;h2 id=&#34;compare-your-efforts-30-vs-3000-loc-for-very-simple-mean-app-http-blog-allcountjs-com-post-128771961651-compare-efforts&#34;&gt;&lt;a href=&#34;http://blog.allcountjs.com/post/128771961651/compare-efforts&#34; target=&#34;_blank&#34;&gt;Compare your efforts: 30 vs 3000 LOC for very simple MEAN app&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article that explains the difference between business value and technical value: a feature for the business could be very valuable but technically costly; also the other way around: they are independent variables.&lt;/p&gt;

&lt;p&gt;Also explains that some value in development can be obtained quicker by using a framework, such as the tool that allcountjs provides: 30 lines to generate the equivalent business features to 3000 lines&lt;/p&gt;

&lt;p&gt;Tags: allcountjs, mean, comparison, crud, framework, javascript, frontend, productivity, business-value, technical-value, cost&lt;/p&gt;

&lt;p&gt;Id: 5eea69ce-7a24-11e8-8842-0242ac110002
Read: Wed, 27 Jun 2018 16:08:46 +0000&lt;/p&gt;

&lt;h2 id=&#34;github-integration-https-medium-com-leanpub-github-integration-6f6d81847230&#34;&gt;&lt;a href=&#34;https://medium.com/@leanpub/github-integration-6f6d81847230&#34; target=&#34;_blank&#34;&gt;GitHub Integration&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article explaining how to integrate leanpub with github: write your book (e.g., in markdown) and store it in git, then publish automatically to leanpub&lt;/p&gt;

&lt;p&gt;Tags: leanpub, github, integration, self-publishing, publishing, book, tool, toolchain&lt;/p&gt;

&lt;p&gt;Id: 699d067e-7a24-11e8-9962-0242ac110002
Read: Wed, 27 Jun 2018 16:09:04 +0000&lt;/p&gt;

&lt;h2 id=&#34;wysiwtf-https-alistapart-com-column-wysiwtf&#34;&gt;&lt;a href=&#34;https://alistapart.com/column/wysiwtf&#34; target=&#34;_blank&#34;&gt;WYSIWTF&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Karen McGrane explaining the desktop publishing and the difference between writing and formatting for the web. Also, inline editing&lt;/p&gt;

&lt;p&gt;Tags: karen-mcgrane, editing, formatting, desktop-publishing, medium, wysiwyg&lt;/p&gt;

&lt;p&gt;Id: 7b5f342c-7a24-11e8-b858-0242ac110002
Read: Wed, 27 Jun 2018 16:09:34 +0000&lt;/p&gt;

&lt;h2 id=&#34;what-i-m-talking-about-when-i-talk-about-tdd-https-medium-com-ramtop-what-im-talking-about-when-i-talk-about-tdd-546a383468be&#34;&gt;&lt;a href=&#34;https://medium.com/@ramtop/what-im-talking-about-when-i-talk-about-tdd-546a383468be&#34; target=&#34;_blank&#34;&gt;What I’m talking about when I talk about TDD&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Uberto Barbini in which he describes his re-discovery of TDD as a tool to design&lt;/p&gt;

&lt;p&gt;Tags: uberto-barbini, tdd, rediscovery, kent-beck, test-driven-development&lt;/p&gt;

&lt;p&gt;Id: 866b41b2-7a24-11e8-9c54-0242ac110002
Read: Wed, 27 Jun 2018 16:09:52 +0000&lt;/p&gt;

&lt;h2 id=&#34;se-radio-episode-273-steve-mcconnell-on-software-estimation-http-www-se-radio-net-2016-11-se-radio-episode-273-steve-mcconnell-on-software-estimation&#34;&gt;&lt;a href=&#34;http://www.se-radio.net/2016/11/se-radio-episode-273-steve-mcconnell-on-software-estimation/&#34; target=&#34;_blank&#34;&gt;SE-Radio Episode 273: Steve McConnell on Software Estimation&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Sven Johann interviews Steve McConnell about software estimation and planning.&lt;/p&gt;

&lt;p&gt;Talks about intrinsic risk management and extrinsic risk management&lt;/p&gt;

&lt;p&gt;Explains that you should manage the risk so the most uncertain is tackled in the beginning. At the retro (following the demo), you get risk identification (as root cause analysis based on not delivering as expected)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The goal of Agile was not to be able to change all the time, but to adapt to change&lt;/p&gt;

&lt;p&gt;Embrace change&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tags: cone-of-uncertainty, agile, project-management, risk, sven-johann, steve-mcconnell, iteration, scrum, risk-identification&lt;/p&gt;

&lt;p&gt;Id: 9c543506-7a24-11e8-8c9b-0242ac110002
Read: Wed, 27 Jun 2018 16:10:29 +0000&lt;/p&gt;

&lt;h2 id=&#34;software-psychology-with-bjorn-freeman-benson-https-softwareengineeringdaily-com-2017-03-28-software-psychology-with-bjorn-freeman-benson&#34;&gt;&lt;a href=&#34;https://softwareengineeringdaily.com/2017/03/28/software-psychology-with-bjorn-freeman-benson/&#34; target=&#34;_blank&#34;&gt;Software Psychology with Bjorn Freeman Benson&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve listened to this podcast on psychology&lt;/p&gt;

&lt;p&gt;Tags: software-engineering-daily, bjorn-benson, psychology, walled-garden&lt;/p&gt;

&lt;p&gt;Id: a90cf1ac-7a24-11e8-a69e-0242ac110002
Read: Wed, 27 Jun 2018 16:10:50 +0000&lt;/p&gt;

&lt;h2 id=&#34;using-cqrs-to-make-controllers-lean-with-derek-comartin-https-softwareengineeringdaily-com-2017-03-10-using-cqrs-to-make-controllers-lean-with-derek-comartin&#34;&gt;&lt;a href=&#34;https://softwareengineeringdaily.com/2017/03/10/using-cqrs-to-make-controllers-lean-with-derek-comartin/&#34; target=&#34;_blank&#34;&gt;Using CQRS to Make Controllers Lean with Derek Comartin&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve listened to this podcast on CQRS&lt;/p&gt;

&lt;p&gt;Tags: cqrs, derek-comartin, command-query-responsibility-segregation, greg-young, udi-dahan, red-book, ddd, domain-driven-design, podcast, software-engineering-daily&lt;/p&gt;

&lt;p&gt;Id: b2056db6-7a24-11e8-97d3-0242ac110002
Read: Wed, 27 Jun 2018 16:11:05 +0000&lt;/p&gt;

&lt;h2 id=&#34;elm-in-production-25-000-lines-later-https-functional-works-hub-com-blog-elm-in-production-25-000-lines-later&#34;&gt;&lt;a href=&#34;https://functional.works-hub.com/blog/Elm-In-Production-25-000-Lines-Later&#34; target=&#34;_blank&#34;&gt;Elm In Production: 25,000 Lines Later&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Christian Charukiewicz explaining how he started a new project and a new feature in Elm. How he explained this new technology to his teammates and how it is going now.&lt;/p&gt;

&lt;p&gt;Explains the pros and cons for the language.&lt;/p&gt;

&lt;p&gt;Tags: christian-charukiewicz, elm, compiler, experience-report, frontend, functional-language, functional-programming&lt;/p&gt;

&lt;p&gt;Id: bc6e1190-7a24-11e8-b19a-0242ac110002
Read: Wed, 27 Jun 2018 16:11:23 +0000&lt;/p&gt;

&lt;h2 id=&#34;growing-up-with-alexa-https-www-technologyreview-com-s-608430-growing-up-with-alexa&#34;&gt;&lt;a href=&#34;https://www.technologyreview.com/s/608430/growing-up-with-alexa/&#34; target=&#34;_blank&#34;&gt;Growing Up with Alexa&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Tags:&lt;/p&gt;

&lt;p&gt;Id: c2416c52-7a24-11e8-b692-0242ac110002
Read: Wed, 27 Jun 2018 16:11:33 +0000&lt;/p&gt;

&lt;h2 id=&#34;jony-s-patience-https-medium-com-mkruz-jony-s-patience-670d5a3dc128&#34;&gt;&lt;a href=&#34;https://medium.com/@mkruz/jony-s-patience-670d5a3dc128&#34; target=&#34;_blank&#34;&gt;Jony’s Patience&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Mike Kruzeniski explaining part of John Ive career at Apple and explaining part of the design process the Apple Watch had.&lt;/p&gt;

&lt;p&gt;Tags: ux, design, apple, watch, john-ive, mike-kruzeniski, career, career-management&lt;/p&gt;

&lt;p&gt;Id: cb789e76-7a24-11e8-bdb2-0242ac110002
Read: Wed, 27 Jun 2018 16:11:48 +0000&lt;/p&gt;

&lt;h2 id=&#34;the-four-month-bug-jvm-statistics-cause-garbage-collection-pauses-http-www-evanjones-ca-jvm-mmap-pause-html&#34;&gt;&lt;a href=&#34;http://www.evanjones.ca/jvm-mmap-pause.html&#34; target=&#34;_blank&#34;&gt;The Four Month Bug: JVM statistics cause garbage collection pauses&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this blog post by Evan Jones as an example of unknown unknown&lt;/p&gt;

&lt;p&gt;Tags: evan-jones, unknown-unknown, java, mmap, garbage-collector, pause, unknown&lt;/p&gt;

&lt;p&gt;Id: d4b6a596-7a24-11e8-b245-0242ac110002
Read: Wed, 27 Jun 2018 16:12:04 +0000&lt;/p&gt;

&lt;h2 id=&#34;the-pleasure-of-building-big-things-http-rc3-org-2015-03-24-the-pleasure-of-building-big-things&#34;&gt;&lt;a href=&#34;http://rc3.org/2015/03/24/the-pleasure-of-building-big-things/&#34; target=&#34;_blank&#34;&gt;The pleasure of building big things&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article explaining that big projects take time to be created.&lt;/p&gt;

&lt;p&gt;The temptation is all around us, to accelerate feedback loops, create products more quickly, release earlier. That has the tension of being &amp;lsquo;half-baked&amp;rsquo; products, that have not achieved the minimum level of loveable feature and, thus, not used.&lt;/p&gt;

&lt;p&gt;Tags: time, focus, rafe-colburn, product, lean&lt;/p&gt;

&lt;p&gt;Id: dddee4c6-7a24-11e8-b11f-0242ac110002
Read: Wed, 27 Jun 2018 16:12:19 +0000&lt;/p&gt;

&lt;h2 id=&#34;choose-boring-technology-http-mcfunley-com-choose-boring-technology&#34;&gt;&lt;a href=&#34;http://mcfunley.com/choose-boring-technology/&#34; target=&#34;_blank&#34;&gt;Choose Boring Technology&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Dan McKinley about how choosing boring (i.e., well-proven) technology can help you focus on your company goals and how &amp;lsquo;the best tool for the job&amp;rsquo; is not always the case, as the job depends on who you ask: developers, ops, business.&lt;/p&gt;

&lt;p&gt;Tags: dan-mckinley, boring, technology, proven, production-ready, development, operations, focus, business, goal, best-tool-for-the-job&lt;/p&gt;

&lt;p&gt;Id: e91565cc-7a24-11e8-8849-0242ac110002
Read: Wed, 27 Jun 2018 16:12:38 +0000&lt;/p&gt;

&lt;h2 id=&#34;exclusive-here-s-the-full-10-page-anti-diversity-screed-circulating-internally-at-google-updated-https-gizmodo-com-exclusive-heres-the-full-10-page-anti-diversity-screed-1797564320&#34;&gt;&lt;a href=&#34;https://gizmodo.com/exclusive-heres-the-full-10-page-anti-diversity-screed-1797564320&#34; target=&#34;_blank&#34;&gt;Exclusive: Here&amp;rsquo;s The Full 10-Page Anti-Diversity Screed Circulating Internally at Google [Updated]&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I have read this document&lt;/p&gt;

&lt;p&gt;Tags: google, scandal, sexism&lt;/p&gt;

&lt;p&gt;Id: fe723d14-7a24-11e8-ab5c-0242ac110002
Read: Wed, 27 Jun 2018 16:13:14 +0000&lt;/p&gt;

&lt;h2 id=&#34;check-your-work-https-8thlight-com-blog-connor-mendenhall-2013-10-31-check-your-work-html&#34;&gt;&lt;a href=&#34;https://8thlight.com/blog/connor-mendenhall/2013/10/31/check-your-work.html&#34; target=&#34;_blank&#34;&gt;Check Your Work&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Tags:&lt;/p&gt;

&lt;p&gt;Id: 172e94e2-7a25-11e8-86cc-0242ac110002
Read: Wed, 27 Jun 2018 16:13:55 +0000&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Finding all pending work in progress (WIP) in your workspace</title>
      <link>https://alvarogarcia7.github.io/blog/2017/08/07/find-all-pending-work/</link>
      <pubDate>Mon, 07 Aug 2017 06:32:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2017/08/07/find-all-pending-work/</guid>
      <description>&lt;p&gt;It is a good practice to push your local work at the end of the day. Be it for increasing the bus factor (more people have the code), be it for reducing the lifespan of the branches (less time without integrating) or just enabling visibility (your teammates to see what has been developed). If you&amp;rsquo;re using Continuous Integration (CI) or Continuous Delivery (CD), this is even more often&lt;/p&gt;

&lt;p&gt;You can even do it more often: for example before going to lunch, before a meeting, before a demo, etc.&lt;/p&gt;

&lt;p&gt;Working with many repositories (e.g. a microservices environment/architecture), it is often the case where you will have multiple folders with work, possibly work in progress (WIP).&lt;/p&gt;

&lt;p&gt;This is why we have created a small tool to detect git repositories that have local changes that haven&amp;rsquo;t been pushed yet: &lt;a href=&#34;https://github.com/alvarogarcia7/find-wip&#34; target=&#34;_blank&#34;&gt;Find WIP&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Feedback is more than welcome.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Self-Study in April 2017</title>
      <link>https://alvarogarcia7.github.io/blog/2017/04/01/self-study-in-april-2017/</link>
      <pubDate>Sat, 01 Apr 2017 11:32:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2017/04/01/self-study-in-april-2017/</guid>
      <description>

&lt;!--
## Gerald Weinberg on Bugs, Errors, and Software Quality

I&#39;ve listened to [this interview][bug-error-weinberg] with Gerald Weinberg where he first talks about software quality, defining a fault, failure, a boo-boo, a blunder (below). Then, they move on to the cost of quality, experiences in his project &#39;Mercury&#39; (a man in orbit; his contribution was on the software side). Says it&#39;s one of his first projects where a person&#39;s life was directly related to a piece of software.

Fault: wrong operation in code
Failure: user&#39;s experience caused by a fault
Boo-boo: a one-off, small failure. Usually shrugged as a small defect
Blunder: a one-off, big failure. Can kill a career

About the cost of software, he mentions that many managers are not willing to pay the price of almost defect-free software and that this level of quality is not required in every project. This idea is similar to the one &#39;Testing every part is akin to reading every letter on the newspaper: one parts are more important than other&#39;.

This interview talks about similar topics than &#39;Why programs fail&#39;, especially about the definition.

At the end of the interview, he talks about team-based software development (~XP) and an anecdote about a company he was consulting with: follow the process or pay the defects out of your own pocket. One of them, accepted paying for defects, until he made a big mistake. Accepted training the rest of the employees into his very precise methods and became very valuable to the company.

Tags: podcast, gerald-weinberg, quality, interview, manager, software-quality, definition, fault, failure, boo-boo, blunder, project-mercury

TODO missing link

--&gt;

&lt;!--
## Microservice Practitioners with Austin Gunter and Richard Li

I&#39;ve listened to [this podcast][us-practitioners] at Software Engineering Daily with Austin Gunter and Richard Li. In it, they talk about how they have organized the conference &#39;Microservice Practicitioners&#39;: how to find speakers, the vibes of the conference, etc.

Tags: austin-gunter, richard-li, organize-a-conference, conference, microservice, microservice-practitioners, podcast, software-engineering-daily

TODO missing link

--&gt;

&lt;h2 id=&#34;10-myths-about-docker-that-stop-developers-cold&#34;&gt;10 Myths About Docker That Stop Developers Cold&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://dev.to/derickbailey/10-myths-about-docker-that-stop-developers-cold&#34; target=&#34;_blank&#34;&gt;this listicle&lt;/a&gt; of docker myths. By Derick Bailey&lt;/p&gt;

&lt;p&gt;Tags: derick-bailey, docker, myth&lt;/p&gt;

&lt;h2 id=&#34;bored-people-quit&#34;&gt;Bored People Quit&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://randsinrepose.com/archives/bored-people-quit/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Michael Lopp on what are some mechanisms why bored people quit.&lt;/p&gt;

&lt;p&gt;Some interesting quotes:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;My gig is the care and feeding of engineers, and their productivity is my productivity. If they all leave, I have exactly no job.&lt;/p&gt;

&lt;p&gt;My job isn’t just building product; I also build people.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tags: michael-lopp, boredness, team-management, people, career, tech-lead, quote&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Self-Study in May 2016</title>
      <link>https://alvarogarcia7.github.io/blog/2016/05/01/self-study/</link>
      <pubDate>Sun, 01 May 2016 00:08:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2016/05/01/self-study/</guid>
      <description>

&lt;h2 id=&#34;being-a-developer-after-40&#34;&gt;Being A Developer After 40&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.freecodecamp.com/being-a-developer-after-40-3c5dd112210c&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Adrian Kosmaczewski on the required topics to be a developer at age 40 and keep enjoying it:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Forget The Hype&lt;/li&gt;
&lt;li&gt;Choose Your Galaxy Wisely&lt;/li&gt;
&lt;li&gt;Learn About Software History&lt;/li&gt;
&lt;li&gt;Keep on Learning&lt;/li&gt;
&lt;li&gt;Teach&lt;/li&gt;
&lt;li&gt;Workplaces Suck&lt;/li&gt;
&lt;li&gt;Know Your Worth&lt;/li&gt;
&lt;li&gt;Send The Elevator Down&lt;/li&gt;
&lt;li&gt;LLVM&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;He references galaxy, the big stack you are positioned (JVM, .net, PHP, etc). He makes a special mention of the LLVM&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Take conscious decisions in your life. Be aware of your actions and their effect. Do not blush or be embarrased for changing your opinions. Say “I’m sorry” when required. Listen. Do not be a hotshot. Have integrity and self-respect.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Recommends these books:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Dealers of Lightning by Michael A. Hiltzik&lt;/li&gt;
&lt;li&gt;Revolution in the Valley by Andy Hertzfeld&lt;/li&gt;
&lt;li&gt;The Cathedral and the Bazaar by Eric S. Raymond&lt;/li&gt;
&lt;li&gt;The Success of Open Source by Steven Weber&lt;/li&gt;
&lt;li&gt;The Old New Thing by Raymond Chen&lt;/li&gt;
&lt;li&gt;The Mythical Man Month by Frederick P. Brooks Jr.&lt;/li&gt;
&lt;li&gt;Peopleware by Tom DeMarco and Tim Lister&lt;/li&gt;
&lt;li&gt;The Psychology of Software Programming by Gerald M. Weinberg&lt;/li&gt;
&lt;li&gt;Facts and Fallacies of Software Engineering by Robert L. Glass&lt;/li&gt;
&lt;li&gt;The Design of Everyday Things by Don Norman&lt;/li&gt;
&lt;li&gt;Agile!: The Good, the Hype and the Ugly by Bertrand Meyer&lt;/li&gt;
&lt;li&gt;Rework by Jason Fried and David Heinemeier Hansson&lt;/li&gt;
&lt;li&gt;Geekonomics by David Rice&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tags: adrian-kosmaczewski, career, profession, age, galaxy, long-term, book&lt;/p&gt;

&lt;h2 id=&#34;firing-people&#34;&gt;Firing people&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://zachholman.com/talk/firing-people&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Zach Holman on firing people at your current work, both from the perspective of the employee (fired), employer, coworker.&lt;/p&gt;

&lt;p&gt;Also explains his personal experience of being fired from Github.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You’ll know the difference between doing far and away your best work, and doing work that is still good, but just nominally better than what you’ve been doing. Once you catch yourself adjusting to that incremental progression… maybe it’s time to leave, to change things up&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tags: zach-holman, github, team-management, firing, coworker, employee, employer, job, relationship, next&lt;/p&gt;

&lt;h2 id=&#34;10-design-principles-for-developers&#34;&gt;10 design principles — for developers&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@nirbenita/the-10-design-heuristics-for-developers-1e70a9dc58a7&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; that explains what are the 10 design principles for programmers, as outlined by Jakob Nielsen. The article itself is by Nir Benita&lt;/p&gt;

&lt;p&gt;Tags: design-principle, ux, jakob-nielsen, nir-benita, usability, testing, list&lt;/p&gt;

&lt;h2 id=&#34;design-patterns-coming-full-circle-part-two&#34;&gt;Design Patterns — Coming Full Circle, Part Two&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/swlh/design-patterns-coming-full-circle-part-two-ced2c69e4724#.x8ud7eeqm&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; that explains how design patterns can be observed and then discovered and shows a list of four patterns dot working with data, by flux.io. Article by Jen Carlile&lt;/p&gt;

&lt;p&gt;Tags: design-pattern, data, pattern, flux, flux-io, pattern-catalog, jen-carlile&lt;/p&gt;

&lt;h2 id=&#34;why-i-m-ending-my-github-streak-after-844-days&#34;&gt;Why I’m Ending my Github Streak after 844 Days&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@karan/why-i-m-ending-my-github-streak-after-844-days-80fd014dc8df&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Karan Goel on the mechanics of following a pattern, of an activity sliced in small parts (1 problem a day or half an hour) and how this can be counterproductive sometimes.&lt;/p&gt;

&lt;p&gt;Discusses ROI of this type of activity at the beginning of your career and later.&lt;/p&gt;

&lt;p&gt;Tags: karan-goel, github, streak, python, code, everyday, practice, deliberate-practice, career, career-management&lt;/p&gt;

&lt;h2 id=&#34;good-lessons-learned-from-past-jobs&#34;&gt;Good lessons learned from past jobs&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.kartones.net/post/good-lessons-learned-from-past-jobs/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Diego &amp;lsquo;Kartones&amp;rsquo; on a synopsis of his work experience, job by job and what he has learned on each job.&lt;/p&gt;

&lt;p&gt;Tags: diego-kartones, job, professional-career, career&lt;/p&gt;

&lt;h2 id=&#34;too-much-work-in-progress&#34;&gt;Too Much Work In Progress&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://monospacedmonologues.com/post/144137568985/too-much-work-in-progress&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Samir Talwar on factors that indicate work in progress.&lt;/p&gt;

&lt;p&gt;Tags: wip, work-in-progress, list, samir-talwar&lt;/p&gt;

&lt;h2 id=&#34;testdouble&#34;&gt;TestDouble&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.martinfowler.com/bliki/TestDouble.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Martin Fowler describing the test doubles that Gerard Meszaros describes in xUnit Test Patterns.&lt;/p&gt;

&lt;p&gt;Tags: test-double, martin-fowler, gerard-meszaros, stub, fake, mock, dummy, spy, xunit, junit, pattern, test-pattern&lt;/p&gt;

&lt;h2 id=&#34;scaling-to-12-million-concurrent-connections-how-migratorydata-did-it&#34;&gt;Scaling to 12 Million Concurrent Connections: How MigratoryData Did It&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://mrotaru.wordpress.com/2013/10/10/scaling-to-12-million-concurrent-connections-how-migratorydata-did-it/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Mihai Rotaru on how MigratoryData scaled to 12 million concurrent connections in a 1U server. They explain what optimizations they did in order to achieve this.&lt;/p&gt;

&lt;p&gt;Tags: migratorydata, mihai-rotaru, concurrent-connection, 1u-server, scalability, websocket&lt;/p&gt;

&lt;h2 id=&#34;do-what-you-love&#34;&gt;Do what you love&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://www.linkedin.com/pulse/do-what-you-love-jorge-diaz&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Jorge Diaz on doing what takes you out of your comfort zone, changing careers, and life-work in general.&lt;/p&gt;

&lt;p&gt;Cites this &lt;a href=&#34;https://www.ted.com/talks/scott_dinsmore_how_to_find_work_you_love/transcript?language=en&#34; target=&#34;_blank&#34;&gt;TED talk: How to find work you love&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tags: jorge-diaz, work, life, career, comfort-zone, scott-dinsmore, career-management&lt;/p&gt;

&lt;h2 id=&#34;jhipster-the-best-way-to-breed-a-new-app&#34;&gt;JHipster - The best way to breed a new app&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://speakerdeck.com/olbpetersson/jhipster-the-best-way-to-breed-a-new-app&#34; target=&#34;_blank&#34;&gt;these slides&lt;/a&gt; by Ola Petersson, where he describes the architecture and contents of the jHipster, its pros and cons.&lt;/p&gt;

&lt;p&gt;Tags: jhipster, ola petersson, java, code-generation, code-generator, microservice&lt;/p&gt;

&lt;h2 id=&#34;how-going-to-coding-events-helped-me-get-an-awesome-job&#34;&gt;How going to coding events helped me get an awesome job&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.freecodecamp.com/networking-at-meet-ups-getting-hired-f0f7c4f4681a&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Gwendolyn Faraday on how to kickstart a career in web development, attending events, pairing and networking. That netted her some interviews to start programming for a living.&lt;/p&gt;

&lt;p&gt;Tags: networking, gwendolyn-faraday, event, job, learn-to-code&lt;/p&gt;

&lt;h2 id=&#34;maze-generation-algorithm-recap&#34;&gt;Maze Generation: Algorithm Recap&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://weblog.jamisbuck.org/2011/2/7/maze-generation-algorithm-recap&#34; target=&#34;_blank&#34;&gt;this list&lt;/a&gt; of maze-generation algorithms by Jamis Buck. Including:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;recursive backtracker&lt;/li&gt;
&lt;li&gt;Eller’s algorithm&lt;/li&gt;
&lt;li&gt;Kruskal’s algorithm&lt;/li&gt;
&lt;li&gt;Prim’s algorithm&lt;/li&gt;
&lt;li&gt;recursive division algorithm&lt;/li&gt;
&lt;li&gt;Aldous-Broder algorithm&lt;/li&gt;
&lt;li&gt;Wilson’s algorithm&lt;/li&gt;
&lt;li&gt;Hunt-and-Kill algorithm&lt;/li&gt;
&lt;li&gt;Growing Tree algorithm&lt;/li&gt;
&lt;li&gt;Binary Tree algorithm&lt;/li&gt;
&lt;li&gt;Sidewinder algorithm&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tags: recursive-backtracker,eller-algorithm,kruskal-algorithm,prim-algorithm,recursive-division-algorithm,aldous-broder-algorithm,wilson-algorithm,hunt-and-kill-algorithm,growing-tree-algorithm,binary-tree-algorithm,sidewinder-algorithm, jamis-buck, maze, maze-generation, algorithm, list&lt;/p&gt;

&lt;h2 id=&#34;the-poverty-of-constraints&#34;&gt;The Poverty of Constraints&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://weblog.jamisbuck.org/2016/3/19/poverty-of-constraints.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Jamis Buck on interpreting two Korean proverbs in the world of software:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A dutiful son comes from a poor home&lt;/li&gt;
&lt;li&gt;A poor house has many children&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tags: proverb, korea, philosophy, software, constraint, jamis-buck&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Self-Study in April 2016</title>
      <link>https://alvarogarcia7.github.io/blog/2016/04/01/self-study/</link>
      <pubDate>Fri, 01 Apr 2016 00:08:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2016/04/01/self-study/</guid>
      <description>

&lt;h2 id=&#34;deliberate-practice-what-it-is-and-why-you-need-it&#34;&gt;Deliberate Practice: What It Is and Why You Need It&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Corbett Barr on what is deliberate practice and why it is needed to become an expert in a given domain field.&lt;/p&gt;

&lt;p&gt;The four essential components:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Motivation&lt;/li&gt;
&lt;li&gt;Tailored (practice)&lt;/li&gt;
&lt;li&gt;Feedback&lt;/li&gt;
&lt;li&gt;Repetion
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tags: corbett-barr, deliberate-practice, expert, practice, anders-ericsson, talent, professional-development, career&lt;/p&gt;

&lt;h2 id=&#34;10-features-i-wish-java-would-steal-from-the-kotlin-language&#34;&gt;10 Features I Wish Java Would Steal From the Kotlin Language&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.jooq.org/2016/03/31/10-features-i-wish-java-would-steal-from-the-kotlin-language/&#34; target=&#34;_blank&#34;&gt;this list of features&lt;/a&gt; that the Kotlin Language has that would be an improvement for the Java language. By Lukas Eder&lt;/p&gt;

&lt;p&gt;Tags: list, lukas-eder, kotlin, java, comparison, language, jooq&lt;/p&gt;

&lt;h2 id=&#34;how-we-built-uber-engineering-s-highest-query-per-second-service-using-go&#34;&gt;How we built Uber engineering&amp;rsquo;s highest query per second service using Go&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://eng.uber.com/go-geofence/&#34; target=&#34;_blank&#34;&gt;this post&lt;/a&gt; by Kai Wei on a microservice they&amp;rsquo;ve built using Go.&lt;/p&gt;

&lt;p&gt;Explains the reasons for choosing that algorithm for geofencing, the performance they&amp;rsquo;re achieving, and the architecture.&lt;/p&gt;

&lt;p&gt;Tags: uber, go, microservice, performance, geofence, geofencing, rps, go-memory-model, kai-wei&lt;/p&gt;

&lt;h2 id=&#34;unwinding-uber-s-most-efficient-service&#34;&gt;Unwinding Uber&amp;rsquo;s Most Efficient Service&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@buckhx/unwinding-uber-s-most-efficient-service-406413c5871d&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Buck Heroux commenting on the decisions of Uber for building the geofencing microservice (above read).&lt;/p&gt;

&lt;p&gt;Explains the different alternatives for algorithms in this problem space and has implemented them in go. Provides a benchmark for comparing those, including a profiling session.&lt;/p&gt;

&lt;p&gt;Tags: s2, quadtree, rtree, brute-force, geofence, geofencing, uber, comment, buck-heroux, go, read-on-read, meta-read&lt;/p&gt;

&lt;h2 id=&#34;lawful-hacking-and-continuing-vulnerabilities&#34;&gt;Lawful Hacking and Continuing Vulnerabilities&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://www.schneier.com/blog/archives/2016/03/lawful_hacking_.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Bruce Schneier on the stance the FBI is taking in regards to vulnerabilities discovered in Apple&amp;rsquo;s devices.&lt;/p&gt;

&lt;p&gt;Tags: bruce-schneier, apple, security, fbi, vulnerability, exploit, law, hacking&lt;/p&gt;

&lt;h2 id=&#34;a-side-project-helped-jumpstart-my-career-life-learning&#34;&gt;A Side Project Helped Jumpstart My Career — Life Learning&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/life-learning/a-side-project-helped-jumpstart-my-career-7cd6f8e9b07f&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Dave Gerhardt on how making a side project happen affected his life and his skills.&lt;/p&gt;

&lt;p&gt;Some of the reasons for doing it include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It forces you to figure stuff out&lt;/li&gt;
&lt;li&gt;The only way to learn is by doing&lt;/li&gt;
&lt;li&gt;It gets your brain working on something other than your job&lt;/li&gt;
&lt;li&gt;You have to create your own network&lt;/li&gt;
&lt;li&gt;You are the CEO&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tags: long-life-learning, continuous-learning, side-project, dave-gerhardt, drift, professional-development, personal-development, business, career&lt;/p&gt;

&lt;h2 id=&#34;fun-jekyll-tricks&#34;&gt;Fun Jekyll Tricks&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.madebymarket.com/blog/dev/fun-jekyll-tricks.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Brian Knapp where he explains some tips and tricks of jekyll (in which octopress is based on): speed, deployment, subcategories inside the blog, _data, _includes.&lt;/p&gt;

&lt;p&gt;Tags: brian-knapp, jekyll, octopress, tip-and-trick, improvement, subcategory, meta, automation, deployment&lt;/p&gt;

&lt;h2 id=&#34;la-ola-que-llega&#34;&gt;La ola que llega&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://us2.campaign-archive2.com/?u=374c664073e1a1fa3deca53b4&amp;amp;id=f8a8ee92cc&#34; target=&#34;_blank&#34;&gt;this bonilista&lt;/a&gt; by David Bonilla, where he explains (in Spanish) the &amp;lsquo;contractor&amp;rsquo; phenomenon arriving to Spain, 2-3 years after being in other countries and the effects that this could have both for workers and companies.&lt;/p&gt;

&lt;p&gt;Tags: bonilista, david-bonilla, contractor&lt;/p&gt;

&lt;h2 id=&#34;10-razones-por-las-que-este-sábado-deberías-ir-a-un-code-retreat&#34;&gt;10 razones por las que este sábado deberías ir a un code retreat&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://francho.org/2015/11/10/10-razones-para-ir-a-un-coderetreat/&#34; target=&#34;_blank&#34;&gt;this list&lt;/a&gt; of reasons for attending a code retreat, by Francho Joven, who I met in the Global Day Of Code Retreat (GDCR) &amp;lsquo;15 in Zaragoza&lt;/p&gt;

&lt;p&gt;Tags: francho-joven, list, zaragoza, code-retreat, gdcr&lt;/p&gt;

&lt;h2 id=&#34;meaningful-work-through-passion-not-genius&#34;&gt;Meaningful Work through Passion, not Genius&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched &lt;a href=&#34;https://www.youtube.com/watch?v=pIYUMwxKFzo&#34; target=&#34;_blank&#34;&gt;this talk&lt;/a&gt; on the importance of hard work and how it can be mistaken as genious. By Malcolm Gladwell&lt;/p&gt;

&lt;p&gt;Tags: malcolm-gladwell, passion, genius, work, time-management, productivity, career, mastery-autonomy-purpose&lt;/p&gt;

&lt;h2 id=&#34;how-to-ask-your-wife-for-permission-to-spend-250-000-on-a-domain-name&#34;&gt;How to ask your wife for permission to spend $250,000 on a domain name&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@Stockphoto.com/how-to-ask-your-wife-for-permission-to-spend-250-000-on-a-domain-name-c27a3c2852e1&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Jon Yau on how they started StockPhoto.com, buying a $250,000 domain name.&lt;/p&gt;

&lt;p&gt;Tags: startup, domain, stockphoto, jon-yau&lt;/p&gt;

&lt;h2 id=&#34;sorry-developer-bootcamps-i-was-wrong&#34;&gt;Sorry, developer bootcamps: I was wrong&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@dillonforrest/sorry-developer-bootcamps-i-was-wrong-ea37fcc5572c&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Dillon Forrest on the topic of developer bootcamps. Explains why developers should not be threatened by recent graduates of these programs and describes how people pursuing these programs usually are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Intelligence&lt;/li&gt;
&lt;li&gt;Risk appetite&lt;/li&gt;
&lt;li&gt;Resilience&lt;/li&gt;
&lt;li&gt;Self-investment&lt;/li&gt;
&lt;li&gt;Entrepreneurship&lt;/li&gt;
&lt;li&gt;Growth trajectory&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tags: bootcamp, developer-bootcamp, dev-bootcamp, dillon-forrest, intelligence, risk-appetite, resilience, self-investment, entrepreneurship, growth-trajectory&lt;/p&gt;

&lt;h2 id=&#34;the-jvm-and-java-garbage-collection&#34;&gt;The JVM and Java Garbage Collection&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched &lt;a href=&#34;https://www.youtube.com/watch?v=DoJr5QQYsl8&#34; target=&#34;_blank&#34;&gt;this webcast&lt;/a&gt; about how the JVM garbage collection works. By Michael W Williams&lt;/p&gt;

&lt;p&gt;Tags: michael-williams, oracle, webcast, jvm, garbage-collection, gc,&lt;/p&gt;

&lt;h2 id=&#34;files-are-hard&#34;&gt;Files Are Hard&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://danluu.com/file-consistency/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; on why software that writes on files is difficult, based on the different filesystems that are below, and the operating system. Written by Dan Luu.&lt;/p&gt;

&lt;p&gt;Uses software product to find bugs in filesystems&lt;/p&gt;

&lt;p&gt;Tags: filesystem, file, dan-luu, analysis&lt;/p&gt;

&lt;h2 id=&#34;contrata-a-un-fracasado-con-ilusión-inquebrantable&#34;&gt;Contrata a un fracasado con ilusión inquebrantable&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.contunegocio.es/tecnologia/contrata-a-un-fracasado-con-ilusion-inquebrantable/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Alberto Mena (in Spanish) on what are the qualities that define a good programmer:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;humility&lt;/li&gt;
&lt;li&gt;failure&lt;/li&gt;
&lt;li&gt;illusion&lt;/li&gt;
&lt;li&gt;hard work&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tags: alberto-mena, spanish, team-management, success, developer, quality, developer-quality&lt;/p&gt;

&lt;h2 id=&#34;don-t-react&#34;&gt;Don&amp;rsquo;t react&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://journal.avdi.org/2016/04/14/dont-react/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Avdi Grimm on how the action vs reaction attitude. Why to prefer the former.&lt;/p&gt;

&lt;p&gt;Tags: action, reaction, social-media, avdi-grimm, productivity&lt;/p&gt;

&lt;h2 id=&#34;ftp-is-so-90-s-let-s-deploy-via-git-instead&#34;&gt;FTP is so 90&amp;rsquo;s. Let&amp;rsquo;s deploy via Git instead!&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://coderwall.com/p/xczkaq/ftp-is-so-90-s-let-s-deploy-via-git-instead&#34; target=&#34;_blank&#34;&gt;this guide&lt;/a&gt; on how to deploy using git. By Kerrick Long&lt;/p&gt;

&lt;p&gt;Tags: kerrick-long, git, deployment, webapp, application, devops&lt;/p&gt;

&lt;h2 id=&#34;job-vs-career-10-key-differences-you-need-to-understand&#34;&gt;Job vs Career: 10 Key Differences You Need To Understand&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://www.officevibe.com/blog/job-vs-career&#34; target=&#34;_blank&#34;&gt;the infographic and the article&lt;/a&gt; by Jacob Shriar on what differentiates a job from a career&lt;/p&gt;

&lt;p&gt;Tags: jacob-shriar, infographic, job-vs-career, comparison, job, career&lt;/p&gt;

&lt;h2 id=&#34;the-secret-to-employee-motivation&#34;&gt;The Secret To Employee Motivation&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://www.officevibe.com/blog/secret-employee-motivation-infographic&#34; target=&#34;_blank&#34;&gt;the infographic and the article&lt;/a&gt; by Jacob Shriar on what motivates employess: mastery, autonomy and purpose. A direct reference to Dan Pink&amp;rsquo;s &amp;ldquo;The puzzle of motivation&amp;rdquo; TED talk.&lt;/p&gt;

&lt;p&gt;Tags: jacob-shriar, motivation, employee, infographic, mastery, autonomy, purpose&lt;/p&gt;

&lt;h2 id=&#34;the-puzzle-of-motivation&#34;&gt;The puzzle of motivation&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched &lt;a href=&#34;https://www.ted.com/talks/dan_pink_on_motivation&#34; target=&#34;_blank&#34;&gt;this TED talk&lt;/a&gt; by Dan Pink on what motivates us: intrinsic vs extrinsic motivation.&lt;/p&gt;

&lt;p&gt;Also about the gap that exists between what science knows and what businesses propose.&lt;/p&gt;

&lt;p&gt;Tags: ted, ted-talk, video, dan-pink, mastery, autonomy, purpose&lt;/p&gt;

&lt;h2 id=&#34;applying-a-ceiling-to-the-bug-count&#34;&gt;Applying a ceiling to the bug count&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://techblog.king.com/applying-a-ceiling-to-the-bug-count/&#34; target=&#34;_blank&#34;&gt;this interview&lt;/a&gt;, written by Susanna Berg, on how King has reduced the amount of bugs in their backlog using an agile technique, measuring and setting a limit.&lt;/p&gt;

&lt;p&gt;Tags: susanna-berg, king, agile, bug, bug-count, defect, defect-count, per-malmen&lt;/p&gt;

&lt;h2 id=&#34;coming-up-in-2016-spring-framework-4-3-5-0&#34;&gt;Coming up in 2016: Spring Framework 4.3 &amp;amp; 5.0&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://spring.io/blog/2015/08/03/coming-up-in-2016-spring-framework-4-3-5-0&#34; target=&#34;_blank&#34;&gt;this announcement&lt;/a&gt; of Spring&amp;rsquo;s new release, 5.0, which will require java 8 and will turn most of the features into the reactive programming paradigm. By Juergen Hoeller.&lt;/p&gt;

&lt;p&gt;Tags: juergen-hoeller, spring, reactive-programming, release, announcement&lt;/p&gt;

&lt;h2 id=&#34;why-offices-are-where-work-goes-to-die&#34;&gt;Why offices are where work goes to die&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://swizec.com/blog/why-offices-are-where-work-goes-to-die/swizec/6695&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Swizec Teller explaining the downsides of working in an office as compared to working remotely.&lt;/p&gt;

&lt;p&gt;Tags: swizec-teller, remote, home-office, office, comparison, time-management&lt;/p&gt;

&lt;h2 id=&#34;the-myth-of-the-passionate-developer&#34;&gt;The Myth of the Passionate Developer&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@bm2yogi/the-myth-of-the-passionate-developer-76a41d457304&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Michael Ibarra on what are the implications of being a passionate developer, how it affects your tasks and what are the factors to a job.&lt;/p&gt;

&lt;p&gt;Tags: michael-ibarra, passion, development, job, motivation, myth&lt;/p&gt;

&lt;h2 id=&#34;mossack-fonseca-breach-wordpress-revolution-slider-plugin-possible-cause&#34;&gt;Mossack Fonseca Breach – WordPress Revolution Slider Plugin Possible Cause&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://www.wordfence.com/blog/2016/04/mossack-fonseca-breach-vulnerable-slider-revolution/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Mark Maunder, which describes an hypothesis on how the Mossack Fonseca breach could have happened. Also describes and shows how to breach a Wordpress installation with a vulnerable Revolution Slider plugin.&lt;/p&gt;

&lt;p&gt;Tags: mark-maunder, security, breach, mossack-fonseca-breach, mossack-fonseca, hypothesis, attack, plugin, revolution-slider, wordpress&lt;/p&gt;

&lt;h2 id=&#34;tim-urban-inside-the-mind-of-a-master-procrastinator&#34;&gt;Tim Urban: Inside the mind of a master procrastinator&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched &lt;a href=&#34;https://www.ted.com/talks/tim_urban_inside_the_mind_of_a_master_procrastinator&#34; target=&#34;_blank&#34;&gt;this TED talk&lt;/a&gt; from Tim Urban on how the procrastinator&amp;rsquo;s mind works, exemplified by his own career.&lt;/p&gt;

&lt;p&gt;Tags: procrastinator, procrastination, mind, time-management, tim-urban&lt;/p&gt;

&lt;h2 id=&#34;pep-20-the-zen-of-python&#34;&gt;PEP 20 &amp;ndash; The Zen of Python&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://www.python.org/dev/peps/pep-0020/&#34; target=&#34;_blank&#34;&gt;the PEP20&lt;/a&gt;, the zen of python, with special attention to this:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Explicit is better than implicit.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tags: pep-20, pep, python, zen&lt;/p&gt;

&lt;h2 id=&#34;why-i-switched-from-octopress-2-to-hugo&#34;&gt;Why I switched from Octopress 2 to Hugo&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://conscientiousprogrammer.com/blog/2015/05/31/why-i-switched-from-octopress-2-to-hugo/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Franklin Chen on the change he made on the static site generator (SSG) he used. He considered hakyll, octopress, jekyll, hugo. Was decided between hakyll and hugo for their speed but, finally, decided to use hugo for their bigger community.&lt;/p&gt;

&lt;p&gt;Tags: franklin-chen, comparison, ssg, static-site-generator, hakyll, octopress, jekyll, hugo, change, speed, statically-typed, dynamically-typed, golang, performance&lt;/p&gt;

&lt;h2 id=&#34;why-incremental-regeneration-in-jekyll-3-0-is-such-a-big-deal&#34;&gt;Why incremental regeneration in Jekyll 3.0 is such a big deal&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://idratherbewriting.com/2015/11/04/jekyll-30-released-incremental-regeneration-rocks/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Tom Johnson on one of the new features that jekyll 3.0 brings: incremental generation. How this can speed up the generation&lt;/p&gt;

&lt;p&gt;Tags: tom-johnson, incremental-generation, speed, performance, octopress-2, octopress-3, jekyll-3&lt;/p&gt;

&lt;h2 id=&#34;hugo-s3-travis-ci-oh-boy&#34;&gt;Hugo, S3, Travis CI, oh boy!&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://continuousfailure.com/post/s3_blog/&#34; target=&#34;_blank&#34;&gt;this guide&lt;/a&gt; by Alan Scherger on how to set up a specific stack for developing and deploying a static site blog.&lt;/p&gt;

&lt;p&gt;Tags: alan-scherger, static-site-generator, ssg, travis, hugo, s3&lt;/p&gt;

&lt;h2 id=&#34;deploy-your-blog-to-github-pages-automatically-using-hugo-and-travis&#34;&gt;Deploy your blog to github pages automatically using Hugo and Travis&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://rcoedo.com/post/hugo-static-site-generator/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Roman Coedo on how to deploy a hugo blog to github pages, using travis.&lt;/p&gt;

&lt;p&gt;Tags: roman-coedo, travis, hugo, github, github-pages, ssg, static-site-generator&lt;/p&gt;

&lt;h2 id=&#34;improve-octopress-with-advanced-tweaks-tips&#34;&gt;Improve Octopress with Advanced Tweaks &amp;amp; Tips&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://www.narga.net/improve-octopress-advanced-tweaks-tips/&#34; target=&#34;_blank&#34;&gt;this list&lt;/a&gt; of tips on how to improve the octopress (2) installation. By Nguyễn Đình Quân.&lt;/p&gt;

&lt;p&gt;Tags: nguyen-dinh-quan, octopress-2, tip, tweak&lt;/p&gt;

&lt;h2 id=&#34;laboratorios&#34;&gt;Laboratorios&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.presionblogosferica.com/2014/11/12/laboratorios/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Ángel Medinilla, about laboratories to use a percentage of company time to investigate, innovate, learn and improve.&lt;/p&gt;

&lt;p&gt;Tags: angel-medinilla, team-management, time-management, innovation, strategy, improvement, kaizen, laboratory, craftsmanship, spanish&lt;/p&gt;

&lt;h2 id=&#34;what-refactoring-is-and-what-it-isn-t&#34;&gt;What Refactoring is, and what it isn’t&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://swreflections.blogspot.com/2012/04/what-refactoring-is-and-what-it-isnt.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Jim Bird, where he splits some practices into refactoring and not refactoring. Draws the line between these two different activities.&lt;/p&gt;

&lt;p&gt;Also cites scratch refactoring.&lt;/p&gt;

&lt;p&gt;Tags: jim-bird, scratch-refactoring, refactoring, martin-fowler, kent-beck, definition, quote, design&lt;/p&gt;

&lt;h2 id=&#34;pitfalls-of-unlimited-vacations&#34;&gt;Pitfalls of Unlimited Vacations&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://haacked.com/archive/2016/02/18/unlimited-vaction-pitfalls/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Phil Haack on the github, travis and netflix policies about unlimited vacations and the effects they have on the employees.&lt;/p&gt;

&lt;p&gt;Also about minimum vacation periods, (paternity) paid leave.&lt;/p&gt;

&lt;p&gt;Tags: phil-haack, unlimited-vacation, holiday, vacation, team-management, burnout, github, travis, netflix, policy&lt;/p&gt;

&lt;h2 id=&#34;cultura-corporativa&#34;&gt;Cultura Corporativa&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.presionblogosferica.com/2011/02/06/cultura-corporativa/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Ángel Medinilla about the corporate culture, and how &amp;ldquo;hanging a highly interchangeable sentence on a wall&amp;rdquo; does not represent it.&lt;/p&gt;

&lt;p&gt;Tags: angel-medinilla, corporate culture, spanish&lt;/p&gt;

&lt;h2 id=&#34;what-it-s-really-like-to-learn-to-code&#34;&gt;What It’s Really Like to Learn to Code&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@sandjar/what-it-s-really-like-to-learn-to-code-53f6d9156a32&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; that explains firsthand how it is to learn programming for a novice student,even with a strong financial background and having completed a university degree. By Sandjar Kozubaev&lt;/p&gt;

&lt;p&gt;Tags: sandjar-kozubaev, learning, programming, student, firsthand, coding, story&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Self-Study in February 2016</title>
      <link>https://alvarogarcia7.github.io/blog/2016/02/01/self-study-in-february-2016/</link>
      <pubDate>Mon, 01 Feb 2016 02:55:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2016/02/01/self-study-in-february-2016/</guid>
      <description>

&lt;h2 id=&#34;software-and-all-that-comes-with-it&#34;&gt;Software and all that comes with it&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://lanyrd.com/2011/fromthefront/sgfgw/&#34; target=&#34;_blank&#34;&gt;these slides&lt;/a&gt; about creating software and asking questions to deliver value, by Alberto Brandolini&lt;/p&gt;

&lt;p&gt;Tags: alberto-brandolini, software, slide, team-management, agile&lt;/p&gt;

&lt;h2 id=&#34;driving-your-dba-crazy-in-3-easy-steps&#34;&gt;Driving your DBA crazy in 3 easy steps&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://lanyrd.com/2011/ddd-day-it/shzym&#34; target=&#34;_blank&#34;&gt;these slides&lt;/a&gt; about dealing with the knowledge that is present in the database, not expressed in ubiquitous language and cause of the low bus factor, by Alberto Brandolini&lt;/p&gt;

&lt;p&gt;Analogy between the movie The Shining and a model / entities / aggregates.&lt;/p&gt;

&lt;p&gt;Tags: ddd, model, entity, aggregate, team-management, dba, agile, ubiquitous-language, alberto-brandolini, bus-factor, slide&lt;/p&gt;

&lt;h2 id=&#34;shorter-feedback-is-not-always-bett&#34;&gt;Shorter Feedback is not Always Bett&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://facebook.com/notes/kent-beck/shorter-feedback-is-not-always-bett/1097086386990891&#34; target=&#34;_blank&#34;&gt;this note&lt;/a&gt; from Kent Beck on why shorter feedback loops might not always be better. I.e., why some processes take time to set in and results are not observable until that time.&lt;/p&gt;

&lt;p&gt;Tags:  kent-beck, feedback-loops, open-question, analogy&lt;/p&gt;

&lt;h2 id=&#34;la-regla-del-triple-check-para-ir-a-eventos&#34;&gt;La Regla del Triple Check para ir a eventos&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.bonillaware.com/regla-triple-check-para-ir-a-eventos&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by David Bonilla about a rule to help you decide attendance to events, in Spanish&lt;/p&gt;

&lt;p&gt;Tags: rule, time-management, david-bonilla, event, spanish, triple-check&lt;/p&gt;

&lt;h2 id=&#34;an-interview-with-charles-wetherell&#34;&gt;An interview with Charles Wetherell&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://demin.ws/blog/english/2012/08/25/interview-with-charles-wetherell/&#34; target=&#34;_blank&#34;&gt;this interview&lt;/a&gt; by Alexander Demin about the interviewee&amp;rsquo;s book &amp;ldquo;Etudes for Programmers&amp;rdquo;. In it, they talk about the origin of the études, the author&amp;rsquo;s research interests and activities. Also about the book (written in 1978) and how computer science has changed since then.&lt;/p&gt;

&lt;p&gt;When asked about three things a programmer should know:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Some ability to do formal mathematics. The level necessary to understand Hopcroft and Ullman combined with a little graph theory is enough. Discrete mathematics is essential; calculus is only necessary for folks working in special application areas.&lt;/p&gt;

&lt;p&gt;Some ability to write clearly in their native language. Dijkstra said that if a person couldn’t write their own language, they couldn’t write a correct program. (Well, that’s what I hope Dijkstra said!). Writing programs is essentially the same as writing a non-fiction essay. If you can’t make the step-by-step connections clearly in your own language, why would we think you could in C, for example?&lt;/p&gt;

&lt;p&gt;Remember that a program is primarily for communication with humans, not computers. When you write a program, the computer will do whatever you say. You must convince the humans who read the program that what you have asked the computer to do is the correct thing to do. Remember, the computer doesn’t care about correctness.&lt;/p&gt;

&lt;p&gt;The answer to the last question means that programs should always have the form of paragraphs of comments that describe the intention of the program followed by paragraphs of code that implement that intention. All of the formatting should be designed to make readers as able as possible to read the code easily; the compiler doesn’t care. In particular, follow conventions of mathematics and your native language, not those you found in some random language manual. Write the comments first and then write the code, not the other way around. If you don’t know what you want to achieve and why, any code you write is, by definition, incorrect.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tags: charles-wetherell, alexander-demin, interview, book, etude, etudes-for-programmers, practice, ability, skill, list&lt;/p&gt;

&lt;h2 id=&#34;how-to-fix-javascript-maybe&#34;&gt;How to fix Javascript… maybe&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@wob/how-to-fix-javascript-maybe-8857819bfa16&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Drew Hamlett about the lack of style guide for javascript and how this affects the adoption of the language and the sprout of similar libraries.&lt;/p&gt;

&lt;p&gt;Suggests the creation of a standard style guide for javascript.&lt;/p&gt;

&lt;p&gt;Tags: drew-hamlett, javascript, style-guide, analysis&lt;/p&gt;

&lt;h2 id=&#34;isomorphic-javascript-devbeat-master-class&#34;&gt;Isomorphic JavaScript: #DevBeat Master Class&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.slideshare.net/spikebrehm/a-28174727&#34; target=&#34;_blank&#34;&gt;these slides&lt;/a&gt; by Spike Brehm on Isomorphic JavaScript and why it&amp;rsquo;s important: initial pageload and speed, reducing effort and duplication, SEO (crawlability).&lt;/p&gt;

&lt;p&gt;Tags: isomorphic-javascript, isomorphism, javascript, seo, crawler, frontend, app, application, fat-client, fat-server, thin-client, thin-server, ria-spike-brehm, slide&lt;/p&gt;

&lt;h2 id=&#34;open-sourcing-our-docker-images&#34;&gt;Open-sourcing our docker images&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.modulus.io/open-sourcing-our-docker-images&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Brandon Cannaday about the Docker images that they have.&lt;/p&gt;

&lt;p&gt;Tags: docker, brandon-annaday, open-ource, image, container, modulus&lt;/p&gt;

&lt;h2 id=&#34;growing-up-in-an-open-source-world&#34;&gt;growing up in an open source world&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://fiveisprime.me/2015/02/18/growing-up-in-open-source/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Matt Hernandez where he explains that fixing the style guide can limit your creativity and how the software is written in enterprise and open-source environments.&lt;/p&gt;

&lt;p&gt;Also about how developers grow when exposed to different style guides.&lt;/p&gt;

&lt;p&gt;Tags: style-guide, matt-hernandez, creativity, dreyfus-model, enterprise, open-source, programming&lt;/p&gt;

&lt;h2 id=&#34;hanlon-s-razor-and-working-with-young-engineers&#34;&gt;Hanlon&amp;rsquo;s Razor and working with young engineers&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://fiveisprime.me/2013/07/27/young-engineers/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Matt Hernandez on the importance of understanding (and empathising) towards others&amp;rsquo; positions and worries.&lt;/p&gt;

&lt;p&gt;Cites the Hanlon Razor:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Never attribute to malice that which is adequately explained by ignorance.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tags:  hanlon-razor, empathy, team-management, ignorance, malice, matt-hernandez&lt;/p&gt;

&lt;h2 id=&#34;intro-to-sails-js&#34;&gt;Intro to sails.js&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched &lt;a href=&#34;https://youtu.be/GK-tFvpIR7c&#34; target=&#34;_blank&#34;&gt;this video&lt;/a&gt;, an introduction to the sails.js framework: a realtime nodejs server for creating REST APIs, inspired by Ruby on Rails.&lt;/p&gt;

&lt;p&gt;Tags: sailsjs, ruby-on-rails, ror, framework, video, introduction, mvc, rest-api, realtime, nodejs,&lt;/p&gt;

&lt;h2 id=&#34;node-js-and-hapi-creating-a-rest-api&#34;&gt;Node.js and hapi - creating a rest api&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.modulus.io/nodejs-and-hapi-create-rest-api&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; about creating a REST API using &lt;a href=&#34;http://hapijs.com/&#34; target=&#34;_blank&#34;&gt;Hapi&lt;/a&gt;, a nodejs framework. Written by Matt Hernandez&lt;/p&gt;

&lt;p&gt;Tags: matt-hernandez, rest-api, nodejs, hapi, framework&lt;/p&gt;

&lt;h2 id=&#34;introducing-pokedex-org-a-progressive-webapp-for-pokémon-fans&#34;&gt;Introducing Pokedex.org: a progressive webapp for Pokémon fans&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.pocketjavascript.com/blog/2015/11/23/introducing-pokedex-org&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Nolan Lawson about the challenge of having a 60 fps application on a mobile device, making it offline.&lt;/p&gt;

&lt;p&gt;Uses Angular 2, javascript 7, PouchDB as well as LocalForage for storage. All processing on WebWorkers, except for DOM manipulation.&lt;/p&gt;

&lt;p&gt;Tags: angular-2, javascript-7, angular, javascript, pouchdb, localforage, cloudant, 60fps, mobile, app, offline-first, offline, pokemon, api, nolan-lawson, web-worker, flip-technique, css, progressive, pokedex, svgomg, frontend&lt;/p&gt;

&lt;h2 id=&#34;lambdaconf-2015-how-to-learn-haskell-in-less-than-5-years-chris-allen&#34;&gt;LambdaConf 2015 - How to Learn Haskell in Less Than 5 Years Chris Allen&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched &lt;a href=&#34;https://www.youtube.com/watch?v=Bg9ccYzMbxc&#34; target=&#34;_blank&#34;&gt;this video&lt;/a&gt; by Chris Allen on how to learn haskell, what are some common pitfalls while learning it and how learning and teaching (it) are different.&lt;/p&gt;

&lt;p&gt;Talks about his (with a coauthor) book, focused on not reducing the readers that make it to the end and, finally, increasing the amount of haskell users.&lt;/p&gt;

&lt;p&gt;References &lt;a href=&#34;https://yow.eventer.com/yow-2014-1222/stop-treading-water-learning-to-learn-by-edward-kmett-1750&#34; target=&#34;_blank&#34;&gt;this talk&lt;/a&gt; by Kmett.&lt;/p&gt;

&lt;p&gt;Tags: chris-allen, haskell, learning-to-learn, meta-learning, lambda-conf, talk&lt;/p&gt;

&lt;h2 id=&#34;extreme-continuous-delivery-at-unruly&#34;&gt;Extreme Continuous Delivery - at Unruly&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.xpdays.de/2014/downloads/002-extreme-continuous-delivery-at-unruly/cd_javaone.pdf&#34; target=&#34;_blank&#34;&gt;these slides&lt;/a&gt; about how the company Unruly does continuous delivery (CD), maximizing business value, minimizing time to market (TTM). Also describes how they do deployments and how to organize teams.&lt;/p&gt;

&lt;p&gt;References: Extreme Programming Explained (Beck), Continuous Delivery (Humble &amp;amp; Farley)&lt;/p&gt;

&lt;p&gt;Tags: silo, team-management, culture, continuous-delivery, tdd, nagdd, shared-infrastructure, acceptance-testing, module-testing, conway-law, cross-pollination, continuous-investment, slide&lt;/p&gt;

&lt;h2 id=&#34;building-chat-applications-and-robots-for-skype&#34;&gt;Building chat applications and robots for Skype&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://opensourcehacker.com/2013/03/28/building-chat-applications-and-robots-for-skype/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; on building robots for skype. By Mikko Ohtamaa&lt;/p&gt;

&lt;p&gt;Tags: skype, robot, bot, mikko-ohtamaa, slack, integration, api&lt;/p&gt;

&lt;h2 id=&#34;why-i-never-wrote-down-our-company-values&#34;&gt;Why I never wrote down our company values&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/swlh/why-i-never-wrote-down-our-company-values-8143520497e8&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Mikael Cho on the subject of having company values, preaching or writing them down. Also, what happens when hard times come, regarding your values.&lt;/p&gt;

&lt;p&gt;Tags: mikael-cho, value, company-value, analogy&lt;/p&gt;

&lt;h2 id=&#34;interview-with-jesper-louis-andersen-about-erlang-haskell-ocaml-go-idris-the-jvm-software-and-protocol-design&#34;&gt;Interview with Jesper Louis Andersen about Erlang, Haskell, OCaml, Go, Idris, the JVM, software and protocol design &lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this interview (&lt;a href=&#34;https://medium.com/this-is-not-a-monad-tutorial/interview-with-jesper-louis-andersen-about-erlang-haskell-ocaml-go-idris-the-jvm-software-and-b0de06440fbd&#34; target=&#34;_blank&#34;&gt;part 1&lt;/a&gt;, &lt;a href=&#34;https://medium.com/this-is-not-a-monad-tutorial/interview-with-jesper-louis-andersen-about-erlang-haskell-ocaml-go-idris-the-jvm-software-and-5628fe591295&#34; target=&#34;_blank&#34;&gt;part 2&lt;/a&gt;) to Jesper Louis Andersen, interviewed by Federico Carrone.&lt;/p&gt;

&lt;p&gt;The first part is about a comparison of languages, what/why he uses them, and protocol design. The second is more about the Erlang language, the BEAM VM, and some experiences.&lt;/p&gt;

&lt;p&gt;Tags: federico-carrone, erlang, interview, jesper-andersen, jesper-louis-andersen, haskell, ocaml, go, idris, the-jvm, protocol-design, software-design, language, functional-programming, protocol, land-of-lisp, northern-war&lt;/p&gt;

&lt;h2 id=&#34;migrating-to-hugo-from-octopress&#34;&gt;Migrating to Hugo From Octopress&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://nathanleclaire.com/blog/2014/12/22/migrating-to-hugo-from-octopress/&#34; target=&#34;_blank&#34;&gt;this guide&lt;/a&gt; by Nathan LeClaire on migrating the blog from Octopress to Hugo&lt;/p&gt;

&lt;p&gt;Tags: static-site-generator, hugo, go, octopress, ruby, jekyll, nathan-leclaire, migration, blog, meta&lt;/p&gt;

&lt;h2 id=&#34;dynamic-static-site-generators-strategies&#34;&gt;Dynamic Static Site Generators strategies&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://timnash.co.uk/dynamic-static-site-generators-strategies/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; explaining what are static site generators, and an example with Jekyll. By Tim Nash&lt;/p&gt;

&lt;p&gt;Tags: tim-nash, static-site-generator, jekyll, strategy, explanation, comparison&lt;/p&gt;

&lt;h2 id=&#34;blog-like-a-confused-hacker&#34;&gt;Blog like a confused hacker&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://timnash.co.uk/using-wordpress-static-site-generator/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Tim Nash on what tools he recomends for static site generation.&lt;/p&gt;

&lt;p&gt;Tags: tim-nash, static-site-generator, jekyll, hide, strategy, explanation, comparison, sublime, wordpress, amazon-s3, cdn&lt;/p&gt;

&lt;h2 id=&#34;resolving-the-frontend-backend-api-design-conflict&#34;&gt;Resolving the Frontend/Backend API Design Conflict&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://launchany.com/resolving-the-frontendbackend-api-design-conflict/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; that explains the &amp;ldquo;Backend for Frontend&amp;rdquo; (BFF) pattern, for solving the different needs of data depending on each device / client. By James Higginbotham&lt;/p&gt;

&lt;p&gt;Tags: james-higginbotham, bff, pattern, backend-for-frontend, api, soa, microservice, frontend, backend, architecture&lt;/p&gt;

&lt;h2 id=&#34;what-if-we-forget-to-write-the-tests&#34;&gt;What If We Forget To Write The Tests?&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://us2.campaign-archive2.com/?u=80ca60ec48ef77dfaa1f38943&amp;amp;id=f70f14b644&amp;amp;e=4a925444f9&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by J. B. Rainsberger on the trust issues related to starting to use a new methodology (TDD in this case) and how to see what impacts it might have in your day to day.&lt;/p&gt;

&lt;p&gt;Tags: j-b-rainsberger, j-brains, rainsberger, tdd, motivation, team-management&lt;/p&gt;

&lt;h2 id=&#34;api-microservices-the-unix-philosophy-and-the-richardson-maturity-model-a-practical-perspective&#34;&gt;API microservices, the Unix philosophy, and the Richardson Maturity Model - a practical perspective&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@chrstphrhrt/microservices-the-unix-philosophy-and-the-richardson-maturity-model-425abed44826&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Chris Hart on why startups and companies alike should be careful when choosing th latest technology and how this applies to microservices.&lt;/p&gt;

&lt;p&gt;Tags: microservice, chris-hart, startup, analysis, company, technical-debt, bounded-context, ddd, rest-api&lt;/p&gt;

&lt;h2 id=&#34;effective-programming&#34;&gt;Effective programming&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@sebas5384/effective-programming-d7e5bb2f3b80&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Sebastian Ferrari on the importance of clean code, systems thinking and functional programming.&lt;/p&gt;

&lt;p&gt;Specifies the important difference between effectiveness and efficiency.&lt;/p&gt;

&lt;p&gt;Links to this talk by &lt;a href=&#34;https://youtu.be/OqEeIG8aPPk&#34; target=&#34;_blank&#34;&gt;Russ Ackoff&lt;/a&gt;. States the difference between &amp;ldquo;the right thing&amp;rdquo; and &amp;ldquo;the thing right&amp;rdquo;, by Drucker.&lt;/p&gt;

&lt;p&gt;Tags: drucker, thing-right, right-thing, sebastian-ferrari, system-thinking, russ-ackoff, video, ted, difference, clean-code, functional-programming&lt;/p&gt;

&lt;h2 id=&#34;learning-how-to-learn&#34;&gt;Learning how to learn&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@thejameskyle/learning-how-to-learn-7f04d6f42c1e&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by James Kyle about the &amp;ldquo;how to learn&amp;rdquo; as one important skill for programmers and how having the solution at a few keystrokes limits / handicaps this ability.&lt;/p&gt;

&lt;p&gt;Tags: programmer, learn-to-learn, james-kyle, stack-overflow, skill&lt;/p&gt;

&lt;h2 id=&#34;why-do-some-functional-programmers-criticize-design-patterns-in-oop-languages-as-a-sign-of-language-deficiency-while-monad-is-also-a-design-pattern&#34;&gt;Why do some functional programmers criticize design patterns in OOP languages as a sign of language deficiency, while Monad is also a design pattern?&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://www.quora.com/Why-do-some-functional-programmers-criticize-design-patterns-in-OOP-languages-as-a-sign-of-language-deficiency-while-Monad-is-also-a-design-pattern/answer/Edward-Kmett?srid=hVnO&amp;amp;share=12410d1e&#34; target=&#34;_blank&#34;&gt;this answer&lt;/a&gt; by Edward Kmett comparing the design patterns in OOP to the design patterns in functional languages.&lt;/p&gt;

&lt;p&gt;Tags: functional-language, object-oriented-language, edward-kmett, oop, pattern, monad, interface, quora, answer&lt;/p&gt;

&lt;h2 id=&#34;should-we-even-debate-refactoring-with-stakeholders&#34;&gt;Should We Even Debate Refactoring With Stakeholders?&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://us2.campaign-archive2.com/?u=80ca60ec48ef77dfaa1f38943&amp;amp;id=215f7f649b&amp;amp;e=4a925444f9&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by J. B. Rainsberger on the power balance between stakeholders and programmers and how it can be inclined to a &amp;lsquo;more trust&amp;rsquo; / &amp;lsquo;less trust&amp;rsquo; by following some actions. The analogy is to a trade you cannot understand, therefore you have to hope that the taken decisions are in your best interest.&lt;/p&gt;

&lt;p&gt;Tags: j-b-rainsberger, j-brains, rainsberger, refactor, business-need, communication, stakeholder&lt;/p&gt;

&lt;h2 id=&#34;the-eternal-struggle-between-business-and-programmers&#34;&gt;The Eternal Struggle Between Business and Programmers&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.thecodewhisperer.com/permalink/the-eternal-struggle-between-business-and-programmers&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by J. B. Rainsberger on the discussion between business (&amp;lsquo;we want more features, now&amp;rsquo;) and the programmers (&amp;lsquo;we want more refactoring, now&amp;rsquo;). Concludes that both players need each other, in a symbiotic fashion, to keep their jobs at the company.&lt;/p&gt;

&lt;p&gt;He suggests that Scrum cannot work without the XP practices and that we need to refactor aggressively after having finished our initial design, to keep the costs down. In fact, agreeing with both parts in this discussion.&lt;/p&gt;

&lt;p&gt;References one of his own videos, at Oredev&amp;rsquo;13, &amp;ldquo;Fundamental Theorem of Agile Software Development&amp;rdquo;, where he describes the relationship between accidental / essential complexity in the cost of a feature, attributing most of it to accidental (&amp;lsquo;we&amp;rsquo;re not good at our jobs&amp;rsquo;) and describing the need for more design / refactor after the initial design.&lt;/p&gt;

&lt;p&gt;Tags: j-b-rainsberger, j-brains, rainsberger, refactor, business-need, design, oredev, talk, agile, xp, scrum, software-development, accidental-complexity, essential-complexity, mythical-man-month&lt;/p&gt;

&lt;h2 id=&#34;turning-code-to-cash-how-to-make-money-as-a-web-developer-and-live-to-tell-the-tale&#34;&gt;Turning code to cash — How to make money as a Web Developer and live to tell the tale.&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@kurtrohlandt/turning-code-to-cash-how-to-make-money-as-a-web-developer-and-live-to-tell-the-tale-f5eedc557b3e&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Kurt Rohlandt with a list of items to check while dealing with clients as a freelancer:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Nothing is simple&lt;/li&gt;
&lt;li&gt;Know your skill set — and let your client know it&lt;/li&gt;
&lt;li&gt;Be clear about what they are buying&lt;/li&gt;
&lt;li&gt;Learn to use the best tool for the job&lt;/li&gt;
&lt;li&gt;To your client you’re more than just a developer&lt;/li&gt;
&lt;li&gt;Sign off your jobs&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tags: freelancer, kurt-rohlandt, list, tip, client&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Self-Study in January 2016</title>
      <link>https://alvarogarcia7.github.io/blog/2016/01/01/self-study-in-january-2016/</link>
      <pubDate>Fri, 01 Jan 2016 16:55:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2016/01/01/self-study-in-january-2016/</guid>
      <description>

&lt;h2 id=&#34;test-cases-in-inner-classes-with-junit&#34;&gt;Test cases in inner classes with JUnit&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://stackoverflow.com/questions/8758294/test-cases-in-inner-classes-with-junit&#34; target=&#34;_blank&#34;&gt;this answer&lt;/a&gt; in stackoverflow about nested test runners in JUnit&lt;/p&gt;

&lt;p&gt;Tags: junit, stackoverflow, answer, nested-runner&lt;/p&gt;

&lt;h2 id=&#34;recording-a-great-coding-screencast&#34;&gt;Recording a Great Coding Screencast&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://egghead.io/articles/recording-a-great-coding-screencast&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by John Lindquist where he explains how he sets up the recording environment for egghead.&lt;/p&gt;

&lt;p&gt;Tags: john-lindquist, record, screencast, egghead, code-screencast, record-video, video&lt;/p&gt;

&lt;h2 id=&#34;react-testing-course&#34;&gt;React Testing Course&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched &lt;a href=&#34;https://egghead.io/lessons/react-testing-jsx-error-diffs&#34; target=&#34;_blank&#34;&gt;the full course&lt;/a&gt; by Trevor D. Miller on how to test react components and the libraries to make it possible.&lt;/p&gt;

&lt;p&gt;Tags: trevor-miller, online-course, screencast, mooc, react, flux, egghead&lt;/p&gt;

&lt;h2 id=&#34;what-is-functional-programming&#34;&gt;What Is Functional Programming?&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.jenkster.com/2015/12/what-is-functional-programming.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Kris Jenkins where the author describes functional programming from an input &amp;amp; output point of view.&lt;/p&gt;

&lt;p&gt;Describes state of the system (maybe global or local) is input &amp;amp; output of the function&lt;/p&gt;

&lt;p&gt;Produced state changes are called side effects. the author calls the state inputs as &amp;ldquo;side causes&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;Side effects and causes are called complexity iceberg, as they are not visible under the water level (surface)&lt;/p&gt;

&lt;p&gt;Also what a pure function is: one with no side causes or side effects; e.g., all its inputs are declared inputs (i.e., parameters) and all outputs are declared outputs (i.e., return value).&lt;/p&gt;

&lt;p&gt;notes on jobbing programmer:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.safaribooksonline.com/library/view/becoming-a-better/9781491905562/ch32.html&#34; target=&#34;_blank&#34;&gt;at Becoming a Better Programmer&lt;/a&gt;, by Pete Goodliffe&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://books.google.es/books?id=P-09CgAAQBAJ&amp;amp;pg=PA67&amp;amp;lpg=PA67&amp;amp;dq=%22jobbing+programmer%22&amp;amp;source=bl&amp;amp;ots=U6Gvi9OSda&amp;amp;sig=J4qWDUtnk768SMjAK3yuEeWUv5Y&amp;amp;hl=es&amp;amp;sa=X&amp;amp;ved=0ahUKEwjz58K615DKAhUFVRQKHfyhAZAQ6AEIOTAE#v=onepage&amp;amp;q=%22jobbing%20programmer%22&amp;amp;f=false&#34; target=&#34;_blank&#34;&gt;at Mastering Julia&lt;/a&gt;, by Malcolm Sherrington&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://joshsymonds.com/blog/2013/11/03/what-makes-a-good-programmer-good/&#34; target=&#34;_blank&#34;&gt;at What Makes a Good Programmer Good?&lt;/a&gt; by Josh Symonds&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tags: kris-jenkins, functional-programming, input, output, function, complexity-iceberg, pure-function, impure-function, side-effect, side-cause&lt;/p&gt;

&lt;h2 id=&#34;which-programming-languages-are-functional&#34;&gt;Which Programming Languages Are Functional?&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.jenkster.com/2015/12/which-programming-languages-are-functional.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Kris Jenkins where the author analyses languages, determining whether they are functional or not.&lt;/p&gt;

&lt;p&gt;Describes how functional languages deal with side effects and side causes, and to identify them (was also explained in part one&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;).&lt;/p&gt;

&lt;!--
    FOOTNOTES are at the beginning
--&gt;

&lt;p&gt;Tags: kris-jenkins, functional-programming, side-effect, side-cause, comparison, haskell, clojure, python, perl, javascript, java, map, reduce, hof, scala, moc&lt;/p&gt;

&lt;h2 id=&#34;argument-from-the-real-world&#34;&gt;Argument from the &amp;ldquo;Real World&amp;rdquo;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://ronjeffries.com/xprog/articles/argument-from-the-real-world/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Ron Jeffries that dismantles the &amp;ldquo;real world&amp;rdquo;, as an excuse to use good practices: as in &amp;ldquo;we could use that, but we live in the real world&amp;rdquo;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;[&amp;hellip;] our job is to create the “real world” and not to imagine that our present situation is the only situation there is&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This is exactly our day to day task, to imagine a real world solution to present problems, maybe involving software in between.&lt;/p&gt;

&lt;p&gt;Can&amp;rsquo;t we do this for product and team management?&lt;/p&gt;

&lt;p&gt;Tags: ron-jeffries, agile, scrum, tdd, bdd, incremental-iterative-development, product-management, team-management&lt;/p&gt;

&lt;h2 id=&#34;self-contained-systems&#34;&gt;Self-Contained Systems&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://speakerdeck.com/rstrangh/self-contained-systems-1&#34; target=&#34;_blank&#34;&gt;these slides&lt;/a&gt; about a self-contained system (SCS), an architecture choice to split monolithic systems in parts. It includes the use of microservices in the business logic to solve domain specific problems. Written by Roman Stranghöner&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;development, operation and maintenance [&amp;hellip;] by a single team&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tags: big-bang-release, roman-stranghoner, self-contained-system, scs, microservice, monolith, monolithic-system, architecture&lt;/p&gt;

&lt;h2 id=&#34;what-makes-a-good-programmer-good&#34;&gt;What Makes a Good Programmer Good?&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://joshsymonds.com/blog/2013/11/03/what-makes-a-good-programmer-good/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Josh Symonds on the characteristics that differentiate a good programmer from the jobbing programmers, the list of skills to be a good programmer.&lt;/p&gt;

&lt;p&gt;Explains what factors are related and not related to being a good one&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:2&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;knowing that most programming problems have already been solved. You have to know where to look for the solution&lt;/li&gt;
&lt;li&gt;not to be afraid to dig deep into problems: detect a problem and be eager to solve it; figure out what is wrong&lt;/li&gt;
&lt;li&gt;go to the source: use the source as a fact, as analysis needs to be based on facts, not beliefs&lt;/li&gt;
&lt;li&gt;just do it: to be driven to act&lt;/li&gt;
&lt;li&gt;instinctively tackle problems head-on, grabbing the bull by the horns instead of waiting for it to be solved automagically; start solving the problem&lt;/li&gt;
&lt;li&gt;excited about grabbing problems, about facing the cutting edge&lt;/li&gt;
&lt;li&gt;taking the time to reflect and understand it before moving one to the next one&lt;/li&gt;
&lt;li&gt;communicate well: succintly and eloquently expressing your thoughts. The author thinks this might be the most important aspect of all.&lt;/li&gt;
&lt;li&gt;to be truly caring about what you do: not just a job, but a hobby, an interest, even a fascination; great programmers are always programming&lt;/li&gt;
&lt;li&gt;thinking of programming of a way to shape the world, not just a money-making activity&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tags: jobbing-programmer, good-programmer, career, career-management, skill, josh-symonds, quote&lt;/p&gt;

&lt;h2 id=&#34;the-best-programming-language-or-how-to-stop-worrying-and-love-the-code&#34;&gt;The Best Programming Language (or How to Stop Worrying and Love the Code)&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.fourthbit.com/2014/03/01/the-best-programming-language-or-how-to-stop-worrying-and-love-the-code&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Álvaro Castro-Castilla analysing different programming languages and what to choose each of them.&lt;/p&gt;

&lt;p&gt;Tags: alvaro-castro-castilla, programming-language, language, analysis, comparison&lt;/p&gt;

&lt;h2 id=&#34;tomates-en-el-campo&#34;&gt;Tomates en el campo&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.presionblogosferica.com/2011/02/20/tomates-en-el-campo/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Ángel Medinilla, about how to cultivate teams, instead of creating or building them. Talks about the mandatory conditions, necessary factors and how to enable it, not guaranteeing success.&lt;/p&gt;

&lt;p&gt;Tags: angel-medinilla, team-management, spanish, team, analogy&lt;/p&gt;

&lt;h2 id=&#34;default-constructors-in-java&#34;&gt;Default constructors in Java&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://stackoverflow.com/questions/17068389/default-constructors-in-java&#34; target=&#34;_blank&#34;&gt;this answer&lt;/a&gt; in stackoverflow about extending a java class that has a private constructor.&lt;/p&gt;

&lt;p&gt;Tags: stackoverflow, answer, java, constructor, syntax&lt;/p&gt;

&lt;h2 id=&#34;what-s-so-great-about-reducers&#34;&gt;What&amp;rsquo;s So Great About Reducers?&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.guillermowinkler.com/blog/2013/12/01/whats-so-great-about-reducers/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Guillermo Winkler explaining reducers, a type of divide and conquer strategy clojure.&lt;/p&gt;

&lt;p&gt;Tags: guillermo-winkler, reducer, clojure, parallelism, concurrency&lt;/p&gt;

&lt;h2 id=&#34;don-t-use-slack&#34;&gt;Don’t use Slack?&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/hacker-daily/don-t-use-slack-8e70452f3eed&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Christian Heilmann about the relation between open / closed software and accessibility.&lt;/p&gt;

&lt;p&gt;Tags: slack, christian-heilmann, accessibility, open-source, propietary-software, closed-source&lt;/p&gt;

&lt;h2 id=&#34;towards-an-understanding-of-technical-debt&#34;&gt;Towards an understanding of technical debt&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@kellan/towards-an-understanding-of-technical-debt-ae0f97cc0553&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Kellan Elliott-McCrea about some definitions of technical debt and why taking care of it matters for the future.&lt;/p&gt;

&lt;p&gt;Talks about the way of inheriting projects by other teams and the paradox of &amp;ldquo;investing more time to fix the problem than originally invested in coding it.&amp;rdquo; Also about judgement.&lt;/p&gt;

&lt;p&gt;I find it related to the &amp;ldquo;theory building&amp;rdquo; by Naur.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;There are at least 5 distinct things we mean we say “technical debt”.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Maintenance work: buying breathing room&lt;/li&gt;
&lt;li&gt;Features of the codebase that resist change&lt;/li&gt;
&lt;li&gt;Operability choices that resist change&lt;/li&gt;
&lt;li&gt;Code choices that suck the will to live&lt;/li&gt;
&lt;li&gt;Dependencies that resist upgrading&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tags: kellan-elliott-mccrea, kellan, technical-debt, list, definition, quote&lt;/p&gt;

&lt;h2 id=&#34;lifetimes-of-cryptographic-hash-functions&#34;&gt;Lifetimes of cryptographic hash functions&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://valerieaurora.org/hash.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Valerie Aurora where she explains the lifetimes of cryptographic hash functions up to 2012.&lt;/p&gt;

&lt;p&gt;Tags: hash-function, valerie-aurora&lt;/p&gt;

&lt;h2 id=&#34;collisions-for-hash-functions-md4-md5-haval-128-and-ripemd&#34;&gt;Collisions for Hash Functions - MD4, MD5, HAVAL-128 and RIPEMD&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://eprint.iacr.org/2004/199.pdf&#34; target=&#34;_blank&#34;&gt;this paper&lt;/a&gt; that explains some collisions found for MD4, MD5, HAVAL-128 and RIPEMD. By Xiaoyun Wang, Dengguo Feng, Xuejia Lai, Hongbo Yu.&lt;/p&gt;

&lt;p&gt;Tags: collision, hash-function, xiaoyun-wang, dengguo-feng, xuejia-lai, hongbo-yu, paper&lt;/p&gt;

&lt;h2 id=&#34;the-future-is-parallel-what-s-a-programmer-to-do&#34;&gt;The future is parallel: What&amp;rsquo;s a programmer to do?&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://groups.csail.mit.edu/mac/users/gjs/6.945/readings/MITApril2009Steele.pdf&#34; target=&#34;_blank&#34;&gt;these slides&lt;/a&gt; by Guy Steele about the differences in linear vs parallel computing and about the old habits that we still have.&lt;/p&gt;

&lt;p&gt;Some quotes:&lt;/p&gt;

&lt;h3 id=&#34;motivation&#34;&gt;Motivation&lt;/h3&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Good sequential code minimizes total number of operations.

&lt;ul&gt;
&lt;li&gt;Clever tricks to reuse previously computed results.&lt;/li&gt;
&lt;li&gt;Good parallel code often performs redundant operations to reduce communication.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Good sequential algorithms minimize space usage.

&lt;ul&gt;
&lt;li&gt;Clever tricks to reuse storage.&lt;/li&gt;
&lt;li&gt;Good parallel code often requires extra space to permit temporal decoupling.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Sequential idioms stress linear problem decomposition.

&lt;ul&gt;
&lt;li&gt;Process one thing at a time and accumulate results.&lt;/li&gt;
&lt;li&gt;Good parallel code usually requires multiway problem decomposition and multiway aggregation of results.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;a-new-mindset&#34;&gt;A New Mindset&lt;/h3&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;DO loops are so 1950s! (Literally: Fortran is now 50 years old.)&lt;/li&gt;
&lt;li&gt;So are linear linked lists! (Literally: Lisp is now 50 years old.)&lt;/li&gt;
&lt;li&gt;Java-style iterators are so last millennium!&lt;/li&gt;
&lt;li&gt;Even arrays are suspect!&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;As soon as you say &lt;code&gt;first, SUM = 0&lt;/code&gt; you are hosed. Accumulators are BAD.&lt;/li&gt;
&lt;li&gt;If you say, “process subproblems in order,” you lose.&lt;/li&gt;
&lt;li&gt;The great tricks of the sequential past DON’T WORK.&lt;/li&gt;
&lt;li&gt;The programming idioms that have become second nature to us as everyday tools DON’T WORK.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;the-parallel-future&#34;&gt;The Parallel Future&lt;/h3&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;We need new strategies for problem decomposition.&lt;/li&gt;
&lt;li&gt;Data structure design/object relationships&lt;/li&gt;
&lt;li&gt;Algorithmic organization&lt;/li&gt;
&lt;li&gt;Don’t split a problem into “the first” and “the rest.”&lt;/li&gt;
&lt;li&gt;Do split a problem into roughly equal pieces. Then figure out how to combine general subsolutions.&lt;/li&gt;
&lt;li&gt;Often this makes combining the results a bit harder.&lt;/li&gt;
&lt;li&gt;We need programming languages and runtime implementations that support parallel strategies and hybrid sequential/parallel strategies.&lt;/li&gt;
&lt;li&gt;We must learn to manage new space-time tradeoffs&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h3&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;A program organized according to linear problem decomposition principles can be really hard to parallelize.&lt;/li&gt;
&lt;li&gt;A program organized according to parallel problem decomposition principles is easily run either in parallel or sequentially, according to available resources.&lt;/li&gt;
&lt;li&gt;The new strategy has costs and overheads. They will be reduced over time but will not disappear.&lt;/li&gt;
&lt;li&gt;In a world of parallel computers of wildly varying sizes, this is our only hope for program portability in the future.&lt;/li&gt;
&lt;li&gt;Better language design can encourage better parallel programming.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tags: representation, computation, catamorphism, list, associativity
commutativity, idempotency, abstract-data-type, slide, operator, mapreduce, mindset, comparison, parallel, guy-steele,  linear-computing, parallel-computing&lt;/p&gt;

&lt;h2 id=&#34;surviving-being-senior-tech-management&#34;&gt;Surviving being senior (tech) management.&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@kellan/surviving-being-senior-tech-management-aa6654efd027&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Kellan Elliott-McCrea about the basic things to do as management to retain the best performance:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;exercise&lt;/li&gt;
&lt;li&gt;someone to talk to&lt;/li&gt;
&lt;li&gt;discuss with peers, in petit commité&lt;/li&gt;
&lt;li&gt;personal mastery project&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tags: kellan-elliott-mccrea, kellan, list, management, tip, exercise, pet-project&lt;/p&gt;

&lt;h2 id=&#34;you-don-t-need-more-free-time&#34;&gt;You Don’t Need More Free Time&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.nytimes.com/2016/01/10/opinion/sunday/you-dont-need-more-free-time.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; about the quality of life, work-life balance by Cristobal Young on why the time where we have more fun is spent together, in company.&lt;/p&gt;

&lt;p&gt;Tags: cristobal-young, time-management, work-life-balance&lt;/p&gt;

&lt;h2 id=&#34;taking-longer-to-reach-the-top-has-its-benefits&#34;&gt;Taking Longer to Reach the Top Has Its Benefits&lt;/h2&gt;

&lt;p&gt;​I&amp;rsquo;ve read &lt;a href=&#34;https://hbr.org/2015/12/taking-longer-to-reach-the-top-has-its-benefits&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; that explains how having work life balance and preventing burn out syndrome, aided by a patient career, can help with reaching a higher destination on your career. By Karen Firestone&lt;/p&gt;

&lt;p&gt;Tags: career-management, patience, burnout, burn-out, ceo, karen-firestone, professional-career, improvement&lt;/p&gt;

&lt;h2 id=&#34;all-bugs-lead-to-rome&#34;&gt;All bugs lead to Rome&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@nickbaum/all-bugs-lead-to-rome-505a1205bb9&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; that explains how the author tracks down a bug present in mail communication, just for a handful of client. By Nick Baum&lt;/p&gt;

&lt;p&gt;Tags: track-down, bug, defect, mailgun, rot13, nick-baum&lt;/p&gt;

&lt;h2 id=&#34;design-patterns-coming-full-circle&#34;&gt;Design Patterns — Coming Full Circle&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/swlh/design-patterns-coming-full-circle-d8292e261dc6&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; that explains what a design pattern is, where does it come from, the figure of Christopher Alexander and the architecture design patterns. By Jen Carlile&lt;/p&gt;

&lt;p&gt;Tags: design-pattern, christopher-alexander, jen-carlile, comparison, example, proxy, command, observer&lt;/p&gt;

&lt;h2 id=&#34;react-performance&#34;&gt;React + Performance = ?&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://aerotwist.com/blog/react-plus-performance-equals-what/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Paul Lewis comparing the performance and developer experience of react.js and vanilla js.&lt;/p&gt;

&lt;p&gt;Conclusion: under his measurements, react is too slow once the amount of elements is big on mobile devices&lt;/p&gt;

&lt;p&gt;Tags: paul-lewis, comparison, javascript, react, mobile, perfomance, jsperf, js-perf, vanilla-javascript&lt;/p&gt;

&lt;h2 id=&#34;full-speed-then-stop-gracefully&#34;&gt;Full speed, then stop, gracefully&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://sethgodin.typepad.com/seths_blog/2015/12/full-speed-then-stop.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; about how to end professional relationships with an employer or a team.&lt;/p&gt;

&lt;p&gt;Makes an analogy to the hockey sport attitude: &amp;ldquo;full speed, then stop&amp;rdquo;&lt;/p&gt;

&lt;p&gt;Tags: seth-godin, professional, employer, team-management, team, analogy&lt;/p&gt;

&lt;h2 id=&#34;por-qué-tendrás-que-facturar-55-000-para-cobrar-una-nómina-de-26-000&#34;&gt;Por qué tendrás que facturar 55.000€ para cobrar una nómina de 26.000€&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://us2.campaign-archive1.com/?u=374c664073e1a1fa3deca53b4&amp;amp;id=7e79a27689&#34; target=&#34;_blank&#34;&gt;this bonilista&lt;/a&gt; by David Bonilla on why freelancers need to bill more to clients to achieve the same (economic) results as being hired by a company.&lt;/p&gt;

&lt;p&gt;Tags: david-bonilla, bonilista, freelancer, contractor, employee&lt;/p&gt;

&lt;h2 id=&#34;principles-of-microservices&#34;&gt;Principles Of Microservices&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched &lt;a href=&#34;https://vimeo.com/131632250&#34; target=&#34;_blank&#34;&gt;this talk&lt;/a&gt; by Sam Newman on microservices at the NDC 2015 at Oslo&lt;/p&gt;

&lt;p&gt;Describes a microservice as a small, autonomous services that work together, modelled around a business domain&lt;/p&gt;

&lt;p&gt;Microservices can mix technology, persistence stack, idioms, options&lt;/p&gt;

&lt;p&gt;reference to the twelve factors (by heroku).&lt;/p&gt;

&lt;p&gt;At a client:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Design and delivery practices:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;standard http/rest&lt;/li&gt;
&lt;li&gt;encapsulate legacy&lt;/li&gt;
&lt;li&gt;eliminate integration databases&lt;/li&gt;
&lt;li&gt;consolidate and cleanse data&lt;/li&gt;
&lt;li&gt;published integration model&lt;/li&gt;
&lt;li&gt;small independent devices&lt;/li&gt;
&lt;li&gt;continous deployment&lt;/li&gt;
&lt;li&gt;minimal customization of COTS/SAAS&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Architectural principles:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;reduce inertia&lt;/li&gt;
&lt;li&gt;eliminate accidential complexity&lt;/li&gt;
&lt;li&gt;consistent interfaces and data flows&lt;/li&gt;
&lt;li&gt;no silver bullets&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Strategic goals:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;enable scalable businesses&lt;/li&gt;
&lt;li&gt;support entry into new markets&lt;/li&gt;
&lt;li&gt;support innovation in existing markets&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;Principles of microservices:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;modelled around a business domain&lt;/li&gt;
&lt;li&gt;culture of automation&lt;/li&gt;
&lt;li&gt;hide implementation details&lt;/li&gt;
&lt;li&gt;decentralise all the things&lt;/li&gt;
&lt;li&gt;deploy independently&lt;/li&gt;
&lt;li&gt;consumer first&lt;/li&gt;
&lt;li&gt;isolate failure&lt;/li&gt;
&lt;li&gt;highly observable&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;notes&#34;&gt;Notes&lt;/h3&gt;

&lt;p&gt;the business domain changes more slowly. find these boundaries (reference to IDDD)&lt;/p&gt;

&lt;p&gt;bounded contexts is about concepts which are shared and others who are hidden&lt;/p&gt;

&lt;p&gt;consumer driven contracts as a way to express to consumer expectations, written as tests. this is a high-trust pattern (requires it). reduces end to end testing, considerably. Using tools as &lt;a href=&#34;http://github.com/realestate&#34; target=&#34;_blank&#34;&gt;pact&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;parallel change for endpoints (or APIs) for avoiding lock step release (expand contract pattern). high cost to change an API: apply upfront thought to it.&lt;/p&gt;

&lt;p&gt;explains about a case writing a strangler application:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;circuit breakers&lt;/li&gt;
&lt;li&gt;one thread pool per application&lt;/li&gt;
&lt;li&gt;bulkhead downstream connections&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;references:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the book &amp;ldquo;Release It!&amp;rdquo;&lt;/li&gt;
&lt;li&gt;the book &amp;ldquo;Implementing Domain-Driven Design (IDDD)&amp;rdquo;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;other&#34;&gt;Other&lt;/h3&gt;

&lt;p&gt;correlation ids, parent and child ids
extracting information from logs (e.g., kibana, splunk, new relic)
see how services connect to each other based on logs instead of based on documentation&lt;/p&gt;

&lt;p&gt;Tags: lock-step-release, autonomy, sam-newman, consumer-driven-contract, team, zookeper, etcd, consul, service-discovery, distributed-consensus, talk, ndc, humane-registry, bulkhead-pattern, circuit-breaker&lt;/p&gt;

&lt;h2 id=&#34;the-website-obesity-crisis&#34;&gt;The Website Obesity Crisis&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://idlewords.com/talks/website_obesity.htm&#34; target=&#34;_blank&#34;&gt;this transcription&lt;/a&gt; of &lt;a href=&#34;http://www.webdirections.org/blog/the-website-obesity-crisis/&#34; target=&#34;_blank&#34;&gt;this presentation&lt;/a&gt; about the increase of weight of websites and how this connects with new needs for automation and other services. How the solution is to keep the pages lightweight and open for everybody to use and learn; without invading our privacy. By Maciej Ceglowski&lt;/p&gt;

&lt;p&gt;Tags: obesity, fat-page, slide, transcription, slide-transcription, maciej-ceglowski, simplicity, speed&lt;/p&gt;

&lt;h2 id=&#34;command-line-tools-can-be-235x-faster-than-your-hadoop-cluster&#34;&gt;Command-line tools can be 235x faster than your Hadoop cluster&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://aadrake.com/command-line-tools-can-be-235x-faster-than-your-hadoop-cluster.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; on how using command-line based (&lt;code&gt;find&lt;/code&gt;, &lt;code&gt;grep&lt;/code&gt;, &lt;code&gt;awk&lt;/code&gt;) can have a better performance as compared to Hadoop for a specific case, which is analyzing 2 million chess games. By Adam Drake&lt;/p&gt;

&lt;p&gt;Tags: adam-drake, chess, comparison, performance, cli-commands, unix, nix, hadoop, awk&lt;/p&gt;

&lt;h2 id=&#34;the-serializable-isolation-level&#34;&gt;The Serializable Isolation Level&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://sqlperformance.com/2014/04/t-sql-queries/the-serializable-isolation-level&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Paul White about the serializable isolation level and how it is implemented in some databases.&lt;/p&gt;

&lt;p&gt;Tags: serializable, isolation level, paul-white, oracle, mssql, database, sql&lt;/p&gt;

&lt;h2 id=&#34;academic-writing-with-markdown-pandoc-and-emacs&#34;&gt;Academic Writing With Markdown, Pandoc and Emacs&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://milinda.svbtle.com/academic-writing-with-markdown-pandoc-and-emacs&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Milinda Pathirage that explains an alternative way of writing LaTeX in a user-friendly manner, writing markdown then converting it to the output format (he provides &lt;a href=&#34;https://gist.github.com/milinda/d9272e67711d324f18ba&#34; target=&#34;_blank&#34;&gt;such a script&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Tags: latex, milinda-pathirage, academia, research, paper, markdown, script&lt;/p&gt;

&lt;h2 id=&#34;rest-ddd-layers-jsf-microservices-sizing-a-umejug-conversation&#34;&gt;Rest, DDD, layers, JSF, microservices sizing a Umejug conversation&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched &lt;a href=&#34;http://www.adam-bien.com/roller/abien/entry/rest_ddd_layers_jsf_a&#34; target=&#34;_blank&#34;&gt;this talk&lt;/a&gt; by Adam Bien on topics related to microservices and architecture. Discusses:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What do you think a typical web application should look like? How should it be built?&lt;/li&gt;
&lt;li&gt;When using REST, which level of REST is appropriate when, is HATEOAS something to strive for, how to implement it?&lt;/li&gt;
&lt;li&gt;Which patterns do you recommend, hexagonal architecture, layers, &amp;hellip;?&lt;/li&gt;
&lt;li&gt;What do you think of the DDD strategic and tactical patterns?&lt;/li&gt;
&lt;li&gt;Microservices vs right-sized services, is transactions over several services always a bad idea?&lt;/li&gt;
&lt;li&gt;When use JSF? Is it still useful?&lt;/li&gt;
&lt;li&gt;Entity-Control-Boundary Pattern (ECB) (around &lt;a href=&#34;https://youtu.be/VkcLpRs0i0g?t=995&#34; target=&#34;_blank&#34;&gt;16:37&lt;/a&gt;). &lt;a href=&#34;http://www.cs.sjsu.edu/~pearce/modules/patterns/enterprise/ecb/ecb.htm&#34; target=&#34;_blank&#34;&gt;More info&lt;/a&gt; on the pattern&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tags: hateoas, rest, microservice, pattern, architecture, umejug, hexagonal-architecture, ddd, adam-bien, ecb-pattern, mvc-pattern&lt;/p&gt;

&lt;h2 id=&#34;how-to-go-remote&#34;&gt;How To Go Remote&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://workdifferent.com/how-to-remote/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Sebastian Kade that explains how to go remote: where the possibility of working anywhere is a luxury, even if it is in an office.&lt;/p&gt;

&lt;p&gt;Explains the case of Automattic, some examples of communication, culture. Suggests using some tools to accomplish this cultural change.&lt;/p&gt;

&lt;p&gt;Tags: remote-work, sebastian-kade, remote, work, asynchronous-communication, communication, automattic, tool, culture, team-management&lt;/p&gt;

&lt;h2 id=&#34;why-your-company-should-have-a-creed&#34;&gt;Why Your Company Should Have a Creed&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://ma.tt/2011/09/automattic-creed/&#34; target=&#34;_blank&#34;&gt;this essay&lt;/a&gt; by Matt Mullenweg about the importance of having a company creed (a belief system, ethos), which ideally would be shared by the colleagues. These should be the values that help deciding, when in doubt, so everyone is aligned.&lt;/p&gt;

&lt;p&gt;At Automattic, this is theirs (as of September 19th, 2011):&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I will never stop learning. I won’t just work on things that are assigned to me. I know there’s no such thing as a status quo. I will build our business sustainably through passionate and loyal customers. I will never pass up an opportunity to help out a colleague, and I’ll remember the days before I knew everything. I am more motivated by impact than money, and I know that Open Source is one of the most powerful ideas of our generation. I will communicate as much as possible, because it’s the oxygen of a distributed company. I am in a marathon, not a sprint, and no matter how far away the goal is, the only way to get there is by putting one foot in front of another every day. Given time, there is no problem that’s insurmountable.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tags: quote, matt-mullenweg, automattic, creed, ethos, learning, team-management, startup, communication, essay&lt;/p&gt;

&lt;h2 id=&#34;mob-programming-the-unruly-experience&#34;&gt;Mob Programming: The Unruly Experience&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://wirfs-brock.com/blog/2015/06/05/mob-programming/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Rebecca Wirfs-Brock on mob programming and the experience report (+ &lt;a href=&#34;http://www.xp2015.org/wp-content/uploads/2015/06/TH2.3_Wilson.pdf&#34; target=&#34;_blank&#34;&gt;slides&lt;/a&gt;) at the company called Unruly.&lt;/p&gt;

&lt;p&gt;She explains what works for them and what does not.&lt;/p&gt;

&lt;p&gt;Also, she makes a difference on complex vs complicated work:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;complex work (where there is the potential for errors) over complicated work (where the solution is known, but is merely time consuming)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Explains some characteristics of learning organizations:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Teams in learning organizations perform ongoing experiments. While they settle on a core set of practices, they also try to build upon them. They keep innovating, improving, and reflecting. And how they work continues to evolve.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tags: learning, learning-organization, xp, rebecca-wirfs-brock, mob-programming, pair-programming, complex-work, complicated-work, experience-report, unruly, team-management, team-building, team-dysfunction, comparison&lt;/p&gt;

&lt;h2 id=&#34;what-you-re-hiding-from-when-you-constantly-check-your-phone&#34;&gt;What You’re Hiding from When You Constantly Check Your Phone&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://hbr.org/2016/01/what-youre-hiding-from-when-you-constantly-check-your-phone&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Charlotte Lieberman where she explains the technology-stress paradox and the fact of replacing one addiction with another, as some addictions are more socially than others.&lt;/p&gt;

&lt;p&gt;Explains that the constant connection to social media allow us to avoid ourselves, and the connection to mindfulness.&lt;/p&gt;

&lt;p&gt;On the paradox:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;technology-stress paradox: we share the desire for greater freedom from our devices, and yet that very freedom itself causes anxiety&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;On the work-life balance:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;work-life balance [is]  [&amp;hellip;] about noticing those moments in which you really don&amp;rsquo;t want to deal with yourself&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tags: charlotte-lieberman, paradox, quote, social-media, mindfulness, technology-stress-paradox, stress, addiction, time-management&lt;/p&gt;

&lt;h2 id=&#34;testing-myth-1-writing-tests-slows-you-down&#34;&gt;Testing myth #1: Writing tests slows you down&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://arhohuttunen.fi/testing/testing-myth-1-writing-tests-slows-you-down/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Arho Huttunen on an excuse to not test: there is no time.&lt;/p&gt;

&lt;p&gt;In the article, he explains the false assumptions based on that reason and the gains (short term and long term) from doing it.&lt;/p&gt;

&lt;p&gt;Tags: arho-huttunen, test, excuse&lt;/p&gt;

&lt;h2 id=&#34;becodeweek-by-josé-manuel-beas&#34;&gt;BeCodeWeek by José Manuel Beas&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.jmbeas.es/category/becodeweek/&#34; target=&#34;_blank&#34;&gt;this category of posts&lt;/a&gt; by José Manuel Beas about his BeCodeWeek, a desk-surfing experience at BeCode.&lt;/p&gt;

&lt;p&gt;Analyses facts and publishes one entry per day detailing his activities.&lt;/p&gt;

&lt;p&gt;Tags: becodeweek, jmbeas, jose-manuel-beas, desk-surfing, experience, experience-report, analysis&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;&lt;code&gt;What Is Functional Programming?&lt;/code&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;many of these fragments are quotes or paraphrased quotes
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:2&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Self-Study in September 2015</title>
      <link>https://alvarogarcia7.github.io/blog/2015/09/01/self-study-in-september-2015/</link>
      <pubDate>Tue, 01 Sep 2015 15:25:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/09/01/self-study-in-september-2015/</guid>
      <description>

&lt;h2 id=&#34;the-30-second-habit-with-a-lifelong-impact&#34;&gt;The 30 second habit with a lifelong impact&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://blog.growth.supply/the-30-second-habit-with-a-lifelong-impact-2c3f948ead98&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; list of patterns, by Robyn Scott, in which it is explained why to compress information in a few ideas, investing 30 seconds to condense the article.&lt;/p&gt;

&lt;p&gt;Tags: 30-second, habit, robyn-scott&lt;/p&gt;

&lt;h2 id=&#34;the-strengths-and-weaknesses-of-extreme-programming&#34;&gt;The Strengths and Weaknesses of Extreme Programming&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched &lt;a href=&#34;https://www.youtube.com/watch?v=LkhLZ7_KZ5w&#34; target=&#34;_blank&#34;&gt;this video&lt;/a&gt; explaining the strengths and weaknesses of extreme programming. By William Matheson&lt;/p&gt;

&lt;p&gt;Tags: extreme-programming, xp, william-matheson, video, strength, weakness&lt;/p&gt;

&lt;h2 id=&#34;poster-de-extreme-programming&#34;&gt;Poster de Extreme Programming&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched &lt;a href=&#34;https://www.youtube.com/watch?v=4nN6Gh79Yg8&#34; target=&#34;_blank&#34;&gt;this video&lt;/a&gt; introducing eXtreme Programming. By Martín Salías&lt;/p&gt;

&lt;p&gt;Tags: martin-salias, kleer, extreme-programming, xp&lt;/p&gt;

&lt;h2 id=&#34;good-tech-lead-bad-tech-lead&#34;&gt;Good Tech Lead, Bad Tech Lead&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://blog.growth.supply/good-tech-lead-bad-tech-lead-948b2b806d86&#34; target=&#34;_blank&#34;&gt;this comparison&lt;/a&gt; of good and bad traits in tech leads. By Jason Liszka.&lt;/p&gt;

&lt;p&gt;Explains the differences between good and bad tech leads, even though many of these qualities are shared by plain team members&lt;/p&gt;

&lt;p&gt;Tags: jason-liszka, tech-lead, comparison&lt;/p&gt;

&lt;h2 id=&#34;why-procrastinators-procrastinate&#34;&gt;Why Procrastinators Procrastinate&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://waitbutwhy.com/2013/10/why-procrastinators-procrastinate.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Tim Urban on procrastination: this article compares the procrastinator and the non-procrastinator brain with pictures, introducing the Rational part, the Instant Gratification Monkey and the Panic Monster. Shows some reasons why.&lt;/p&gt;

&lt;p&gt;There is more on part 2: &lt;a href=&#34;http://waitbutwhy.com/2013/11/how-to-beat-procrastination.html&#34; target=&#34;_blank&#34;&gt;How to beat procrastination&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tags: tim-urban, procrastination, rational-part, instant-gratification-monkey, panic-monster, brain, comparison&lt;/p&gt;

&lt;h2 id=&#34;algebraic-data-type&#34;&gt;Algebraic data type&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://en.wikipedia.org/wiki/Algebraic_data_type&#34; target=&#34;_blank&#34;&gt;this wikipedia page&lt;/a&gt;, that explains what this is, a few examples and the theory behind it.&lt;/p&gt;

&lt;p&gt;Tags: wikipedia, data-type, algebraic-data-type&lt;/p&gt;

&lt;h2 id=&#34;recursion&#34;&gt;Recursion&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://en.wikipedia.org/wiki/Recursion_(computer_science)&#34; target=&#34;_blank&#34;&gt;this wikipedia page&lt;/a&gt;, that explains the recursion basic concepts, such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;induction, coinduction&lt;/li&gt;
&lt;li&gt;recursion, corecursion&lt;/li&gt;
&lt;li&gt;implementation details in iterative vs recursive programs:

&lt;ul&gt;
&lt;li&gt;shortcutting recursion (i.e., arm-length&amp;rsquo;s recursion)&lt;/li&gt;
&lt;li&gt;wrapper function&lt;/li&gt;
&lt;li&gt;tail-call optimization, related to tail-recursive functions&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;recursion and its relation to data structures&lt;/li&gt;
&lt;li&gt;base case / recursive case and removing the need of the base one in corecursion or in non-strict languages&lt;/li&gt;
&lt;li&gt;types of recursion:

&lt;ul&gt;
&lt;li&gt;direct, indirect, mutual&lt;/li&gt;
&lt;li&gt;generative, structural&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tags: recursion, corecursion, induction, coinduction, tail-call-optimization, tail-recursion, direct-recursion, indirect-recursion, mutual-recursion, generative-recursion, structural-recursion, arm-length-recursion, iterative-function, recursive-function, base-case, recursive-case, wikipedia, data-structure&lt;/p&gt;

&lt;h2 id=&#34;anonymous-function&#34;&gt;Anonymous function&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://en.wikipedia.org/wiki/Anonymous_function&#34; target=&#34;_blank&#34;&gt;this wikipedia page&lt;/a&gt;, that describes what is a lambda expression or an anonymous function. How it can be used (e.g., currying, higher-order function, closures) and gives examples in many languages.&lt;/p&gt;

&lt;p&gt;Cites its invention (Church, 1936, lambda-calculus) and its first implementation (Lisp, 1958)&lt;/p&gt;

&lt;p&gt;Tags: alonzo-church, anonymous-function, lambda-expression, closure, lambda-calculus, lisp, currying, higher-order-function, wikipedia&lt;/p&gt;

&lt;h2 id=&#34;closure&#34;&gt;Closure&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://en.wikipedia.org/wiki/Closure_(computer_programming)&#34; target=&#34;_blank&#34;&gt;this wikipedia page&lt;/a&gt;, that explains the concept of closures and the usual confusion between closure and lambda. Also some applications.&lt;/p&gt;

&lt;p&gt;Discusses closures as a way of deferring execution and implementing object-oriented (OO) systems&lt;/p&gt;

&lt;p&gt;Tags: wikipedia, closure, object-orientation, lambda-expression&lt;/p&gt;

&lt;h2 id=&#34;zen-story-the-master-archer&#34;&gt;Zen Story: The Master Archer&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.thedailyzen.org/2015/06/23/zen-story-the-master-archer/&#34; target=&#34;_blank&#34;&gt;this story&lt;/a&gt; by Charlie Ambler about perfectionism and deep study, exemplified by the general that retires to study archery and the child who draws targets around the arrows.&lt;/p&gt;

&lt;p&gt;Tags: charlie-amber, master, student, zen, story&lt;/p&gt;

&lt;h2 id=&#34;loosely-coupled&#34;&gt;Loosely Coupled&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.bwhaley.com/loosely-coupled&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Ben Whaley about how to loosely couple services introducing a queue and the difference in patterns between push and pull communication.&lt;/p&gt;

&lt;p&gt;Tags: ben-whaley, push, pull, coupling, loose-coupling, service, queue, aws&lt;/p&gt;

&lt;h2 id=&#34;being-good-at-programming-competitions-correlates-negatively-with-being-good-on-the-job&#34;&gt;Being good at programming competitions correlates negatively with being good on the job&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched the small video and the discussion about programmers&amp;rsquo; talent at &lt;a href=&#34;http://www.catonmat.net/blog/programming-competitions-work-performance/&#34; target=&#34;_blank&#34;&gt;this page&lt;/a&gt;. By Peteris Krumins.&lt;/p&gt;

&lt;p&gt;The original video explains that being good at a programming contest correlates negatively with skill at a programming job, even if the company hires them.&lt;/p&gt;

&lt;p&gt;The discussion explains the analogy with height and the NBA and concludes that this parameter should be preponderated with less importance than others.&lt;/p&gt;

&lt;p&gt;Tags: google, peter-norvig, nba, analogy, programming-contest, programming-skill, peteris-krumins&lt;/p&gt;

&lt;h2 id=&#34;on-functors&#34;&gt;On Functors&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.catonmat.net/blog/on-functors/&#34; target=&#34;_blank&#34;&gt;this comparison&lt;/a&gt; by Peteris Krumins of what the functors are in different languages:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;C++: function objects&lt;/li&gt;
&lt;li&gt;Standard ML: generic implementation of interfaces. They allow to compose structures&lt;/li&gt;
&lt;li&gt;Haskell: structure containing zero or more objects that can be converted to another structure containing the other objects. It&amp;rsquo;s an homomorphism between two categories.&lt;/li&gt;
&lt;li&gt;Prolog: built-in predicate for self-inspection and the atom at the start of the structure&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tags: peteris-krumins, comparison, haskell, c-plus-plus, standard-ml, prolog, functor&lt;/p&gt;

&lt;h2 id=&#34;recursive-regular-expressions&#34;&gt;Recursive Regular Expressions&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.catonmat.net/blog/recursive-regular-expressions/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; on recursive regular expressions by Peteris Krumins.&lt;/p&gt;

&lt;p&gt;In it, he lightly describes how a regular expression relates to a &lt;a href=&#34;https://en.wikipedia.org/wiki/Context-free_grammar&#34; target=&#34;_blank&#34;&gt;Context-Free Grammar&lt;/a&gt; and the language support for Perl to include recursive regular expressions. Based on the examples (e.g., &lt;code&gt;0^n1^n&lt;/code&gt;), it really clicked to me that this could be expressed as a recursive function, with its base case and the recursive one. Also that it &amp;ldquo;depends on solutions to smaller instances of the same problem&amp;rdquo; (&lt;a href=&#34;https://en.wikipedia.org/wiki/Recursion_(computer_science)&#34; target=&#34;_blank&#34;&gt;wikipedia&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;Tags: peteris-krumins, regular-expression, recursion, recursive-regular-expression, perl, context-free-grammar, formal-language-theory&lt;/p&gt;

&lt;h2 id=&#34;in-functional-programming-what-is-a-functor&#34;&gt;In Functional Programming, what is a functor?&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://stackoverflow.com/questions/2030863/in-functional-programming-what-is-a-functor/2031421#2031421&#34; target=&#34;_blank&#34;&gt;this answer&lt;/a&gt;, by Norman Ramsey, on what is a functor.&lt;/p&gt;

&lt;p&gt;He explains in simple words what the concept is and how a type can belong to the class functor. Examples in haskell.&lt;/p&gt;

&lt;p&gt;Tags: norman-ramsey, functor, stack-overflow, haskell, type-class, class, map, fmap&lt;/p&gt;

&lt;h2 id=&#34;functors&#34;&gt;Functors&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.clojure.net/2013/01/19/Functors/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Jim Duey explaining functors in Clojure. He introduces a couple of notes of Haskell but all of the examples are in Clojure. Explains functors, a subset of it called applicatives, and the two libraries he has created.&lt;/p&gt;

&lt;p&gt;Tags: jim-duey, functor, clojure, haskell&lt;/p&gt;

&lt;h2 id=&#34;10-tips-for-proper-application-logging&#34;&gt;10 Tips for Proper Application Logging&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.javacodegeeks.com/2011/01/10-tips-proper-application-logging.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Tomasz Nurkiewicz about tips on logging:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;reduce side effects&lt;/li&gt;
&lt;li&gt;use categories and levels&lt;/li&gt;
&lt;li&gt;connection with external systems&lt;/li&gt;
&lt;li&gt;handling exceptions&lt;/li&gt;
&lt;li&gt;automatically / manually reading logging files&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tags: tomasz-nurkiewicz, logging, sl4j, log4j, tip&lt;/p&gt;

&lt;h2 id=&#34;what-is-duck-typing&#34;&gt;What is &amp;ldquo;duck typing&amp;rdquo;?&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://ericlippert.com/2014/01/02/what-is-duck-typing/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Eric Lippert about duck typing&lt;/p&gt;

&lt;p&gt;Tags: duck-typing, eric-lippert, type-system, c-sharp&lt;/p&gt;

&lt;h2 id=&#34;yagni&#34;&gt;Yagni&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve reread &lt;a href=&#34;http://martinfowler.com/bliki/Yagni.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Martin Fowler on the cost of developing features that are not needed&lt;/p&gt;

&lt;p&gt;Tags: martin-fowler, yagni, article, misunderstanding&lt;/p&gt;

&lt;h2 id=&#34;learn-haskell&#34;&gt;Learn Haskell&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve seen &lt;a href=&#34;https://www.youtube.com/watch?v=JJlI5FPTbgE&#34; target=&#34;_blank&#34;&gt;this video&lt;/a&gt; by Jordan Medlock on learning haskell, explaining the basics and how to use the REPL&lt;/p&gt;

&lt;p&gt;Tags: haskell, repl, jordan-medlock, beginner, video&lt;/p&gt;

&lt;h2 id=&#34;learn-haskell-1&#34;&gt;Learn Haskell&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve seen &lt;a href=&#34;https://www.youtube.com/watch?v=JJlI5FPTbgE&#34; target=&#34;_blank&#34;&gt;this video&lt;/a&gt; by Jordan Medlock on learning haskell, explaining the basics and how to use the REPL&lt;/p&gt;

&lt;p&gt;Tags: haskell, repl, jordan-medlock, beginner, video&lt;/p&gt;

&lt;h2 id=&#34;tmux-the-terminal-multiplexer&#34;&gt;TMUX - The Terminal Multiplexer&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read these two parts: (&lt;a href=&#34;http://blog.hawkhost.com/2010/06/28/tmux-the-terminal-multiplexer/&#34; target=&#34;_blank&#34;&gt;one&lt;/a&gt;, &lt;a href=&#34;http://blog.hawkhost.com/2010/07/02/tmux-%E2%80%93-the-terminal-multiplexer-part-2&#34; target=&#34;_blank&#34;&gt;two&lt;/a&gt;) of an introduction guide to &lt;code&gt;tmux&lt;/code&gt; (the unix terminal multiplexer) by Cody from Hawk Host.&lt;/p&gt;

&lt;p&gt;In it, he explains the basics of tmux and the main differences with &lt;code&gt;screen&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Tags: cody, hawk-host, tmux, how-to&lt;/p&gt;

&lt;h2 id=&#34;thermodynamics-and-garbage-collection&#34;&gt;Thermodynamics and Garbage Collection&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.pipeline.com/~hbaker1/ThermoGC.html&#34; target=&#34;_blank&#34;&gt;this paper&lt;/a&gt; by Henry G. Baker that explains the analogy of the garbage collection (&amp;ldquo;a freezer&amp;rdquo;) and thermodynamics, where the state mutator (th program, also an oven) modifies the garbage heap and introduces / extracts entropy into the system.&lt;/p&gt;

&lt;p&gt;Comparison between entropy and lack of information, using the theories from Shannon, Maxwell-Boltzmann. There&amp;rsquo;s a reference to the knapsack problem and to simulated annealing.&lt;/p&gt;

&lt;p&gt;There&amp;rsquo;s also a gentle introduction to thermodynamics in layman terms: heat, temperature, microstates, macrostates, reversability, etc.&lt;/p&gt;

&lt;p&gt;In this paper it is also reflected (in macro vs micro states) that the sum all parts is simpler than the single ones (i.e., Information Hiding)&lt;/p&gt;

&lt;p&gt;Tags: henry-baker, thermodynamics, microstate, macrostate, analogy, simulated-annealing, garbage-collection, shannon, information, maxwell-boltzmann, freezer, oven, entropy&lt;/p&gt;

&lt;h2 id=&#34;how-we-ended-up-with-microservices&#34;&gt;How we ended up with microservices&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://philcalcado.com/2015/09/08/how_we_ended_up_with_microservices.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt;, by Phil Calçado, where he talks about his stay at SoundCloud:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the value stream map: from X days to Y&lt;/li&gt;
&lt;li&gt;reorganizing teams into service teams&lt;/li&gt;
&lt;li&gt;conway&amp;rsquo;s law and teams being responsible for support. Also, being given full authority&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tags: phil-calcado, soundcloud, microservice, team-split, value-stream-mapping, conversion, reorganization&lt;/p&gt;

&lt;h2 id=&#34;lisp-is-still-a-secret-weapon&#34;&gt;Lisp is still a secret weapon&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://kep.io/is-lisp-still-a-secret-weapon/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Judd Keppel where he explains it is a good idea that Clojure / ClojureScript continues to be a secret, not known among developers. Cites the article &amp;lsquo;Beating the averages&amp;rsquo; by Paul Graham and the amount of available packages in npm, maven central, etc&lt;/p&gt;

&lt;p&gt;Tags: paul-graham, judd-keppel, clojure, clojurescript, weapon, developer&lt;/p&gt;

&lt;h2 id=&#34;perceptron&#34;&gt;Perceptron&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://en.wikipedia.org/wiki/Perceptron&#34; target=&#34;_blank&#34;&gt;this wikipedia&lt;/a&gt; article that explains the single-layer and multi-layer perceptron. First designed to be a machine (hardware), but later an algorithm for supervised machine learning. Worked by Minsky &amp;amp; Papert and invented by Frank Rosenblatt in 1958.&lt;/p&gt;

&lt;p&gt;Tags: peceptron, artificial-intelligence, machine-learning, frank-rosenblatt, 1958, marvin-minsky, seymour-papert&lt;/p&gt;

&lt;h2 id=&#34;is-c-a-strongly-typed-or-a-weakly-typed-language&#34;&gt;Is C# a strongly typed or a weakly typed language?&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://ericlippert.com/2012/10/15/is-c-a-strongly-typed-or-a-weakly-typed-language/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt;, in the form of a dialogue between Eric Lippert and himself about the C# language and its type system.&lt;/p&gt;

&lt;p&gt;Tags: type-system, c-sharp, eric-lippert, dialogue, strongly-typed, weakly-typed, language&lt;/p&gt;

&lt;h2 id=&#34;diseño-por-contratos-construyendo-software-confiable&#34;&gt;Diseño por contratos: construyendo software confiable&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.revista.unam.mx/vol.4/num5/art11/sep_art11.pdf&#34; target=&#34;_blank&#34;&gt;this paper&lt;/a&gt; that explains design by contract, based on the Hoare triplet, pre-post condition, method and class invariant. With examples in Eiffel, Java about a package sender company. Also explains pre/post with inheritance. By Gerardo Rossel and Andrea Manna. In Spanish.&lt;/p&gt;

&lt;p&gt;Tags: gerardo-rossel, andrea-manna, design-by-contract, unam-mx, eiffel, java, precondition, postcondition, trust, quality, hoare-triplet, method-invariant, class-invariant&lt;/p&gt;

&lt;h2 id=&#34;the-inevitable-return-of-cobol&#34;&gt;The Inevitable Return of COBOL&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.hackerrank.com/the-inevitable-return-of-cobol/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; that explains the current state of COBOL in programming and systems. Written by Ritika Trikha&lt;/p&gt;

&lt;p&gt;Tags: ritika-trikha, cobol, programming-language, retirement, median-age&lt;/p&gt;

&lt;h2 id=&#34;the-risky-eclipse-of-statisticians&#34;&gt;The Risky Eclipse of Statisticians&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.hackerrank.com/the-risky-eclipse-of-statisticians/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; where Ritika Trikha explains the current situation regarding Big Data and the statiscian jobs. How Big Data is in demand but the latter are not and what effects this might have.&lt;/p&gt;

&lt;p&gt;Tags: ritika-trikha, bootcamp, programming, hiring, big-data, analysis, statistics&lt;/p&gt;

&lt;h2 id=&#34;give-it-five-minutes&#34;&gt;Give it five minutes&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://signalvnoise.com/posts/3124-give-it-five-minutes&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Jason Fried where he explains why we should give ideas time to sink in and marinate, before dismissing them. Ideas are so fragile that it is better to let them live for a while before dismissing them. This also applies for thoughts (other people&amp;rsquo;s or your own).&lt;/p&gt;

&lt;p&gt;Tags: jason-fried, idea, think, startup, blue-hat, thinking-hat,  six-thinking-hats, red-hat&lt;/p&gt;

&lt;h2 id=&#34;reading-clojure-stacktraces&#34;&gt;Reading Clojure Stacktraces&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.jayfields.com/2012/06/reading-clojure-stacktraces.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Jay Fields on reading clojure stacktraces. Very similar to &amp;ldquo;Clojure Stack Traces for the Uninitiated&amp;rdquo;&lt;/p&gt;

&lt;p&gt;Tags: jay-fields, clojure, stacktrace&lt;/p&gt;

&lt;h2 id=&#34;clojure-stack-traces-for-the-uninitiated&#34;&gt;Clojure Stack Traces for the Uninitiated&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://blog.8thlight.com/connor-mendenhall/2014/09/12/clojure-stacktraces.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; on how to interpret clojure stacktraces. Written by Connor Mendenhall&lt;/p&gt;

&lt;p&gt;Tags: connor-mendenhall, clojure, stacktrace&lt;/p&gt;

&lt;h2 id=&#34;javascript-type-inference&#34;&gt;JavaScript type inference&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve found (and played) with &lt;a href=&#34;http://www.ccs.neu.edu/home/dimvar/jstypes.html&#34; target=&#34;_blank&#34;&gt;this JavaScript type inference engine&lt;/a&gt;. Written in Javascript (and available online). Written by Dimitrios Vardoulakis.&lt;/p&gt;

&lt;p&gt;Tags: javascript-type-inference, type-inference, type-inference-algorithm, dimitrios-vardoulakis, cfa2&lt;/p&gt;

&lt;h2 id=&#34;alternatives-to-boolean-parameters&#34;&gt;Alternatives to boolean parameters&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://blog.8thlight.com/dariusz-pasciak/2015/05/28/alternatives-to-boolean-parameters.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; explaining alternatives to sending a boolean parameter to decide on the contents of the function. Written by Dariusz Pasciak&lt;/p&gt;

&lt;p&gt;As I heard some time ago, if a function receives a boolean to decide on what to do, it will for sure have more than one responsibility: one for the false value and one for the true value.&lt;/p&gt;

&lt;p&gt;Tags: dariusz-pasciak, boolean, srp, boolean-parameter&lt;/p&gt;

&lt;h2 id=&#34;why-are-web-uploads-so-painful&#34;&gt;Why Are Web Uploads So Painful?&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.codinghorror.com/why-are-web-uploads-so-painful/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; on web uploads being painful. By Jeff Atwood. The screenshots feel old (2007) and some of the problems have already been solved.&lt;/p&gt;

&lt;p&gt;Tags: jeff-atwood, article, upload, browser&lt;/p&gt;

&lt;h2 id=&#34;can-your-team-pass-the-elevator-test&#34;&gt;Can Your Team Pass The Elevator Test?&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.codinghorror.com/can-your-team-pass-the-elevator-test/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; on the elevator test by Jeff Atwood.&lt;/p&gt;

&lt;p&gt;Tags: jeff-atwood, article, elevator-test, assumption, microsoft-bob, vision, product, feature&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Self-Study in August 2015</title>
      <link>https://alvarogarcia7.github.io/blog/2015/08/02/self-study-in-august-2015/</link>
      <pubDate>Sun, 02 Aug 2015 21:45:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/08/02/self-study-in-august-2015/</guid>
      <description>

&lt;h2 id=&#34;humble-object&#34;&gt;Humble Object&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read the &lt;a href=&#34;http://xunitpatterns.com/Humble%20Object.html&#34; target=&#34;_blank&#34;&gt;Humble Object&lt;/a&gt; list of patterns, by Gerard Meszaros, including:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;humble dialog&lt;/li&gt;
&lt;li&gt;humble executable&lt;/li&gt;
&lt;li&gt;humble transaction controller&lt;/li&gt;
&lt;li&gt;humble container adapter&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tags: pattern, gerard-meszaros&lt;/p&gt;

&lt;h2 id=&#34;how-you-know&#34;&gt;How you know&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve reread &lt;a href=&#34;http://www.paulgraham.com/know.html&#34; target=&#34;_blank&#34;&gt;this small essay&lt;/a&gt; by Paul Graham on storing information in our heads, based on the context. On the importance of rereading, to add more contexts to the initial one.&lt;/p&gt;

&lt;p&gt;Tags: paul-graham, reread, read&lt;/p&gt;

&lt;h2 id=&#34;protected-variation-the-importance-of-being-closed&#34;&gt;Protected Variation: The Importance of Being Closed&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.martinfowler.com/ieeeSoftware/protectedVariation.pdf&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Craig Larman in the magazine IEEE Software &amp;gt; Design.&lt;/p&gt;

&lt;p&gt;Discusses Information Hiding, Protected Variation and the Open-Closed Principle.&lt;/p&gt;

&lt;p&gt;Tags: craig-larman, ocp, open-closed principle, design, information-hiding, ih, protected-variation, pv,&lt;/p&gt;

&lt;h2 id=&#34;lambda-javascript-micro-services-on-aws&#34;&gt;Lambda, Javascript Micro-Services on AWS&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.jayway.com/2014/12/18/lambda-javascript-micro-services-aws/&#34; target=&#34;_blank&#34;&gt;this post&lt;/a&gt; explaining how to deploy a microservice on AWS on top of Lambda. Written by Anders Janmyr&lt;/p&gt;

&lt;p&gt;The cool thing is that you get billed by milliseconds!&lt;/p&gt;

&lt;p&gt;Tags: anders-janmyr, devops, microservice, lambda, aws&lt;/p&gt;

&lt;h2 id=&#34;migrating-to-clojure-so-much-fn&#34;&gt;Migrating To Clojure. So Much Fn&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched &lt;a href=&#34;https://www.youtube.com/watch?v=Hv4slaRydRM&#34; target=&#34;_blank&#34;&gt;this talk&lt;/a&gt; by Jan Stępień where he talks about his experience on migrating part of an application to clojure from ruby on rails&lt;/p&gt;

&lt;p&gt;Tags: jan-stepien, clojure, migration, ruby-on-rails, talk, wrocloverb&lt;/p&gt;

&lt;h2 id=&#34;te-recomiendo-escribir-en-un-blog&#34;&gt;Te recomiendo escribir en un blog&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.carlosble.com/2015/07/te-recomiendo-escribir-en-un-blog/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; from Carlos Blé in which he recommends writing a blog, on things we discover along the way. (Spanish)&lt;/p&gt;

&lt;p&gt;Tags: carlos-ble, meta, blog, long-way&lt;/p&gt;

&lt;h2 id=&#34;we-need-enough-technical-debt&#34;&gt;We need enough technical debt&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://blog.svpino.com/2015/08/05/we-need-enough-technical-debt&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; on why we need to accumulate a bit of technical debt, as a way of being less perfectionist and deliver more features / value to our stakeholders. Written by Santiago L. Valdarrama.&lt;/p&gt;

&lt;p&gt;Tags: santiago-valdarrama, technical-debt, perfectionism&lt;/p&gt;

&lt;h2 id=&#34;escribe-mejores-tests-en-javascript&#34;&gt;Escribe mejores tests en Javascript&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://carlosvillu.com/escribe-mejores-tests-en-javascript/&#34; target=&#34;_blank&#34;&gt;this list&lt;/a&gt; of tips to write better javascript tests (Spanish). By Carlos Villuendas&lt;/p&gt;

&lt;p&gt;Tags: carlos-villuendas, javascript, test&lt;/p&gt;

&lt;h2 id=&#34;down-the-rabbit-hole&#34;&gt;Down the Rabbit Hole&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://github.com/brettwooldridge/HikariCP/wiki/Down-the-Rabbit-Hole&#34; target=&#34;_blank&#34;&gt;this wiki&lt;/a&gt; page on how to tune some aspects of the server hotspot JVM, by Brett Wooldridge&lt;/p&gt;

&lt;p&gt;Tags: performance, jvm, hotspot, inline, bytecode, brett-wooldridge&lt;/p&gt;

&lt;h2 id=&#34;xp-manchester-lightning-talks-2015-live-broadcast&#34;&gt;XP Manchester Lightning Talks 2015 Live broadcast&lt;/h2&gt;

&lt;p&gt;I have watched the first two &lt;a href=&#34;https://www.youtube.com/watch?v=VD4UEW2i7hU&#34; target=&#34;_blank&#34;&gt;lightning talks&lt;/a&gt; from XP Manchester, edition number 61.&lt;/p&gt;

&lt;p&gt;Tags: lightning-talk, broadcast, simplicity, manchester, 2015&lt;/p&gt;

&lt;h2 id=&#34;counting-hash-collisions-with-the-birthday-paradox&#34;&gt;Counting hash collisions with the birthday paradox&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://matt.might.net/articles/counting-hash-collisions/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; on the birthday paradox, or the percentage of chance of people sharing the same birthday. This could be applied to hash function, as the title says, but is not included in the article. Written by Matt Might&lt;/p&gt;

&lt;h2 id=&#34;why-i-m-the-best-programmer-in-the-world&#34;&gt;Why I&amp;rsquo;m The Best Programmer In The World*&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.codinghorror.com/why-im-the-best-programmer-in-the-world/&#34; target=&#34;_blank&#34;&gt;this ironically-titled article&lt;/a&gt; by Jeff Atwood on humility and how to improve as a programmer.&lt;/p&gt;

&lt;p&gt;Tags: jeff-atwood&lt;/p&gt;

&lt;h2 id=&#34;the-key-to-giving-and-receiving-negative-feedback&#34;&gt;The Key to Giving and Receiving Negative Feedback&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://hbr.org/2015/08/the-key-to-giving-and-receiving-negative-feedback?&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Joseph Grenny about how to give and receive negative feedback. It is exemplified by the plant manager who was expecting another kind of feedback from his subordinates and was surprised by their negative feedback.&lt;/p&gt;

&lt;p&gt;Tags: joseph-grenny, negative-feedback, feedback, by-example&lt;/p&gt;

&lt;h2 id=&#34;testing-clojure-web-applications-with-kerodon&#34;&gt;Testing Clojure web applications with Kerodon&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://semaphoreci.com/community/tutorials/testing-clojure-web-applications-with-kerodon&#34; target=&#34;_blank&#34;&gt;this guide&lt;/a&gt; on how to test compojure-based applications with kerodon. Written by Nebojša Stričević&lt;/p&gt;

&lt;p&gt;Tags: nebojsa-stricevic, compojure, kerodon, clojure, testing, guide&lt;/p&gt;

&lt;h2 id=&#34;using-the-option-type-effectively&#34;&gt;Using The Option Type Effectively&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://blog.8thlight.com/uku-taht/2015/04/29/using-the-option-type-effectively.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; on how to use the &lt;code&gt;Option&lt;/code&gt; type (in rust), similar to &lt;code&gt;Optional&lt;/code&gt; in java or &lt;code&gt;Maybe&lt;/code&gt; in haskell. Written by Uku Taht.&lt;/p&gt;

&lt;p&gt;Tags: uku-taht, option, maybe, optional, rust&lt;/p&gt;

&lt;h2 id=&#34;when-should-you-think&#34;&gt;When Should You Think?&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://blog.8thlight.com/uncle-bob/2014/03/11/when-to-think.html&#34; target=&#34;_blank&#34;&gt;this post&lt;/a&gt; by Robert C Martin on when to think and the hypothesis that TDD does not allow you to think before coding.&lt;/p&gt;

&lt;p&gt;Tags: tdd, robert-c-martin, design, hypothesis&lt;/p&gt;

&lt;h2 id=&#34;orthogonal-latin-squares-an-application-of-experiment-design-to-compiler-testing&#34;&gt;Orthogonal latin squares: an application of experiment design to compiler testing&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://barbie.uta.edu/~mehra/20_an%20application%20of%20experiment%20design%20to%20compiler%20testing.pdf&#34; target=&#34;_blank&#34;&gt;this paper&lt;/a&gt; by Robert Mandl on techniques that can be applied to reduce the burden of exhaustive testing to compilers. Preferring &amp;ldquo;surely all relevant distinct combinations&amp;rdquo; we can reduce the amount of testing. This paper tries to formalize the concept of &amp;ldquo;near-exhaustive testing&amp;rdquo;&lt;/p&gt;

&lt;p&gt;Tags: latin-square, robert-mandl, compiler, testing, near-exhaustive-testing, optimization, exhaustive-testing&lt;/p&gt;

&lt;p&gt;##  Practical Type System Benefits&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://themonadreader.files.wordpress.com/2014/04/nccb.pdf&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Neil Brown on benefits of the type system, with examples in haskell. He goes on to explore the benefits of involving the type-checker at compile time to remove type errors and ease the programming effort:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I find that several problems in Haskell can be solved by involving the type system
further: The trick is to involve the type system in ways that provide a big benefit
for the cost, but not going so far that the type system gets in the way of code
that you know &amp;ndash;but can’t easily prove to the compiler&amp;ndash; is safe&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I&amp;rsquo;ve also learned the concept of the quasi-quoter: similar to a preprocessor, executed at compile time and type-checked&lt;/p&gt;

&lt;p&gt;Tags: neil-brown, quote, quasi-quoter, preprocessor, haskell, monad-reader&lt;/p&gt;

&lt;h2 id=&#34;clojurescript-and-the-blub-paradox&#34;&gt;ClojureScript and the Blub Paradox&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article comparing javascript and clojurescript using the fizzbuzz kata. There is a nice example of the pattern matching for the cases (i.e. &amp;ldquo;switch&amp;rdquo;) of the fizz, buzz. Written by Nate Wildermuth&lt;/p&gt;

&lt;p&gt;Tags: clojurescript, javascript, fizzbuzz, kata, nate-wildermuth&lt;/p&gt;

&lt;h2 id=&#34;no-malinterpretes-tu-carrera&#34;&gt;No malinterpretes tu carrera&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.carlosble.com/2011/02/no-malinterpretes-tu-carrera/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; on (not) changing careers from programmer to designer, analyst, team manager. About the programmer&amp;rsquo;s passion and why not to misinterpret your career. Written by Carlos Blé. In Spanish.&lt;/p&gt;

&lt;p&gt;Tags: carlos-ble, career, programming, management, career-change&lt;/p&gt;

&lt;h2 id=&#34;just-haskell-or-nothing&#34;&gt;Just Haskell or Nothing&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://cheecheeo.github.io/just_haskell_or_nothing.html&#34; target=&#34;_blank&#34;&gt;these slides&lt;/a&gt; on packaging values in (Just a) or Nothing for possibly failed computations in haskell. Written by John Chee&lt;/p&gt;

&lt;p&gt;Tags: john-chee, haskell, just, nothing, maybe, functor&lt;/p&gt;

&lt;h2 id=&#34;tracking-joy-at-work&#34;&gt;Tracking Joy at Work&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://begriffs.com/posts/2015-03-15-tracking-joy-at-work.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; about quantifying happiness at the office (or at work). Joe Nelson, the author of the article, uses the quantifying method described int the book &lt;a href=&#34;http://www.amazon.com/Experience-Sampling-Method-Measuring-Everyday/dp/1412925576/&#34; target=&#34;_blank&#34;&gt;Experience Sampling Method&lt;/a&gt; (&lt;a href=&#34;https://en.wikipedia.org/wiki/Experience_sampling_method&#34; target=&#34;_blank&#34;&gt;wikipedia page&lt;/a&gt;) by Hektner, Schmidt, Csikszentmihalyi.&lt;/p&gt;

&lt;p&gt;The last one, not coincidentally is the author of &lt;a href=&#34;http://www.amazon.com/Flow-The-Psychology-Optimal-Experience/dp/0061339202&#34; target=&#34;_blank&#34;&gt;Flow: The Psychology of Optimal Experience&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Tags: mihaly-csikszentmihalyi, flow, quantification, data, experience-sampling, article, joe-nelson&lt;/p&gt;

&lt;h2 id=&#34;going-write-only&#34;&gt;Going &amp;ldquo;Write-Only&amp;rdquo;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://begriffs.com/posts/2015-04-20-going-write-only.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Joe Nelson on going &amp;ldquo;write-only&amp;rdquo; on social media, blogs, news, etc, as opposed to read-only (only consuming media) or read-write (consuming and producing). He cites another programmer, &lt;a href=&#34;http://joey.hess.usesthis.com/&#34; target=&#34;_blank&#34;&gt;Joey Hess&lt;/a&gt; and about the quality and durability of your work.&lt;/p&gt;

&lt;p&gt;Tags: article, joe-nelson, write-only, social-media, reading, philosophy, thoreau, nietzsche, joey-hess&lt;/p&gt;

&lt;h2 id=&#34;create-a-static-site-with-hakyll-github-and-travis-ci&#34;&gt;Create a static site with Hakyll, Github and Travis CI&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://begriffs.com/posts/2014-08-12-create-static-site-with-hakyll-github.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; on how to create your blog with hakyll and travis ci. Written by Joe Nelson&lt;/p&gt;

&lt;p&gt;Travis ci is used to do continuous integration and automatically deploy each commit to production (github pages).&lt;/p&gt;

&lt;p&gt;Tags: hakyll, haskell, joe-nelson, meta, blog, continuous-deployment, github, github-pages, travis-ci&lt;/p&gt;

&lt;h2 id=&#34;falling-in-love-with-computer-science&#34;&gt;Falling in Love with Computer Science&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched &lt;a href=&#34;https://www.youtube.com/watch?v=haxusGuUyt4&#34; target=&#34;_blank&#34;&gt;this video&lt;/a&gt; by Kathy Pham, an American that discovered her passion, her love to computer science a few years ago. She tells the events around computer science from the beginning of college to the current moment.&lt;/p&gt;

&lt;p&gt;Tags: kathy-pham, passion, love, computer-science, autobiography, time-lapse, google-developers&lt;/p&gt;

&lt;h2 id=&#34;duck-typing&#34;&gt;Duck Typing&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched &lt;a href=&#34;https://www.youtube.com/watch?v=h0rTF__RNo4&#34; target=&#34;_blank&#34;&gt;this video&lt;/a&gt; by Dan Grossman, part of the &lt;a href=&#34;https://www.coursera.org/course/proglang&#34; target=&#34;_blank&#34;&gt;&amp;ldquo;Programming Languages&amp;rdquo; MOOC&lt;/a&gt;, in which he explains what is a Duck Type and how to use (and abuse) them in ruby.&lt;/p&gt;

&lt;p&gt;Tags: ruby, dan-grossman, mooc, mooc-programming-languages&lt;/p&gt;

&lt;h2 id=&#34;not-so-private-clojure-functions&#34;&gt;Not-So-Private Clojure Functions&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://christophermaier.name/blog/2011/04/30/not-so-private-clojure-functions&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; explaining how to bypass private functions in clojure: either create a lambda or create a different namespace. Written by Christopher Maier&lt;/p&gt;

&lt;p&gt;Tags: private-variable, clojure, testing, joy-of-clojure, christopher-maier, private-function, namespace&lt;/p&gt;

&lt;h2 id=&#34;frege-and-clojure&#34;&gt;Frege (and Clojure)&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://seancorfield.github.io/blog/2015/02/13/frege-and-clojure/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; that tells the Pragmatic Programmer&amp;rsquo;s advice to learn a new language every year and the author (Sean Corfield) explains his trajectory learning them. He also cites the Lein plugin he&amp;rsquo;s built: &lt;code&gt;lein-fregec&lt;/code&gt; and how to connect clojure and frege (a.k.a JVM&amp;rsquo;s haskell).&lt;/p&gt;

&lt;p&gt;Tags: haskell, frege, jvm, clojure, ffi, pragmatic-programmer, advice, lein-fregec,  sean-corfield, comparison&lt;/p&gt;

&lt;h2 id=&#34;two-months-early-300k-under-budget&#34;&gt;Two months early. 300k under budget&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://thoughtworks.github.io/p2/issue09/two-months-early/&#34; target=&#34;_blank&#34;&gt;the tale&lt;/a&gt; of a Thoughtworks Project Manager who convinced his client to start using clojure to deliver a custom-made CMS. Written by Dave Elliman.&lt;/p&gt;

&lt;p&gt;Tags: dave-elliman, thoughtworks, project-manager, clojure, cms, microservice&lt;/p&gt;

&lt;h2 id=&#34;convince-your-boss-to-use-clojure&#34;&gt;Convince your boss to use Clojure&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.lispcast.com/convince-your-boss-to-use-clojure&#34; target=&#34;_blank&#34;&gt;this guide&lt;/a&gt; by Eric Normand on how to convince your boss or your company to start using clojure.&lt;/p&gt;

&lt;p&gt;Tags: company, clojure, eric-normand, how-to, guide&lt;/p&gt;

&lt;h2 id=&#34;a-brief-introduction-to-prolog&#34;&gt;A brief introduction to Prolog&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://docs.google.com/presentation/d/1NAUo8nWLfNvvW3Wb7HJMunljjDJbzu7mo-5twKeGDvc/edit#slide=id.g63daf4745_0_56&#34; target=&#34;_blank&#34;&gt;these slides&lt;/a&gt; about a brief introduction to prolog and how to do web development in it. By Jaelle Scheuerman&lt;/p&gt;

&lt;p&gt;Tags: jaelle-scheuerman, prolog, web-development, rest, slide&lt;/p&gt;

&lt;h2 id=&#34;arrayzing-the-javascript-array-cheatsheet&#34;&gt;Arrayzing - The JavaScript array cheatsheet&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://gist.github.com/ourmaninamsterdam/1be9a5590c9cf4a0ab42&#34; target=&#34;_blank&#34;&gt;this cheatsheet&lt;/a&gt; for javascript arrays. Written by Justin Perry&lt;/p&gt;

&lt;p&gt;Tags: cheatsheet, array, javascript, gist, justin-perry&lt;/p&gt;

&lt;h2 id=&#34;some-words-on-lazy-evaluation-and-sharing&#34;&gt;Some words on lazy evaluation and sharing&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://pseudo.fixme.fi/~opqdonut/blog/Some_words_on_lazy_evaluation_and_sharing.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; comparing the &lt;code&gt;fix&lt;/code&gt; definition with a hand-made one and its &amp;ldquo;sharing&amp;rdquo; problems. Written by Joel E. Kaasinen&lt;/p&gt;

&lt;p&gt;Tags: joel-kaasinen, haskell, fix, sharing, non-strictness, lazy-evaluation&lt;/p&gt;

&lt;h2 id=&#34;hammock-driven-development&#34;&gt;Hammock Driven Development&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched &lt;a href=&#34;https://www.youtube.com/watch?v=f84n5oFoZBc&#34; target=&#34;_blank&#34;&gt;this video&lt;/a&gt; by Rich Hickey. A few notes:&lt;/p&gt;

&lt;p&gt;A: identifying a problem that we&amp;rsquo;re trying to solve&lt;/p&gt;

&lt;p&gt;D: assessing if the proposed solution solves the problem&lt;/p&gt;

&lt;p&gt;the union of the features is not the purpose of the product / is not the product&lt;/p&gt;

&lt;p&gt;proramming is not completing features&lt;/p&gt;

&lt;p&gt;avoiding problems /= solving problems&lt;/p&gt;

&lt;p&gt;book: how to solve it - G. Polya. Practices &amp;amp; techniques for solving mathematic problems&lt;/p&gt;

&lt;p&gt;How to solve the problem&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;state the problem&lt;/li&gt;
&lt;li&gt;understand the problem:

&lt;ul&gt;
&lt;li&gt;what do you know: facts, context, constraints.&lt;/li&gt;
&lt;li&gt;what do you don&amp;rsquo;t know&lt;/li&gt;
&lt;li&gt;are there related problems? solutions to related problems. find an analogy: starting from scratch vs incremental step&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;be discerning&lt;/li&gt;
&lt;li&gt;more input, better output:

&lt;ul&gt;
&lt;li&gt;read about your domain problem, research papers (maybe ACM)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;tradeoffs:

&lt;ul&gt;
&lt;li&gt;find at least two options (ups and downs) to compare before taking a decision&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Focus time for programmers like alone time for kids. Hammock time is important mind&amp;rsquo;s eye time&lt;/p&gt;

&lt;p&gt;Waking mind:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;critical thinking&lt;/li&gt;
&lt;li&gt;analysis&lt;/li&gt;
&lt;li&gt;tactics&lt;/li&gt;
&lt;li&gt;prone to local maxima&lt;/li&gt;
&lt;li&gt;feed work to background mind&lt;/li&gt;
&lt;li&gt;analyze its products&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Background mind:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;making connections&lt;/li&gt;
&lt;li&gt;synthesis&lt;/li&gt;
&lt;li&gt;strategy&lt;/li&gt;
&lt;li&gt;abstracts, analogies&lt;/li&gt;
&lt;li&gt;solves most non-trivial problems&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;loading it: work it hard in the waking mind to be included in the background mind&lt;/p&gt;

&lt;p&gt;abstraction = software strategy&lt;/p&gt;

&lt;p&gt;tip: small answer is better than big answer (occam&amp;rsquo;s razor?)​&lt;/p&gt;

&lt;p&gt;Tags: rich-hickey, hammock-driven-development, background-mind, waking-mind, solve-problem, george-polya, book, analysis, design, talk&lt;/p&gt;

&lt;h2 id=&#34;parallelism-concurrency&#34;&gt;Parallelism /= Concurrency&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://ghcmutterings.wordpress.com/2009/10/06/parallelism-concurrency/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; on the differences between parallelism and concurrency, with examples in the haskell compiler GHC. Written by &lt;a href=&#34;https://ghcmutterings.wordpress.com/author/simonmar/&#34; target=&#34;_blank&#34;&gt;simonmar&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tags: haskell, concurrency, parallelism, ghc, simonmar, comparison&lt;/p&gt;

&lt;h2 id=&#34;parallelism-vs-concurrency&#34;&gt;Parallelism vs. Concurrency&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://wiki.haskell.org/Parallelism_vs._Concurrency&#34; target=&#34;_blank&#34;&gt;this page&lt;/a&gt; from the haskell wiki.&lt;/p&gt;

&lt;p&gt;Tags: haskell, concurrency, parallelism, ghc, comparison&lt;/p&gt;

&lt;h2 id=&#34;writing-code-that-writes-code-with-hack-codegen&#34;&gt;Writing code that writes code — with Hack Codegen&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://code.facebook.com/posts/1624644147776541/writing-code-that-writes-code-with-hack-codegen/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; about metaprogramming (code that generates code) in PHP. Written by Alejandro Marcu.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve arrived to this from this tweet:&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; data-cards=&#34;hidden&#34; lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;This is what happens when your programming language doesn&amp;#39;t have macros &lt;a href=&#34;https://t.co/ZfsEe2EJIj&#34;&gt;https://t.co/ZfsEe2EJIj&lt;/a&gt;. Yuck.&lt;/p&gt;&amp;mdash; David Nolen (@swannodette) &lt;a href=&#34;https://twitter.com/swannodette/status/634495099607613440&#34;&gt;August 20, 2015&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;Tags: alejandro-marcu, metaprogramming, php, macro, lisp, clojure&lt;/p&gt;

&lt;h2 id=&#34;how-katas-can-help-you-learn&#34;&gt;How katas can help you learn&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://codurance.com/2015/08/18/How-katas-can-help-you-learn/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; on learning from katas, with the example of the Roman Numerals kata in Objective-C. Written by Sandro Mancuso.&lt;/p&gt;

&lt;p&gt;Tags: sandro-mancuso, kata, learning, roman-numeral, objective-c&lt;/p&gt;

&lt;h2 id=&#34;java-8-definitive-guide-to-completablefuture&#34;&gt;Java 8: Definitive guide to CompletableFuture&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.nurkiewicz.com/2013/05/java-8-definitive-guide-to.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; about Java 8&amp;rsquo;s feature, the &lt;code&gt;CompletableFeature&lt;/code&gt;. Written by Tomasz Nurkiewicz&lt;/p&gt;

&lt;p&gt;Tags: tomasz-nurkiewicz, java-8, completable-future, future, non-blocking, reactive-programming&lt;/p&gt;

&lt;h2 id=&#34;are-you-making-these-10-ddd-mistakes&#34;&gt;Are You Making These 10 DDD Mistakes?&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://danielwhittaker.me/2015/07/05/are-you-making-these-10-ddd-mistakes/#&#34; target=&#34;_blank&#34;&gt;this infographic&lt;/a&gt; on 10 DDD common mistakes, by Daniel Whittaker.&lt;/p&gt;

&lt;p&gt;Tags: ddd, daniel-whittaker, bounded-context, ubiquitous-language, infographic&lt;/p&gt;

&lt;h2 id=&#34;haste-full-stack-haskell-for-non-phd-candidates&#34;&gt;Haste: Full-Stack Haskell for Non-PhD Candidates&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched &lt;a href=&#34;https://www.youtube.com/watch?v=3v03NFcyvzc&#34; target=&#34;_blank&#34;&gt;this talk&lt;/a&gt; at the Strange Loop Conference 2014 about Haste language, a haskell version that compiles to javascript, therefore letting you write haskell in the browser. By Erin Swenson-Healey and James Cooper&lt;/p&gt;

&lt;p&gt;In this talk they recommend the &lt;a href=&#34;http://www.seas.upenn.edu/~cis194/lectures.html&#34; target=&#34;_blank&#34;&gt;CIS194 course&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tags: haste, haskell, james-cooper, erin-swenson-healey, strange-loop, 2014, talk&lt;/p&gt;

&lt;h2 id=&#34;a-year-of-haskell&#34;&gt;A Year of Haskell&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched &lt;a href=&#34;https://www.youtube.com/watch?v=wZ0RQG3mFPw&#34; target=&#34;_blank&#34;&gt;this talk&lt;/a&gt; about experiences using haskell professionally, by the American Justin Leitgeb in a Equatorian company in Quito, Stack Builders. He goes on to explain the haskell language in comparison to ruby on rails, what he mostly used with his clients.&lt;/p&gt;

&lt;p&gt;Also explains what sells and doesn&amp;rsquo;t (mostly productivity, not security) and gives pointer for applying it to a company&lt;/p&gt;

&lt;p&gt;Tags: justin-leitgeb, ecuador, haskell, stack-builders, lambda-days, 2015, client, professional, consulting, consultancy&lt;/p&gt;

&lt;h2 id=&#34;a-taste-of-haskell&#34;&gt;A Taste of Haskell&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched a lesson by Simon Peyton-Jones, that introduces haskell to experienced programmers, not in the language but in programming in general. At the conference OSCON 2007&lt;/p&gt;

&lt;p&gt;Links: &lt;a href=&#34;https://www.youtube.com/watch?v=jLj1QV11o9g&#34; target=&#34;_blank&#34;&gt;part 1&lt;/a&gt;, &lt;a href=&#34;https://www.youtube.com/watch?v=IqXTUbdLig0&#34; target=&#34;_blank&#34;&gt;part 2&lt;/a&gt;, &lt;a href=&#34;http://www.slideshare.net/oscon2007/os-peytonjones&#34; target=&#34;_blank&#34;&gt;slides&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tags: oscon, 2007, haskell, introduction, lesson, simon-peyton-jones&lt;/p&gt;

&lt;h2 id=&#34;programming-why-haskell-is-great&#34;&gt;Programming - Why Haskell is Great&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve seen &lt;a href=&#34;https://www.youtube.com/watch?v=RqvCNb7fKsg&#34; target=&#34;_blank&#34;&gt;this video&lt;/a&gt; introducing some features of haskell. The most basic features, the REPL,  function composition. By FrungyKing&lt;/p&gt;

&lt;p&gt;Tags: haskell, introduction, video, screencast, repl, frungyking&lt;/p&gt;

&lt;h2 id=&#34;history-of-haskell-being-lazy-with-class&#34;&gt;History of Haskell: being lazy with class&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched &lt;a href=&#34;https://www.youtube.com/watch?v=3bjXGrycMhQ&#34; target=&#34;_blank&#34;&gt;this video&lt;/a&gt; by Simon Peyton-Jones at the &amp;ldquo;History of Programming Languages Conference III&amp;rdquo; which explains how the language was designed and written, a language timeline, what options they took, how they decided about monadic IO, etc.&lt;/p&gt;

&lt;p&gt;Tags: simon-peyton-jones, 2007, history-of-programming-languages-conference, haskell, talk&lt;/p&gt;

&lt;h2 id=&#34;the-humble-programmer&#34;&gt;The Humble Programmer&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.cs.utexas.edu/users/EWD/transcriptions/EWD03xx/EWD340.html&#34; target=&#34;_blank&#34;&gt;this EWD&lt;/a&gt; about the necessary humbleness for being a programmer and the slow expansion of the trade, as compared to hardware engineers.&lt;/p&gt;

&lt;p&gt;He cites six reasons for preferring to be a humble programmer:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the programmer only needs to manage simple programs&lt;/li&gt;
&lt;li&gt;simple programs imply reducing the search space&lt;/li&gt;
&lt;li&gt;construct a program from a mathematical proof instead of test its properties after building the software. see quote below&lt;/li&gt;
&lt;li&gt;a good abstraction can hide much complexity and difficulty&lt;/li&gt;
&lt;li&gt;the importance of the used tool in the final product&lt;/li&gt;
&lt;li&gt;&amp;ldquo;the only problems we can satisfactory solve are the ones that admit a factored solution&amp;rdquo;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In this essay I&amp;rsquo;ve found the idea of&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Testing shows the presence, not the absence of bugs&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;That &lt;a href=&#34;https://en.wikiquote.org/wiki/Edsger_W._Dijkstra&#34; target=&#34;_blank&#34;&gt;Wikiquote&lt;/a&gt; attributes to an earlier paper (in 1969). In this paper, the verbatim quote is:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;program testing can be a very effective way to show the presence of bugs, but is hopelessly inadequate for showing their absence.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This idea also connects to the &amp;ldquo;lower bounds&amp;rdquo; and &amp;ldquo;upper bounds&amp;rdquo; of program correctness expressed in the article &lt;a href=&#34;https://cdsmith.wordpress.com/2011/01/09/an-old-article-i-wrote/&#34; target=&#34;_blank&#34;&gt;An Old Article I Wrote&lt;/a&gt; which is about static types, by Cdsmith. Admittedly, much later, in 2008, so this idea could be inspired by the Dijkstra&amp;rsquo;s article.&lt;/p&gt;

&lt;p&gt;Tags: edsger-dijkstra, ewd, dijkstra, humble-programmer, essay, comparison, absence-of-bugs, quote&lt;/p&gt;

&lt;h2 id=&#34;building-a-link-shortener-with-snaplets&#34;&gt;Building a Link Shortener with Snaplets&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve seen &lt;a href=&#34;https://vimeo.com/59109358&#34; target=&#34;_blank&#34;&gt;this video&lt;/a&gt; of how to build a link shortener webapp in haskell with the framework snap. By Ryan Trinkle. Found it in the &lt;a href=&#34;http://snapframework.com/docs&#34; target=&#34;_blank&#34;&gt;snap docs&lt;/a&gt; page.&lt;/p&gt;

&lt;p&gt;Tags: snap, haskell, link-shortener, talk, webapp, framework, ryan-trinkle&lt;/p&gt;

&lt;h2 id=&#34;comparing-haskell-web-frameworks&#34;&gt;Comparing Haskell Web Frameworks&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.edofic.com/posts/2014-02-23-haskell-web.html&#34; target=&#34;_blank&#34;&gt;this comparison&lt;/a&gt; of haskell web frameworks, by Andraz Bajt (a.k.a, edofic)&lt;/p&gt;

&lt;p&gt;Tags: andraz-bajt, edofic, haskell, web-framework, framework, comparison&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Self-study in June 2015</title>
      <link>https://alvarogarcia7.github.io/blog/2015/06/03/self-study-in-june-2015/</link>
      <pubDate>Wed, 03 Jun 2015 13:13:10 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/06/03/self-study-in-june-2015/</guid>
      <description>

&lt;p&gt;Update: I&amp;rsquo;ve grouped all small posts related to the self-study from June 2015
into a single post&lt;/p&gt;

&lt;h2 id=&#34;le-monitoring-de-flux-par-l-exemple&#34;&gt;Le monitoring de flux par l’exemple&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.octo.com/le-monitoring-de-flux-par-lexemple/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; about monitoring, in the way of &amp;ldquo;by example&amp;rdquo;, by Cédrick Lunven and Julien Kirch (French)&lt;/p&gt;

&lt;h2 id=&#34;the-first-micro-service-architecture&#34;&gt;The First Micro-service Architecture&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.cleancoder.com/uncle-bob/2015/05/28/TheFirstMicroserviceArchitecture.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; about microservices and how they were implemented many years ago by Robert C. Martin&lt;/p&gt;

&lt;h2 id=&#34;how-i-learned-to-balance-my-life-with-remote-work&#34;&gt;How I Learned to Balance My Life With Remote Work&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://open.bufferapp.com/remote-work/?utm_content=bufferaa5a2&amp;amp;utm_medium=social&amp;amp;utm_source=twitter.com&amp;amp;utm_campaign=buffer&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; about balancing life and work, either physical or remote by Michael Erasmus&lt;/p&gt;

&lt;h2 id=&#34;demystified-cqrs&#34;&gt;Demystified CQRS&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://blog.codecentric.de/en/2015/05/demystified-cqrs/?utm_content=buffer35b18&amp;amp;utm_medium=social&amp;amp;utm_source=twitter.com&amp;amp;utm_campaign=buffer&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; about CQRS by Nino Martincevic&lt;/p&gt;

&lt;h2 id=&#34;the-perils-of-programmer-education-in-the-bazaar&#34;&gt;The perils of programmer education in the bazaar&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.practicingruby.com/2015/06/04/the-perils-of-programmer-education-in-the-bazaar/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Gregory Brown&lt;/p&gt;

&lt;h2 id=&#34;6-useful-and-lesser-known-git-commands&#34;&gt;6 useful and lesser-known git commands&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.joncairns.com/2015/05/6-useful-and-lesser-known-git-commands/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; about git commands (log, checkout, stash, cherry-pick, annotate) by Jon Cairns&lt;/p&gt;

&lt;h2 id=&#34;is-your-scrum-standup-slowing-you-down&#34;&gt;Is Your Scrum Standup Slowing You Down?&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.sitepoint.com/scrum-standup-slowing-down/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by M. David Green&lt;/p&gt;

&lt;h2 id=&#34;me-duele-indra&#34;&gt;Me duele Indra&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://us2.campaign-archive2.com/?u=374c664073e1a1fa3deca53b4&amp;amp;id=67ce79e01b&#34; target=&#34;_blank&#34;&gt;this Bonilista&lt;/a&gt; (Spanish) by David Bonilla&lt;/p&gt;

&lt;h2 id=&#34;tdd-bdd-add-every-other-method-that-promises-software-quality-here-and-the-tea-tasting-lady&#34;&gt;TDD, BDD, [add every other method that promises software quality here] and the tea tasting lady&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://blinkingcaret.wordpress.com/2012/10/02/tdd-bdd-add-every-other-method-that-promises-software-quality-here-and-the-tea-tasting-lady/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Rui Figueiredo about the scientific method, TDD / BDD and how to scientifically detect if the &amp;lsquo;how&amp;rsquo; affects the result. In this case, exemplified by how to prepare your tea&lt;/p&gt;

&lt;h2 id=&#34;the-art-of-metaprogramming-in-java&#34;&gt;The Art of Metaprogramming in Java&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.slideshare.net/PolymathicCoder/the-art-of-metaprogramming-in-java&#34; target=&#34;_blank&#34;&gt;these slides&lt;/a&gt; by Abdelmonaim Remani&lt;/p&gt;

&lt;h2 id=&#34;when-tdd-does-not-work&#34;&gt;When TDD does not work&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://blog.8thlight.com/uncle-bob/2014/04/30/When-tdd-does-not-work.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Uncle Bob on situations where TDD might not be appropiate, especially around the borders&lt;/p&gt;

&lt;h2 id=&#34;mi-primera-semana-como-aprendiz&#34;&gt;Mi primera semana como aprendiz&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://ronnyancorini.es/blog/index.php/2015/06/08/mi-primera-semana-como-aprendiz/&#34; target=&#34;_blank&#34;&gt;Ronny Ancorini&amp;rsquo;s experiences&lt;/a&gt; in his first week as apprentince with Carlos Blé &amp;amp; Associates (Spanish)&lt;/p&gt;

&lt;h2 id=&#34;refactoring-without-good-tests&#34;&gt;Refactoring without good tests&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.codeclimate.com/blog/2013/12/05/refactoring-without-good-tests/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Peter Bell on how to deal with a legacy codebase, what are the effects of not having tests and how to deal with. How to add tests to a codebase that is not ready for it.&lt;/p&gt;

&lt;h2 id=&#34;big-ball-of-mud&#34;&gt;Big Ball of Mud&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.laputan.org/mud/&#34; target=&#34;_blank&#34;&gt;this paper&lt;/a&gt;, containing a collection of patterns and antipatterns (disguised as notes) by Brian Foote and Joseph Yoder&lt;/p&gt;

&lt;h2 id=&#34;comparision-of-different-concurrency-models-actors-csp-disruptor-and-threads-sic&#34;&gt;Comparision of different concurrency models: Actors, CSP, Disruptor and Threads [sic]&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://java-is-the-new-c.blogspot.com.es/2014/01/comparision-of-different-concurrency.html&#34; target=&#34;_blank&#34;&gt;this comparison of concurrency models&lt;/a&gt; by Rüdiger Möller&lt;/p&gt;

&lt;h2 id=&#34;5-whys&#34;&gt;5 Whys&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://en.wikipedia.org/wiki/5_Whys&#34; target=&#34;_blank&#34;&gt;this wikipedia&lt;/a&gt; article on the technique called &amp;ldquo;5 Whys&amp;rdquo;&lt;/p&gt;

&lt;h2 id=&#34;expectations-outcomes-and-challenges-of-modern-code-review&#34;&gt;Expectations, Outcomes, and Challenges of Modern Code Review&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://research.microsoft.com/apps/pubs/default.aspx?id=180283&#34; target=&#34;_blank&#34;&gt;this paper&lt;/a&gt;, &lt;a href=&#34;http://research.microsoft.com/pubs/180283/ICSE%202013-codereview.pdf&#34; target=&#34;_blank&#34;&gt;direct link&lt;/a&gt;, by Alberto Bacchelli and Christian Bird on code review at Microsoft.&lt;/p&gt;

&lt;p&gt;They explain how they do it, the exact methodology they are using and why they do it.&lt;/p&gt;

&lt;p&gt;The main reasons to code review are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;finding defects&lt;/li&gt;
&lt;li&gt;code improvement&lt;/li&gt;
&lt;li&gt;alternative solutions&lt;/li&gt;
&lt;li&gt;knowledge transfer&lt;/li&gt;
&lt;li&gt;team awareness and transparency&lt;/li&gt;
&lt;li&gt;also:

&lt;ul&gt;
&lt;li&gt;improve development process&lt;/li&gt;
&lt;li&gt;avoid build breaks&lt;/li&gt;
&lt;li&gt;share code ownership&lt;/li&gt;
&lt;li&gt;track rationale&lt;/li&gt;
&lt;li&gt;team assessment&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;the-quality-wheel&#34;&gt;The quality wheel&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.jessitron.com/2015/04/the-quality-wheel.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Jessica Kerr about the qualities of beautiful code&lt;/p&gt;

&lt;h2 id=&#34;5-minute-physics&#34;&gt;5 Minute Physics&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched &lt;a href=&#34;https://www.youtube.com/watch?v=n6FKT-KafRk&#34; target=&#34;_blank&#34;&gt;this video&lt;/a&gt; on interactions with the mobile devices and related to physics by David DeSandro&lt;/p&gt;

&lt;h2 id=&#34;rise-of-the-transpilers&#34;&gt;Rise of the Transpilers&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched &lt;a href=&#34;https://www.youtube.com/watch?v=DspYurD75Ns&#34; target=&#34;_blank&#34;&gt;this video&lt;/a&gt; on the rise of the transpilers and coffeescript by Jeremy Ashkenas&lt;/p&gt;

&lt;h2 id=&#34;drawing-lines-with-bresenham-s-line-algorithm&#34;&gt;Drawing Lines with Bresenham&amp;rsquo;s Line Algorithm&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched &lt;a href=&#34;https://www.youtube.com/watch?v=zytBpLlSHms&#34; target=&#34;_blank&#34;&gt;this video&lt;/a&gt; about how to apply the Bresenham&amp;rsquo;s algorithm to draw lines (implemented in pseudo-code and javascript) by Jenn Schiffer&lt;/p&gt;

&lt;h2 id=&#34;working-with-minified-javascript&#34;&gt;Working with Minified JavaScript&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched &lt;a href=&#34;https://www.youtube.com/watch?v=SuFNR7-XjKI&#34; target=&#34;_blank&#34;&gt;this video&lt;/a&gt; by John Crepezzi on how to mix javascript files (clients and yours), how to decompile javascript in chrome, dev &amp;amp; debug tools&lt;/p&gt;

&lt;h2 id=&#34;how-we-ran-our-legacy-code-retreat&#34;&gt;How we ran our Legacy Code Retreat&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://pboop.wordpress.com/2012/02/19/how-we-ran-our-legacy-code-retreat/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Andreas Leidig, looking for inspiration on running a legacy code retreat / brown-bag session. The experience report &lt;a href=&#34;../../../../2015/06/23/brown-bag-session-refactoring-legacy-code/&#34;&gt;is here&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;shift-left-testing-earlier-in-development&#34;&gt;Shift Left: Testing Earlier in Development&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://wirfs-brock.com/blog/2015/06/18/shift-left&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Rebecca Wirfs-Brock&lt;/p&gt;

&lt;h2 id=&#34;polymorphic-equality&#34;&gt;Polymorphic Equality&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.carlosble.com/2015/06/polymorphic-equality/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; on implementing polymorphic equality on C#, by Carlos Blé&lt;/p&gt;

&lt;h2 id=&#34;commit-messages-are-not-titles&#34;&gt;Commit messages are not titles&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://antirez.com/news/90&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; on git commit messages and how to use them, by antirez&lt;/p&gt;

&lt;h2 id=&#34;oracle-considers-g1-garbage-collector-for-java-9&#34;&gt;Oracle Considers G1 Garbage Collector for Java 9&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this &lt;a href=&#34;https://adtmag.com/articles/2015/06/22/oracle-java-9.aspx&#34; target=&#34;_blank&#34;&gt;press article&lt;/a&gt; on the G1 and CMS collector, by John K. Waters&lt;/p&gt;

&lt;h2 id=&#34;what-tech-newbies-need&#34;&gt;What Tech Newbies Need&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://storify.com/jesslynnrose/what-tech-newbies-need&#34; target=&#34;_blank&#34;&gt;this set of tweets&lt;/a&gt;, grouped by Jessica Rose about the most helpful things beginners can do to improve their programming skills.&lt;/p&gt;

&lt;h2 id=&#34;javascript-for-cats&#34;&gt;JavaScript For Cats&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://jsforcats.com/&#34; target=&#34;_blank&#34;&gt;this introductory guide&lt;/a&gt; to javascript by &lt;a href=&#34;https://twitter.com/maxogden&#34; target=&#34;_blank&#34;&gt;Max Ogden&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;why-doesn-t-python-have-switch-case&#34;&gt;Why Doesn&amp;rsquo;t Python Have Switch/Case?&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.pydanny.com/why-doesnt-python-have-switch-case.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; on the switch case in the python language by Daniel Roy Greenfeld&lt;/p&gt;

&lt;h2 id=&#34;joseph-moniz-s-notes-on-clojure&#34;&gt;[Joseph Moniz&amp;rsquo;s] Notes on Clojure&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read Joseph Moniz&amp;rsquo;s &lt;a href=&#34;http://blog.plasmaconduit.com/notes-on-clojure/&#34; target=&#34;_blank&#34;&gt;Notes on Clojure&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;chemical-computing-with-clojure&#34;&gt;Chemical Computing with Clojure&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://gigasquidsoftware.com/chemical-computing/index.html&#34; target=&#34;_blank&#34;&gt;an article&lt;/a&gt; on performing abstract computations with chemicals, written in Clojure by Carin Meier&lt;/p&gt;

&lt;h2 id=&#34;lenses&#34;&gt;Lenses&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.haskellforall.com/2012/01/haskell-for-mainstream-programmers_28.html&#34; target=&#34;_blank&#34;&gt;this tutorial&lt;/a&gt; on writing lenses for haskell, a way of importing imperative getters / setters to a Data. Written by Gabriel Gonzalez.&lt;/p&gt;

&lt;p&gt;On another note, the first part, about writing getters and setters in the naive way, is also explained in Learn you a Haskell &amp;gt; Chapter 8 Making Our Own Types and Typeclasses &amp;gt; Record syntax&lt;/p&gt;

&lt;h2 id=&#34;microservices-in-haskell&#34;&gt;Microservices in Haskell&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://github.com/AlexanderAA/haskell-microservices/blob/gh-pages/haskell-microservices.md&#34; target=&#34;_blank&#34;&gt;these notes&lt;/a&gt; on implementing a microservice in haskell, by &lt;a href=&#34;https://github.com/AlexanderAA&#34; target=&#34;_blank&#34;&gt;AlexanderAA&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;overcoming-resistance-to-change-isn-t-it-obvious&#34;&gt;Overcoming Resistance to Change - Isn&amp;rsquo;t It Obvious?&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched &lt;a href=&#34;https://www.youtube.com/watch?v=hcz1aZ60k7w&#34; target=&#34;_blank&#34;&gt;this video&lt;/a&gt; in the channel of The World with Theory of Constraints&lt;/p&gt;

&lt;h2 id=&#34;bacon-is-bad-for-you&#34;&gt;Bacon is bad for you&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://speakerdeck.com/garann/bacon-is-bad-for-you&#34; target=&#34;_blank&#34;&gt;these slides&lt;/a&gt;
 on professionalism and the programmer culture, by Garann Means&lt;/p&gt;

&lt;h2 id=&#34;code-is-a-job&#34;&gt;Code is a job&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://speakerdeck.com/garann/code-is-a-job&#34; target=&#34;_blank&#34;&gt;these slides&lt;/a&gt;, that are the continuation of &amp;ldquo;Bacon is bad for you&amp;rdquo;, by the same author, Garann Means&lt;/p&gt;

&lt;h2 id=&#34;the-great-newline-schism&#34;&gt;The Great Newline Schism&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.codinghorror.com/the-great-newline-schism/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Jeff Atwood on the difference in newline character(s)&lt;/p&gt;

&lt;h2 id=&#34;top-ten-reasons-why-i-won-t-use-your-open-source-project&#34;&gt;Top ten reasons why I won’t use your open source project&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://changelog.com/top-ten-reasons-why-i-wont-use-your-open-source-project/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; on what&amp;rsquo;s necessary for an open-source project to be usable by others. Written by Adam Stacoviak&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>