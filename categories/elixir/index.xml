<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>elixir on The long way through Software Craftsmanship</title>
    <link>https://alvarogarcia7.github.io/categories/elixir/</link>
    <description>Recent content in elixir on The long way through Software Craftsmanship</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 01 Aug 2023 00:00:00 +0400</lastBuildDate><atom:link href="https://alvarogarcia7.github.io/categories/elixir/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Self-Study in August 2023</title>
      <link>https://alvarogarcia7.github.io/blog/2023/08/01/self-study-august-2023/</link>
      <pubDate>Tue, 01 Aug 2023 00:00:00 +0400</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2023/08/01/self-study-august-2023/</guid>
      <description>Elixir saves Pinterest M a year in server costs An example of how rewriting a microservice from AWS Lambda to elixir can save 97% of server costs. From 150 servers to 5.
https://news.ycombinator.com/item?id=37304851
Tags: imported, hacker-news, elixir, rewrite, jose-valim, aws, cost, aws-gateway, serverless, lambda, microservice
Id: 41419550-46fc-11ee-bfbe-0242ac110002 Read: Tue Aug 29 08:30:52 2023</description>
    </item>
    
    <item>
      <title>Self-Study in December 2015</title>
      <link>https://alvarogarcia7.github.io/blog/2015/12/02/self-study-in-december-2015/</link>
      <pubDate>Wed, 02 Dec 2015 09:50:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/12/02/self-study-in-december-2015/</guid>
      <description>Ruby Equality And Object Comparison I&amp;rsquo;ve read this article, written by Alan Skorkin, that explains equality comparisons in ruby:
 equal? is reference equality == is value equality eql? is value and type equality  Tags: ruby, comparison, equality, object, reference, alan-skorkin
Software Folklore I&amp;rsquo;ve watched this PechaKucha by Chris Ford on what are laws and how they relate to creating software. Also talks on what could be an analogy to software creation (says not science, not engineering)</description>
    </item>
    
  </channel>
</rss>
