<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>The long way through Software Craftsmanship</title>
    <link>https://alvarogarcia7.github.io/categories/hiring/index.xml</link>
    <description>Recent content on The long way through Software Craftsmanship</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="https://alvarogarcia7.github.io/categories/hiring/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Self-Study in July 2016</title>
      <link>https://alvarogarcia7.github.io/blog/2016/07/04/self-study-in-july-2016/</link>
      <pubDate>Mon, 04 Jul 2016 10:47:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2016/07/04/self-study-in-july-2016/</guid>
      <description>

&lt;h2 id=&#34;until-the-end-of-the-internet&#34;&gt;Until the End of the Internet&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://m.signalvnoise.com/until-the-end-of-the-internet-405d55fde60f&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Jason Zimdars explaining the &amp;ldquo;end of the internet&amp;rdquo; policy at Basecamp: they will make everything possible to keep the services running for existing customer until the end or until the last customer uses it.&lt;/p&gt;

&lt;p&gt;Tags: policy, end-of-the-internet, jason-zimdars, basecamp, product&lt;/p&gt;

&lt;h2 id=&#34;how-agile-principles-can-fund-your-start-up&#34;&gt;How Agile Principles Can Fund Your Start-Up&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://dzone.com/articles/how-agile-principles-can-fund-your-start-up&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Jurgen Appelo explaining how the agile values can help you negotiate funding for your startup: instead of negotiating with each investor, agree on a formula and invest in many small rounds, instead of a big one. This works both ways: for buying and for selling.&lt;/p&gt;

&lt;p&gt;Suggests using a base plus the amount of sales in the last year * a percentage.&lt;/p&gt;

&lt;p&gt;Tags:  jurgen-appelo, investment, startup, agile&lt;/p&gt;

&lt;h2 id=&#34;how-i-fell-in-love-with-a-programming-language&#34;&gt;How I fell in love with a programming language&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://m.signalvnoise.com/how-i-fell-in-love-with-a-programming-language-8933d5e749ed&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Dan Kim on the feelings of love and comfort he feels when he&amp;rsquo;s programming in Kotlin, for Android. Tells the story of DHH and the love of Ruby as a similar one.&lt;/p&gt;

&lt;p&gt;Tags: dan-kim, dhh, ruby, love-of-language, kotlin, android&lt;/p&gt;

&lt;h2 id=&#34;book-writing-for-the-busy-programmer&#34;&gt;Book writing for the busy programmer&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://gigasquidsoftware.com/blog/2016/06/19/book-writing-for-the-busy-programmer/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Carin Meier on what tools she found useful for writing, editing and publishing a science fiction book she was writing for her daughter.&lt;/p&gt;

&lt;p&gt;Tags: tool, pandoc, carin-meier, book, book-writing, book-editing, book-publishing&lt;/p&gt;

&lt;h2 id=&#34;one-two-and-three-factor-authentication&#34;&gt;one-, two-, and three-factor authentication&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://pciguru.wordpress.com/2010/05/01/one-two-and-three-factor-authentication/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Jeff Hall, that explains the factors in multi-factor authentication.&lt;/p&gt;

&lt;p&gt;Tags: jeff-hall, ofa, 2fa, mfa, one-factor-authentication, two-factor-authentication, multi-factor-authentication, pci-guru, security, authentication&lt;/p&gt;

&lt;h2 id=&#34;scaling-agile-a-law-and-two-paradoxes&#34;&gt;Scaling Agile: A Law And Two Paradoxes&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://asprotunity.com/blog/scaling-agile-a-law-and-two-paradoxes/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Giovanni Asproni about agile.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Fundamental law of scaling: Scaling up amplifies the bad and makes the good more difficult.&lt;/p&gt;

&lt;p&gt;First paradox of scaling: Most projects are scaled up because they don’t fulfill the prerequisites for scaling.&lt;/p&gt;

&lt;p&gt;Second paradox of scaling: Projects fulfilling the prerequisites for scaling have a lesser need to scale.&lt;/p&gt;

&lt;p&gt;&lt;quote&gt;Giovanni Asproni&lt;/quote&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Also goes on to explain ten prerequisites for scaling.&lt;/p&gt;

&lt;p&gt;Tags: scaled-agile, agile, giovanni-asproni, paradox, law&lt;/p&gt;

&lt;h2 id=&#34;carta-abierta-a-ese-empresario-que-no-encuentra-talento&#34;&gt;Carta abierta a ese empresario que no encuentra talento&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/espanol/carta-abierta-a-ese-empresario-que-no-encuentra-talento-669e28e4a89b&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Ignacio Segura reacting to a previous article about job offer and demand. Ignacio explains how the job market can be modeled and how workers have found ways of selling their time to the best price.&lt;/p&gt;

&lt;p&gt;Tags: ignacio-segura, analogy, job-offer, job, job-market, economy, spanish&lt;/p&gt;

&lt;h2 id=&#34;david-dill-why-online-voting-is-a-danger-to-democracy&#34;&gt;David Dill: Why Online Voting Is a Danger to Democracy&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://engineering.stanford.edu/news/david-dill-why-online-voting-danger-democracy&#34; target=&#34;_blank&#34;&gt;this interview&lt;/a&gt; to David Dill on why the online voting is not a good idea and we should stick to paper as the golden rule for voting processes.&lt;/p&gt;

&lt;p&gt;Explains how difficult is to convince people of the technical limitations and the massive incentive it would be to hack into election systems / services.&lt;/p&gt;

&lt;p&gt;Tags: interview, david-dill, online-voting, limitation&lt;/p&gt;

&lt;h2 id=&#34;clojure-gazette-tdd-in-clojure-on-android&#34;&gt;Clojure Gazette - TDD in Clojure on Android&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://us4.campaign-archive2.com/?u=a33b5228d1b5bf2e0c68a83f4&amp;amp;id=7023cf0a33&#34; target=&#34;_blank&#34;&gt;this interview&lt;/a&gt; to Alexander Yakushev, about his Google Summer of Code and the project he is currently working on: Clojure-android&lt;/p&gt;

&lt;p&gt;Tags: interview, clojure-gazette, alexander-yakushev, google-summer-of-code, gsoc, clojure, tdd, android&lt;/p&gt;

&lt;h2 id=&#34;what-will-github-be-in-5-years&#34;&gt;What Will GitHub Be in 5 years?&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://dev.to/ben/what-will-github-be-in-5-years&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; that describes the current state of Github business and the possible solutions in the upcoming five years. By Ben Halpern&lt;/p&gt;

&lt;p&gt;Tags: ben-halpern, github, economy, startup, investment&lt;/p&gt;

&lt;h2 id=&#34;serverless-architectures&#34;&gt;Serverless Architectures&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://martinfowler.com/articles/serverless.html&#34; target=&#34;_blank&#34;&gt;this evolving article&lt;/a&gt; by Mike Roberts on what is and is not Serverless: [mobile] backend as a service or function as a service.&lt;/p&gt;

&lt;p&gt;Converts some n-tier applications into serverless ones, expliciting that this is only a way of doing it, not necessarily the way he would do it&lt;/p&gt;

&lt;p&gt;Tags: faas, baas, mbass, function-as-a-service, backend-as-a-service, mobile-backend-as-a-service, serverless, evolving-article, mike-roberts, lambda&lt;/p&gt;

&lt;h2 id=&#34;big-co-vs-small-co-job-vs-career-stability&#34;&gt;Big co. vs small co. &amp;amp; job vs. career stability&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.catehuston.com/blog/2016/06/02/job-vs-career-stability/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Cate Huston on the career and job stability that big companies and small companies can offer:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Job security means that you know you will keep getting a paycheck from $company. Career security means that you know you can get another job, and develop yourself and your career in the way that is meaningful to you.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tags: job-security, cate-huston, big-company, small-company, career-security, career, professional-career&lt;/p&gt;

&lt;h2 id=&#34;copy-paste-code&#34;&gt;Copy. Paste. Code?&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://blog.devmastery.com/copy-paste-code-6ed9bb841cd4&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Bill Sourour on the different point of view of solving questions in coding many years ago compared to nowadays.&lt;/p&gt;

&lt;p&gt;Also explores the concept of copy pasting code without understanding it, explaining that the endgame is writing good code that works and is easy to change.&lt;/p&gt;

&lt;p&gt;Tags: copy-paste, bill-sourour, clean-code, comparison&lt;/p&gt;

&lt;h2 id=&#34;why-so-many-developers-hate-recruiters&#34;&gt;Why so many developers hate recruiters&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.freecodecamp.com/the-tech-recruiter-red-pill-967dd492560c&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Quincy Larson on how recruiters for the IT sector work and how to work with them for your best possible outcome.&lt;/p&gt;

&lt;p&gt;Tags: career, professional-career, recruitment, recruiter, agent, hiring, quincy-larson&lt;/p&gt;

&lt;h2 id=&#34;every-time-someone-posts-one-of-these-coding-is-over-essays-on-medium-they-undo-a-good-chunk-of&#34;&gt;Every time someone posts one of these “coding is over” essays on Medium, they undo a good chunk of…&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@quincylarson/every-time-someone-posts-one-of-these-coding-is-over-essay-on-medium-they-undo-a-good-chunk-of-b7989849390b&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Quincy Larson on why we should not tell others about their choosing of learning programming, and every time we do, some doors close.&lt;/p&gt;

&lt;p&gt;Tags: answer, learn-coding, related-to-article, quincy-larson&lt;/p&gt;

&lt;h2 id=&#34;29-behaviors-that-will-make-you-an-unstoppable-programmer&#34;&gt;29 Behaviors That Will Make You An Unstoppable Programmer&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@kenmazaika/29-behaviors-that-will-make-you-an-unstoppable-programmer-8778941d80f7&#34; target=&#34;_blank&#34;&gt;this list&lt;/a&gt; of tricks to become a be a better programmer. By Ken Mazaika&lt;/p&gt;

&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;Use Google very aggressively.&lt;/li&gt;
&lt;li&gt;Maintain an obnoxious amount of stick-to-itiveness.&lt;/li&gt;
&lt;li&gt;Acknowledge that micro-decisions matter.&lt;/li&gt;
&lt;li&gt;Acknowledge that most major decisions don’t matter that much.&lt;/li&gt;
&lt;li&gt;Always use the right tool for the job.&lt;/li&gt;
&lt;li&gt;Understand that code is cheap.&lt;/li&gt;
&lt;li&gt;Evaluate technologies based on all their merits.&lt;/li&gt;
&lt;li&gt;Say “I don’t know.”&lt;/li&gt;
&lt;li&gt;Always analyze the clues found in error messages.&lt;/li&gt;
&lt;li&gt;Know the difference between a premature optimization and a show-stopping optimization that NEEDS to happen.&lt;/li&gt;
&lt;li&gt;Take responsibility for your mistakes.&lt;/li&gt;
&lt;li&gt;Become a power-user of your development tools.&lt;/li&gt;
&lt;li&gt;Know how to use Vim (at least a little bit).&lt;/li&gt;
&lt;li&gt;Never accept freelance work in an unfamiliar technology.&lt;/li&gt;
&lt;li&gt;Don’t count the number of hours.&lt;/li&gt;
&lt;li&gt;Absorb massive criticism with ease.&lt;/li&gt;
&lt;li&gt;Pair program with people with more experience.&lt;/li&gt;
&lt;li&gt;Always code review your own work first.&lt;/li&gt;
&lt;li&gt;Recognize that the hard part of freelancing isn’t writing the code. It’s everything else.&lt;/li&gt;
&lt;li&gt;Identify and resolve bigger issues.&lt;/li&gt;
&lt;li&gt;Dive into large open source projects to bring your features to life.&lt;/li&gt;
&lt;li&gt;Skip a lot of meetings.&lt;/li&gt;
&lt;li&gt;Know when it’s time to give back.&lt;/li&gt;
&lt;li&gt;Be capable of writing bad code.&lt;/li&gt;
&lt;li&gt;Let other people know that you’re working late without being a jerk.&lt;/li&gt;
&lt;li&gt;Act as a leader, not a boss.&lt;/li&gt;
&lt;li&gt;Go play foosball.&lt;/li&gt;
&lt;li&gt;Learn under pressure.&lt;/li&gt;
&lt;li&gt;“Move fast and break things.”&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tags: ken-mazaika, list, unbeateable-programmer, unstoppable-programmer, efficiency, 10x, tip-and-trick&lt;/p&gt;

&lt;h2 id=&#34;como-melhorar-seus-códigos-usando-object-calisthenics-portuguese&#34;&gt;Como melhorar seus códigos usando Object Calisthenics (Portuguese)&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/coderockr-way/como-melhorar-seus-c%C3%B3digos-usando-object-calisthenics-444daf3e2e06&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; about object calisthenics, with an example in PHP. By Elton Minetto&lt;/p&gt;

&lt;p&gt;Tags: object-calisthenics, elton-minetto, php, portuguese&lt;/p&gt;

&lt;h2 id=&#34;read-this-story-without-distraction-can-you&#34;&gt;Read This Story Without Distraction (Can You?)&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.nytimes.com/2016/05/01/fashion/monotasking-drop-everything-and-read-this-story.html?action=click&amp;amp;contentCollection=Fashion%20%26%20Style&amp;amp;module=RelatedCoverage&amp;amp;region=Marginalia&amp;amp;pgtype=article&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Verena von Pfetten on the effects on multitasking in our daily lives. Also comments on the movement of monotasking or unitasking, which is the opposite of multitasking: doing one thing at a time.&lt;/p&gt;

&lt;p&gt;Underlines the benefits of monotasking and how this is related to mindfulness and psychological benefits.&lt;/p&gt;

&lt;p&gt;Tags: multitasking, monotasking, unitasking, verena-von-pfetten, time-management&lt;/p&gt;

&lt;h2 id=&#34;debuggers-are-a-wasteful-timesink&#34;&gt;Debuggers are a wasteful Timesink&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.artima.com/weblogs/viewpost.jsp?thread=23476&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Robert C. Martin on why we shouldn&amp;rsquo;t use debuggers&lt;/p&gt;

&lt;p&gt;Tags: uncle-bob, robert-martin, debugger, tdd&lt;/p&gt;

&lt;h2 id=&#34;taming-the-steamroller-how-to-communicate-compassionately-with-non-native-english-speakers&#34;&gt;Taming the steamroller: how to communicate compassionately with non-native English speakers&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@mollyclare/taming-the-steamroller-how-to-communicate-compassionately-with-non-native-english-speakers-d95d8d1845a0&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Molly Clare Wilson on tips on how native English speakers can simplify their communication so it is easier for non-native speakers to understand them. Provides guidelines for situations involving &amp;lsquo;speaking and presenting&amp;rsquo;, &amp;lsquo;meetings&amp;rsquo;, written form &amp;lsquo;email, text, chat&amp;rsquo; and about correction each others English.&lt;/p&gt;

&lt;p&gt;Tags: molly-wilson, english, communication, native, non-native, guideline&lt;/p&gt;

&lt;h2 id=&#34;blue-no-yellow&#34;&gt;Blue. No! Yellow!&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.cleancoder.com/uncle-bob/2016/05/21/BlueNoYellow.html&#34; target=&#34;_blank&#34;&gt;this interview&lt;/a&gt; with Robert C. Martin on the productivity increases that different languages provide to the programmer. He says that no language can provide an effect as big as binary to assembler and that we&amp;rsquo;re currently searching the Holy Grail.&lt;/p&gt;

&lt;p&gt;Tags: robert-martin, uncle-bob, language, comparison, assembler, binary, clojure&lt;/p&gt;

&lt;h2 id=&#34;it-s-time-development-teams-chose-their-own-working-environments&#34;&gt;It&amp;rsquo;s Time Development Teams Chose Their Own Working Environments&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://codemanship.co.uk/parlezuml/blog/?postid=1383&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Jason Gorman on how takes the decision of working environments and why having other options are financially available. How developers should be in charge of their own working environments.&lt;/p&gt;

&lt;p&gt;Tags: office, working-environment, jason-gorman&lt;/p&gt;

&lt;h2 id=&#34;building-my-1-200-hackintosh&#34;&gt;Building My $1,200 Hackintosh&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/swlh/building-my-1-200-hackintosh-49a1a186241e&#34; target=&#34;_blank&#34;&gt;this guide&lt;/a&gt; on how to build a powerful hackintosh. By Mike Rundle&lt;/p&gt;

&lt;p&gt;Tags: mike-rundle, hackintosh, macintosh, mac, computer&lt;/p&gt;

&lt;h2 id=&#34;the-practical-guide-to-becoming-a-professional-web-developer&#34;&gt;The Practical Guide to Becoming a Professional Web Developer&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.freecodecamp.com/the-practical-guide-to-becoming-a-professional-web-developer-2f255bc25c90&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Bill Sourour on how to become a web developer. Explains all kind of resources, from learning javascript, deciding on being a frontend of backend developer, which language to choose, how to find a job, getting experience.&lt;/p&gt;

&lt;p&gt;Tags: bill-sourour, guide, career, beginner, developer, web, professional-career&lt;/p&gt;

&lt;h2 id=&#34;why-hiring-is-so-hard-in-tech&#34;&gt;Why Hiring is So Hard in Tech&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/javascript-scene/why-hiring-is-so-hard-in-tech-c462c3230017&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Eric Elliot on how to tackle job interviews, both from the side of the employer and the employee.&lt;/p&gt;

&lt;p&gt;Tags: eric-elliot, job-interview, employee, employer, cv, career, professional-career&lt;/p&gt;

&lt;h2 id=&#34;learn-node-js-with-brigadier-fluffykins-part-ii-events-eventemitter-and-the-event-loop&#34;&gt;Learn Node.js with Brigadier Fluffykins Part II: Events, EventEmitter and the Event Loop&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.freecodecamp.com/learn-node-js-with-brigadier-fluffykins-part-ii-events-eventemitter-the-event-loop-6d4c139694fb&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Masha Diminsky on the architecture of javascript and nodejs. Explains the event-driven architecture, the events and the event loop.&lt;/p&gt;

&lt;p&gt;Tags: masha-diminsky, bus, nodejs, javascript, bus, event-loop, event&lt;/p&gt;

&lt;h2 id=&#34;you-in-6-seconds-how-to-write-a-résumé-that-employers-will-actually-read&#34;&gt;You in 6 seconds: how to write a résumé that employers will actually read&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.freecodecamp.com/you-in-6-seconds-how-to-write-a-r%C3%A9sum%C3%A9-that-employers-will-actually-read-fd7757740802&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; that suggests how to customize your cv for maximum engagement from interviewers / head hunters and to make the most of the 6 seconds they (allegedly) spend looking at your cv. Also explains some techniques for preparing the interview, about the cover letter, etc.&lt;/p&gt;

&lt;p&gt;Tags: quincy-larson, cv, resume, career, professional-career, ats&lt;/p&gt;

&lt;h2 id=&#34;starbucks-does-not-use-two-phase-commit&#34;&gt;Starbucks Does Not Use Two-Phase Commit&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.enterpriseintegrationpatterns.com/ramblings/18_starbucks.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Gregor Hohpe explaining how Starbucks is modeled in terms of asynchronous interactions and the actions for exception handling: write-off, retry, compensating action.&lt;/p&gt;

&lt;p&gt;Also mentions Conversation pattern and Correlation ID.&lt;/p&gt;

&lt;p&gt;Tags: gregor-hohpe, conversation-pattern, correlation-id, analogy, asynchronous, exception-handling, write-off, retry, compensating-action&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Self-Study in June 2016</title>
      <link>https://alvarogarcia7.github.io/blog/2016/06/01/self-study/</link>
      <pubDate>Wed, 01 Jun 2016 21:47:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2016/06/01/self-study/</guid>
      <description>

&lt;h2 id=&#34;diversitymediocrityillusion&#34;&gt;DiversityMediocrityIllusion&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by &lt;a href=&#34;http://martinfowler.com/bliki/DiversityMediocrityIllusion.html&#34; target=&#34;_blank&#34;&gt;Martin Fowler&lt;/a&gt; (on his bliki) about the diversity in conferences and the profession. How it is our job to incentive a positive feedback cycle that brings more diverse people into the workforce.&lt;/p&gt;

&lt;p&gt;Explains how they do it in ThoughtWorks and how they have changed in the last decade.&lt;/p&gt;

&lt;p&gt;Tags: martin-fowler, diversity, gender, workforce, conference, profession, bliki&lt;/p&gt;

&lt;h2 id=&#34;what-do-cryptic-github-comments-mean&#34;&gt;What do cryptic Github comments mean?&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.freecodecamp.com/what-do-cryptic-github-comments-mean-9c1912bcc0a4&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Alex Beregszaszi on the abbreviations used in Github comments and pull requests.&lt;/p&gt;

&lt;p&gt;Tags: github, pull-request, alex-beregszaszi, abbreviation&lt;/p&gt;

&lt;h2 id=&#34;6-erreurs-à-éviter-en-tant-que-développeur-freelance&#34;&gt;6 erreurs à éviter en tant que développeur freelance&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@adrienjoly/enseignements-apr%C3%A8s-1-an-d-erreurs-en-tant-que-d%C3%A9veloppeur-freelance-916f855efd9b&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; (in French) by Adrien Joly on the mistakes freelancers shouldn&amp;rsquo;t do when working with clients.&lt;/p&gt;

&lt;p&gt;Tags: adrien-joly, freelance, list, mistake, french&lt;/p&gt;

&lt;h2 id=&#34;agile-methodology-s-promise-seems-to-fall-short-in-the-face-of-reality&#34;&gt;Agile Methodology’s Promise Seems To Fall Short in the Face of Reality&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@pagalvin/agile-methodology-s-promise-seems-to-fall-short-in-the-face-of-reality-b16d3e775dbe&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; on an experience by Paul Galvin on some failing agile implementations.&lt;/p&gt;

&lt;p&gt;Tags: paul-galvin, agile, reality, agility, team-management&lt;/p&gt;

&lt;h2 id=&#34;how-sharing-other-people-s-feelings-can-make-you-sick&#34;&gt;How sharing other people’s feelings can make you sick&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://www.newscientist.com/article/mg23030732-900-how-sharing-other-peoples-feelings-can-make-you-sick/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Emma Young on how being empathic to others can make you sick on their own illness. How illness can be socially transmitted, by loved ones or even by strangers.&lt;/p&gt;

&lt;p&gt;How algorithms (that display news) can affect your own well-being and how this is reduced by using compassion instead of empathy.&lt;/p&gt;

&lt;p&gt;Borders on the difference of empathy vs compassion.&lt;/p&gt;

&lt;p&gt;Tags: emma-young, empathy, compassion, feeling, team-management, vent-free-zone, sickness, illness&lt;/p&gt;

&lt;h2 id=&#34;aws-lambda-for-beginners&#34;&gt;AWS Lambda for Beginners&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://dzone.com/articles/aws-lambda-for-beginners&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Mashooq Badar on an introduction to AWS Lambdas, where the basics are covered until getting a Lambda service in production. Using Python or Java.&lt;/p&gt;

&lt;p&gt;Tags: mashooq-badar, serverless, aws, aws-lambda, lambda, python, java, devops, serverless-architecture&lt;/p&gt;

&lt;h2 id=&#34;advanced-logging-with-the-javascript-console&#34;&gt;Advanced Logging with the JavaScript Console&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched &lt;a href=&#34;https://egghead.io/series/js-console-for-power-users&#34; target=&#34;_blank&#34;&gt;this course&lt;/a&gt; by Mykola Bilokonsky at egghead.io.&lt;/p&gt;

&lt;p&gt;In it, he covers the following methods on the console:&lt;/p&gt;
console.log
console.warn
console.error
console.info
console.debug

&lt;p&gt;The amount of parameters does not matter, it will put a space in between. printing an object will print its values&lt;/p&gt;

&lt;p&gt;console.log with the C&amp;rsquo;s printf syntax, as long as the first parameter is a string&lt;/p&gt;
  %o for an object
  %c for CSS
console.group / groupCollapsed / groupEnd

&lt;p&gt;Tags: mykola-bilokonsky, logging, javascript, console, egghead, course&lt;/p&gt;

&lt;h2 id=&#34;after-work-is-what-determines-your-future-spend-one-hour-per-day-doing-these-5-things-and-your-life-will-change-forever&#34;&gt;After work, is what determines your future! Spend one hour per day doing these 5 things and your life will change forever!&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://www.linkedin.com/pulse/after-work-what-determines-your-future-spend-one-hour-sundaram&#34; target=&#34;_blank&#34;&gt;this post&lt;/a&gt; by Kalyana Sundaram on the activities we do at night, after a day&amp;rsquo;s work and how they influence our learning.&lt;/p&gt;

&lt;p&gt;Tags: kalyana-sundaram, after-work, career, career-management, learning, lifelong-learning&lt;/p&gt;

&lt;h2 id=&#34;expert-resumé-driven-development&#34;&gt;Expert Resumé Driven Development&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://dev.to/tra/expert-resum-driven-development&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Tariq Ali, where he explains the Resume-Driven Development, as a subset of the Principal-Agent Problem:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The Principal (management) hires an Agent (a developer) to build a program and
allow the Agent to choose the tech stack. But the Agent&amp;rsquo;s interest (making his resumé
more impressive) can be orthogonal to the Principal&amp;rsquo;s interest (producing a great
product by using the &amp;ldquo;right tool&amp;rdquo; for the job). If the Principal allows the Agent to
do as he wish, then the Agent will do as he wishes, thereby leading to the Agent to
prosper and the Principal to suffer.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;References the &lt;a href=&#34;http://www.gartner.com/technology/research/methodologies/hype-cycle.jsp&#34; target=&#34;_blank&#34;&gt;Gartner Hype Cycle&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tags: tariq-ali, resume-driven-development, hype, cycle, hype-cycle, career, professional-career&lt;/p&gt;

&lt;h2 id=&#34;resume-driven-development&#34;&gt;Resume Driven Development&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://radar.oreilly.com/2014/10/resume-driven-development.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by  Mike Loukides about the problem of finding a technical person based on CVs and the &lt;a href=&#34;https://en.wikipedia.org/wiki/Law_of_the_instrument&#34; target=&#34;_blank&#34;&gt;Law of the instrument&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;[&amp;hellip;] the inability of a technical team to specify what they really want
 (a developer with good programming taste and instincts), and
 instead hiring someone who has a particular skill or credential [&amp;hellip;]&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tags: law-instrument, mike-loukides, cv, career, resume-driven-development&lt;/p&gt;

&lt;h2 id=&#34;why-britain-banned-mobile-apps&#34;&gt;Why Britain banned mobile apps&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://govinsider.asia/smart-gov/why-britain-banned-mobile-apps/&#34; target=&#34;_blank&#34;&gt;this interview&lt;/a&gt; with Ben Terrett, former design chief at the UK Government Digital Services (GDS), that explains why they prefer webapps rather than native (mobile) apps: it&amp;rsquo;s a matter of cost, having to maintain and update so many mobile versions, versus a single one for the webapp.&lt;/p&gt;

&lt;p&gt;Also talks about user research and productagile teams inside the GDS.&lt;/p&gt;

&lt;p&gt;The interview is written by Joshua Chambers.&lt;/p&gt;

&lt;p&gt;Tags: joshua-chambers, ben-terrett, gds, webapp, mobile-app, native-app, product-team, agile, government, uk&lt;/p&gt;

&lt;h2 id=&#34;most-tech-interviews-suck-the-only-4-questions-that-matter&#34;&gt;Most Tech Interviews Suck — The Only 4 Questions That Matter&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/lightspeed-venture-partners/most-tech-interviews-suck-the-only-4-questions-that-matter-1a71181ef4d4&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; on why the majority of technical interviews could be improved, asking four questions instead of following other practices. By Aaron Batalion&lt;/p&gt;

&lt;p&gt;Tags: aaron-batalion, tech-interview, hiring, team&lt;/p&gt;

&lt;h2 id=&#34;why-socrates-uk-is-not-just-a-conference-for-software-craftsmen&#34;&gt;Why Socrates UK is not just a conference for software craftsmen&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://codurance.com/2016/06/07/why-socrates-uk-is-not-just-a-conference-for-software-craftsmen/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by  Giulia Mantuano on the SoCraTes UK 2016 conference, where she gave a talk on the importance of design in our environment, where we craft beautiful interfaces in our programs.&lt;/p&gt;

&lt;p&gt;Tags: socrates, socrates-uk, socrates-uk-2016, giulia-mantuano, design&lt;/p&gt;

&lt;h2 id=&#34;360-million-reasons-to-destroy-all-passwords&#34;&gt;360 million reasons to destroy all passwords&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.freecodecamp.com/360-million-reasons-to-destroy-all-passwords-9a100b2b5001&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Quincy Larson about the insecurity of passwords, both managed by vaults (like LastPass) or remembered ones. They all are susceptible to being discovered, leaked or shared to other sites / accounts.&lt;/p&gt;

&lt;p&gt;The author suggests to use passwordless login, which sends a link to your email account, which allows you to log in to the application&lt;/p&gt;

&lt;p&gt;Tags: passwordless, lastpass, vault, password-vault, quincy-larson, hack, leak, password&lt;/p&gt;

&lt;h2 id=&#34;a-brutally-honest-rejection-letter-by-an-hr&#34;&gt;A Brutally Honest Rejection Letter by an HR&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/the-coffeelicious/a-brutally-honest-rejection-letter-by-an-hr-493164bc5205&#34; target=&#34;_blank&#34;&gt;this parody letter&lt;/a&gt; by Nish Rao, on the real reasons so HR uses these templates for rejecting candidates&lt;/p&gt;

&lt;p&gt;Tags: nish-rao, parody, rejection-letter, hr, human-resources&lt;/p&gt;

&lt;h2 id=&#34;passwords-are-obsolete&#34;&gt;Passwords are Obsolete&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@ninjudd/passwords-are-obsolete-9ed56d483eb&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Justin Balthrop on how to set up a passwordless system and how is that related to the Heartbleed bug.&lt;/p&gt;

&lt;p&gt;Tags: passwordless, justin-balthrop, heartbleed, password&lt;/p&gt;

&lt;h2 id=&#34;server-side-swift-vs-the-other-guys-2-speed&#34;&gt;Server Side Swift vs. The Other Guys — 2: Speed&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@qutheory/server-side-swift-vs-the-other-guys-2-speed-ca65b2f79505&#34; target=&#34;_blank&#34;&gt;this comparison&lt;/a&gt; of languages and frameworks (Vapor (Swift), Ruby on Rails (Ruby), Laravel (PHP), Lumen (PHP), Express (JavaScript), Django (Python), Flask (Python), Spring (Java), Nancy (C#), Go (Pure Go, no framework)) and to benchmark Plaintext, JSON, Random SQLite Fetch.&lt;/p&gt;

&lt;p&gt;Tags: comparison, qutheory, speed, swift&lt;/p&gt;

&lt;h2 id=&#34;compilers-as-assistants&#34;&gt;Compilers as Assistants&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://elm-lang.org/blog/compilers-as-assistants&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Evan Czaplicki on seeing the compiler as an assistant to your work, instead of an adversary. Of how the compiler should give the most useful errors and warnings.&lt;/p&gt;

&lt;p&gt;He also explains what features have been removed from the Elm language in 0.16.&lt;/p&gt;

&lt;p&gt;Tags: compiler, assistant, adversary, enemy, elm, elm-compiler, evan-czaplicki&lt;/p&gt;

&lt;h2 id=&#34;craftsmanship-design-and-code&#34;&gt;Craftsmanship, design, and code&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.freecodecamp.com/craftsmanship-design-and-code-6d93eba3e7fe&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Jonathan Z. White about the relation between design and code and what craftsmanship is about.&lt;/p&gt;

&lt;p&gt;Suggests learning more about the counterpart (design vs code), to better understand the activity of creating software as a whole. For developers, suggests a few activities to improve (e.g., read better code, write unit tests, analyze code). Cites that the only way of measuring progress is comparing where you are today compared to some time ago.&lt;/p&gt;

&lt;p&gt;Tags: craftsmanship, jonathan-white, design, code, improving&lt;/p&gt;

&lt;h2 id=&#34;the-programmer-s-oath&#34;&gt;The Programmer&amp;rsquo;s Oath&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.cleancoder.com/uncle-bob/2015/11/18/TheProgrammersOath.html&#34; target=&#34;_blank&#34;&gt;this oath&lt;/a&gt; by Robert C Martin.&lt;/p&gt;

&lt;p&gt;Tags: oath, programmer, craft, manifesto, robert-martin, uncle-bob&lt;/p&gt;

&lt;h2 id=&#34;intel-x86s-hide-another-cpu-that-can-take-over-your-machine-you-can-t-audit-it&#34;&gt;Intel x86s hide another CPU that can take over your machine (you can&amp;rsquo;t audit it)&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://boingboing.net/2016/06/15/intel-x86-processors-ship-with.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Damien Zammit on the Intel Management Engine (ME), a hardware system that is embedded in the newer Intel chipsets. Its function is to provide low-level management services. ME (like Active Management Technology [AMT] in the past), provides great services, but has access to any memory location and to the TCP/IP stack, without any control from the operating system.&lt;/p&gt;

&lt;p&gt;The firmware is currently checked before booting, but it is highly-valuable as a security risk, as it has full access to the physical hardware.&lt;/p&gt;

&lt;p&gt;Tags: security, damien-zammit, intel-management-engine, active-management-technology, me, amt, tcp-ip, backdoor&lt;/p&gt;

&lt;h2 id=&#34;programming-doesn-t-require-talent-or-even-passion&#34;&gt;Programming Doesn’t Require Talent or Even Passion&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@WordcorpGlobal/programming-doesnt-require-talent-or-even-passion-11422270e1e4&#34; target=&#34;_blank&#34;&gt;this list&lt;/a&gt; of examples of why programming doesn&amp;rsquo;t require talent or passion, by Tony You&lt;/p&gt;

&lt;p&gt;Tags: talent, passion, list, programming, tony-you&lt;/p&gt;

&lt;h2 id=&#34;getting-from-to&#34;&gt;Getting from ⭐️⭐️ to ⭐️⭐️⭐️⭐️⭐️&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://m.signalvnoise.com/getting-from-%EF%B8%8F-%EF%B8%8F-to-%EF%B8%8F-%EF%B8%8F-%EF%B8%8F-%EF%B8%8F-%EF%B8%8F-c65cc3bb7cb1&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; on how Basecamp increased their ratings at the App Store: notify the user about new features and, in that modal, ask them to review the app or dismiss. By Dylan Ginsburg&lt;/p&gt;

&lt;p&gt;Tags: review, user-engagement, rating, basecamp, dylan-ginsburg, app-store, app&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Self-Study in September 2015</title>
      <link>https://alvarogarcia7.github.io/blog/2015/09/01/self-study-in-september-2015/</link>
      <pubDate>Tue, 01 Sep 2015 15:25:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/09/01/self-study-in-september-2015/</guid>
      <description>

&lt;h2 id=&#34;the-30-second-habit-with-a-lifelong-impact&#34;&gt;The 30 second habit with a lifelong impact&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://blog.growth.supply/the-30-second-habit-with-a-lifelong-impact-2c3f948ead98&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; list of patterns, by Robyn Scott, in which it is explained why to compress information in a few ideas, investing 30 seconds to condense the article.&lt;/p&gt;

&lt;p&gt;Tags: 30-second, habit, robyn-scott&lt;/p&gt;

&lt;h2 id=&#34;the-strengths-and-weaknesses-of-extreme-programming&#34;&gt;The Strengths and Weaknesses of Extreme Programming&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched &lt;a href=&#34;https://www.youtube.com/watch?v=LkhLZ7_KZ5w&#34; target=&#34;_blank&#34;&gt;this video&lt;/a&gt; explaining the strengths and weaknesses of extreme programming. By William Matheson&lt;/p&gt;

&lt;p&gt;Tags: extreme-programming, xp, william-matheson, video, strength, weakness&lt;/p&gt;

&lt;h2 id=&#34;poster-de-extreme-programming&#34;&gt;Poster de Extreme Programming&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched &lt;a href=&#34;https://www.youtube.com/watch?v=4nN6Gh79Yg8&#34; target=&#34;_blank&#34;&gt;this video&lt;/a&gt; introducing eXtreme Programming. By Martín Salías&lt;/p&gt;

&lt;p&gt;Tags: martin-salias, kleer, extreme-programming, xp&lt;/p&gt;

&lt;h2 id=&#34;good-tech-lead-bad-tech-lead&#34;&gt;Good Tech Lead, Bad Tech Lead&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://blog.growth.supply/good-tech-lead-bad-tech-lead-948b2b806d86&#34; target=&#34;_blank&#34;&gt;this comparison&lt;/a&gt; of good and bad traits in tech leads. By Jason Liszka.&lt;/p&gt;

&lt;p&gt;Explains the differences between good and bad tech leads, even though many of these qualities are shared by plain team members&lt;/p&gt;

&lt;p&gt;Tags: jason-liszka, tech-lead, comparison&lt;/p&gt;

&lt;h2 id=&#34;why-procrastinators-procrastinate&#34;&gt;Why Procrastinators Procrastinate&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://waitbutwhy.com/2013/10/why-procrastinators-procrastinate.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Tim Urban on procrastination: this article compares the procrastinator and the non-procrastinator brain with pictures, introducing the Rational part, the Instant Gratification Monkey and the Panic Monster. Shows some reasons why.&lt;/p&gt;

&lt;p&gt;There is more on part 2: &lt;a href=&#34;http://waitbutwhy.com/2013/11/how-to-beat-procrastination.html&#34; target=&#34;_blank&#34;&gt;How to beat procrastination&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tags: tim-urban, procrastination, rational-part, instant-gratification-monkey, panic-monster, brain, comparison&lt;/p&gt;

&lt;h2 id=&#34;algebraic-data-type&#34;&gt;Algebraic data type&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://en.wikipedia.org/wiki/Algebraic_data_type&#34; target=&#34;_blank&#34;&gt;this wikipedia page&lt;/a&gt;, that explains what this is, a few examples and the theory behind it.&lt;/p&gt;

&lt;p&gt;Tags: wikipedia, data-type, algebraic-data-type&lt;/p&gt;

&lt;h2 id=&#34;recursion&#34;&gt;Recursion&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://en.wikipedia.org/wiki/Recursion_(computer_science)&#34; target=&#34;_blank&#34;&gt;this wikipedia page&lt;/a&gt;, that explains the recursion basic concepts, such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;induction, coinduction&lt;/li&gt;
&lt;li&gt;recursion, corecursion&lt;/li&gt;
&lt;li&gt;implementation details in iterative vs recursive programs:

&lt;ul&gt;
&lt;li&gt;shortcutting recursion (i.e., arm-length&amp;rsquo;s recursion)&lt;/li&gt;
&lt;li&gt;wrapper function&lt;/li&gt;
&lt;li&gt;tail-call optimization, related to tail-recursive functions&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;recursion and its relation to data structures&lt;/li&gt;
&lt;li&gt;base case / recursive case and removing the need of the base one in corecursion or in non-strict languages&lt;/li&gt;
&lt;li&gt;types of recursion:

&lt;ul&gt;
&lt;li&gt;direct, indirect, mutual&lt;/li&gt;
&lt;li&gt;generative, structural&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tags: recursion, corecursion, induction, coinduction, tail-call-optimization, tail-recursion, direct-recursion, indirect-recursion, mutual-recursion, generative-recursion, structural-recursion, arm-length-recursion, iterative-function, recursive-function, base-case, recursive-case, wikipedia, data-structure&lt;/p&gt;

&lt;h2 id=&#34;anonymous-function&#34;&gt;Anonymous function&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://en.wikipedia.org/wiki/Anonymous_function&#34; target=&#34;_blank&#34;&gt;this wikipedia page&lt;/a&gt;, that describes what is a lambda expression or an anonymous function. How it can be used (e.g., currying, higher-order function, closures) and gives examples in many languages.&lt;/p&gt;

&lt;p&gt;Cites its invention (Church, 1936, lambda-calculus) and its first implementation (Lisp, 1958)&lt;/p&gt;

&lt;p&gt;Tags: alonzo-church, anonymous-function, lambda-expression, closure, lambda-calculus, lisp, currying, higher-order-function, wikipedia&lt;/p&gt;

&lt;h2 id=&#34;closure&#34;&gt;Closure&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://en.wikipedia.org/wiki/Closure_(computer_programming)&#34; target=&#34;_blank&#34;&gt;this wikipedia page&lt;/a&gt;, that explains the concept of closures and the usual confusion between closure and lambda. Also some applications.&lt;/p&gt;

&lt;p&gt;Discusses closures as a way of deferring execution and implementing object-oriented (OO) systems&lt;/p&gt;

&lt;p&gt;Tags: wikipedia, closure, object-orientation, lambda-expression&lt;/p&gt;

&lt;h2 id=&#34;zen-story-the-master-archer&#34;&gt;Zen Story: The Master Archer&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.thedailyzen.org/2015/06/23/zen-story-the-master-archer/&#34; target=&#34;_blank&#34;&gt;this story&lt;/a&gt; by Charlie Ambler about perfectionism and deep study, exemplified by the general that retires to study archery and the child who draws targets around the arrows.&lt;/p&gt;

&lt;p&gt;Tags: charlie-amber, master, student, zen, story&lt;/p&gt;

&lt;h2 id=&#34;loosely-coupled&#34;&gt;Loosely Coupled&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.bwhaley.com/loosely-coupled&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Ben Whaley about how to loosely couple services introducing a queue and the difference in patterns between push and pull communication.&lt;/p&gt;

&lt;p&gt;Tags: ben-whaley, push, pull, coupling, loose-coupling, service, queue, aws&lt;/p&gt;

&lt;h2 id=&#34;being-good-at-programming-competitions-correlates-negatively-with-being-good-on-the-job&#34;&gt;Being good at programming competitions correlates negatively with being good on the job&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched the small video and the discussion about programmers&amp;rsquo; talent at &lt;a href=&#34;http://www.catonmat.net/blog/programming-competitions-work-performance/&#34; target=&#34;_blank&#34;&gt;this page&lt;/a&gt;. By Peteris Krumins.&lt;/p&gt;

&lt;p&gt;The original video explains that being good at a programming contest correlates negatively with skill at a programming job, even if the company hires them.&lt;/p&gt;

&lt;p&gt;The discussion explains the analogy with height and the NBA and concludes that this parameter should be preponderated with less importance than others.&lt;/p&gt;

&lt;p&gt;Tags: google, peter-norvig, nba, analogy, programming-contest, programming-skill, peteris-krumins&lt;/p&gt;

&lt;h2 id=&#34;on-functors&#34;&gt;On Functors&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.catonmat.net/blog/on-functors/&#34; target=&#34;_blank&#34;&gt;this comparison&lt;/a&gt; by Peteris Krumins of what the functors are in different languages:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;C++: function objects&lt;/li&gt;
&lt;li&gt;Standard ML: generic implementation of interfaces. They allow to compose structures&lt;/li&gt;
&lt;li&gt;Haskell: structure containing zero or more objects that can be converted to another structure containing the other objects. It&amp;rsquo;s an homomorphism between two categories.&lt;/li&gt;
&lt;li&gt;Prolog: built-in predicate for self-inspection and the atom at the start of the structure&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tags: peteris-krumins, comparison, haskell, c-plus-plus, standard-ml, prolog, functor&lt;/p&gt;

&lt;h2 id=&#34;recursive-regular-expressions&#34;&gt;Recursive Regular Expressions&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.catonmat.net/blog/recursive-regular-expressions/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; on recursive regular expressions by Peteris Krumins.&lt;/p&gt;

&lt;p&gt;In it, he lightly describes how a regular expression relates to a &lt;a href=&#34;https://en.wikipedia.org/wiki/Context-free_grammar&#34; target=&#34;_blank&#34;&gt;Context-Free Grammar&lt;/a&gt; and the language support for Perl to include recursive regular expressions. Based on the examples (e.g., &lt;code&gt;0^n1^n&lt;/code&gt;), it really clicked to me that this could be expressed as a recursive function, with its base case and the recursive one. Also that it &amp;ldquo;depends on solutions to smaller instances of the same problem&amp;rdquo; (&lt;a href=&#34;https://en.wikipedia.org/wiki/Recursion_(computer_science)&#34; target=&#34;_blank&#34;&gt;wikipedia&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;Tags: peteris-krumins, regular-expression, recursion, recursive-regular-expression, perl, context-free-grammar, formal-language-theory&lt;/p&gt;

&lt;h2 id=&#34;in-functional-programming-what-is-a-functor&#34;&gt;In Functional Programming, what is a functor?&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://stackoverflow.com/questions/2030863/in-functional-programming-what-is-a-functor/2031421#2031421&#34; target=&#34;_blank&#34;&gt;this answer&lt;/a&gt;, by Norman Ramsey, on what is a functor.&lt;/p&gt;

&lt;p&gt;He explains in simple words what the concept is and how a type can belong to the class functor. Examples in haskell.&lt;/p&gt;

&lt;p&gt;Tags: norman-ramsey, functor, stack-overflow, haskell, type-class, class, map, fmap&lt;/p&gt;

&lt;h2 id=&#34;functors&#34;&gt;Functors&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.clojure.net/2013/01/19/Functors/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Jim Duey explaining functors in Clojure. He introduces a couple of notes of Haskell but all of the examples are in Clojure. Explains functors, a subset of it called applicatives, and the two libraries he has created.&lt;/p&gt;

&lt;p&gt;Tags: jim-duey, functor, clojure, haskell&lt;/p&gt;

&lt;h2 id=&#34;10-tips-for-proper-application-logging&#34;&gt;10 Tips for Proper Application Logging&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.javacodegeeks.com/2011/01/10-tips-proper-application-logging.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Tomasz Nurkiewicz about tips on logging:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;reduce side effects&lt;/li&gt;
&lt;li&gt;use categories and levels&lt;/li&gt;
&lt;li&gt;connection with external systems&lt;/li&gt;
&lt;li&gt;handling exceptions&lt;/li&gt;
&lt;li&gt;automatically / manually reading logging files&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tags: tomasz-nurkiewicz, logging, sl4j, log4j, tip&lt;/p&gt;

&lt;h2 id=&#34;what-is-duck-typing&#34;&gt;What is &amp;ldquo;duck typing&amp;rdquo;?&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://ericlippert.com/2014/01/02/what-is-duck-typing/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Eric Lippert about duck typing&lt;/p&gt;

&lt;p&gt;Tags: duck-typing, eric-lippert, type-system, c-sharp&lt;/p&gt;

&lt;h2 id=&#34;yagni&#34;&gt;Yagni&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve reread &lt;a href=&#34;http://martinfowler.com/bliki/Yagni.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Martin Fowler on the cost of developing features that are not needed&lt;/p&gt;

&lt;p&gt;Tags: martin-fowler, yagni, article, misunderstanding&lt;/p&gt;

&lt;h2 id=&#34;learn-haskell&#34;&gt;Learn Haskell&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve seen &lt;a href=&#34;https://www.youtube.com/watch?v=JJlI5FPTbgE&#34; target=&#34;_blank&#34;&gt;this video&lt;/a&gt; by Jordan Medlock on learning haskell, explaining the basics and how to use the REPL&lt;/p&gt;

&lt;p&gt;Tags: haskell, repl, jordan-medlock, beginner, video&lt;/p&gt;

&lt;h2 id=&#34;learn-haskell-1&#34;&gt;Learn Haskell&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve seen &lt;a href=&#34;https://www.youtube.com/watch?v=JJlI5FPTbgE&#34; target=&#34;_blank&#34;&gt;this video&lt;/a&gt; by Jordan Medlock on learning haskell, explaining the basics and how to use the REPL&lt;/p&gt;

&lt;p&gt;Tags: haskell, repl, jordan-medlock, beginner, video&lt;/p&gt;

&lt;h2 id=&#34;tmux-the-terminal-multiplexer&#34;&gt;TMUX - The Terminal Multiplexer&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read these two parts: (&lt;a href=&#34;http://blog.hawkhost.com/2010/06/28/tmux-the-terminal-multiplexer/&#34; target=&#34;_blank&#34;&gt;one&lt;/a&gt;, &lt;a href=&#34;http://blog.hawkhost.com/2010/07/02/tmux-%E2%80%93-the-terminal-multiplexer-part-2&#34; target=&#34;_blank&#34;&gt;two&lt;/a&gt;) of an introduction guide to &lt;code&gt;tmux&lt;/code&gt; (the unix terminal multiplexer) by Cody from Hawk Host.&lt;/p&gt;

&lt;p&gt;In it, he explains the basics of tmux and the main differences with &lt;code&gt;screen&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Tags: cody, hawk-host, tmux, how-to&lt;/p&gt;

&lt;h2 id=&#34;thermodynamics-and-garbage-collection&#34;&gt;Thermodynamics and Garbage Collection&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.pipeline.com/~hbaker1/ThermoGC.html&#34; target=&#34;_blank&#34;&gt;this paper&lt;/a&gt; by Henry G. Baker that explains the analogy of the garbage collection (&amp;ldquo;a freezer&amp;rdquo;) and thermodynamics, where the state mutator (th program, also an oven) modifies the garbage heap and introduces / extracts entropy into the system.&lt;/p&gt;

&lt;p&gt;Comparison between entropy and lack of information, using the theories from Shannon, Maxwell-Boltzmann. There&amp;rsquo;s a reference to the knapsack problem and to simulated annealing.&lt;/p&gt;

&lt;p&gt;There&amp;rsquo;s also a gentle introduction to thermodynamics in layman terms: heat, temperature, microstates, macrostates, reversability, etc.&lt;/p&gt;

&lt;p&gt;In this paper it is also reflected (in macro vs micro states) that the sum all parts is simpler than the single ones (i.e., Information Hiding)&lt;/p&gt;

&lt;p&gt;Tags: henry-baker, thermodynamics, microstate, macrostate, analogy, simulated-annealing, garbage-collection, shannon, information, maxwell-boltzmann, freezer, oven, entropy&lt;/p&gt;

&lt;h2 id=&#34;how-we-ended-up-with-microservices&#34;&gt;How we ended up with microservices&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://philcalcado.com/2015/09/08/how_we_ended_up_with_microservices.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt;, by Phil Calçado, where he talks about his stay at SoundCloud:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the value stream map: from X days to Y&lt;/li&gt;
&lt;li&gt;reorganizing teams into service teams&lt;/li&gt;
&lt;li&gt;conway&amp;rsquo;s law and teams being responsible for support. Also, being given full authority&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tags: phil-calcado, soundcloud, microservice, team-split, value-stream-mapping, conversion, reorganization&lt;/p&gt;

&lt;h2 id=&#34;lisp-is-still-a-secret-weapon&#34;&gt;Lisp is still a secret weapon&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://kep.io/is-lisp-still-a-secret-weapon/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Judd Keppel where he explains it is a good idea that Clojure / ClojureScript continues to be a secret, not known among developers. Cites the article &amp;lsquo;Beating the averages&amp;rsquo; by Paul Graham and the amount of available packages in npm, maven central, etc&lt;/p&gt;

&lt;p&gt;Tags: paul-graham, judd-keppel, clojure, clojurescript, weapon, developer&lt;/p&gt;

&lt;h2 id=&#34;perceptron&#34;&gt;Perceptron&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://en.wikipedia.org/wiki/Perceptron&#34; target=&#34;_blank&#34;&gt;this wikipedia&lt;/a&gt; article that explains the single-layer and multi-layer perceptron. First designed to be a machine (hardware), but later an algorithm for supervised machine learning. Worked by Minsky &amp;amp; Papert and invented by Frank Rosenblatt in 1958.&lt;/p&gt;

&lt;p&gt;Tags: peceptron, artificial-intelligence, machine-learning, frank-rosenblatt, 1958, marvin-minsky, seymour-papert&lt;/p&gt;

&lt;h2 id=&#34;is-c-a-strongly-typed-or-a-weakly-typed-language&#34;&gt;Is C# a strongly typed or a weakly typed language?&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://ericlippert.com/2012/10/15/is-c-a-strongly-typed-or-a-weakly-typed-language/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt;, in the form of a dialogue between Eric Lippert and himself about the C# language and its type system.&lt;/p&gt;

&lt;p&gt;Tags: type-system, c-sharp, eric-lippert, dialogue, strongly-typed, weakly-typed, language&lt;/p&gt;

&lt;h2 id=&#34;diseño-por-contratos-construyendo-software-confiable&#34;&gt;Diseño por contratos: construyendo software confiable&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.revista.unam.mx/vol.4/num5/art11/sep_art11.pdf&#34; target=&#34;_blank&#34;&gt;this paper&lt;/a&gt; that explains design by contract, based on the Hoare triplet, pre-post condition, method and class invariant. With examples in Eiffel, Java about a package sender company. Also explains pre/post with inheritance. By Gerardo Rossel and Andrea Manna. In Spanish.&lt;/p&gt;

&lt;p&gt;Tags: gerardo-rossel, andrea-manna, design-by-contract, unam-mx, eiffel, java, precondition, postcondition, trust, quality, hoare-triplet, method-invariant, class-invariant&lt;/p&gt;

&lt;h2 id=&#34;the-inevitable-return-of-cobol&#34;&gt;The Inevitable Return of COBOL&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.hackerrank.com/the-inevitable-return-of-cobol/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; that explains the current state of COBOL in programming and systems. Written by Ritika Trikha&lt;/p&gt;

&lt;p&gt;Tags: ritika-trikha, cobol, programming-language, retirement, median-age&lt;/p&gt;

&lt;h2 id=&#34;the-risky-eclipse-of-statisticians&#34;&gt;The Risky Eclipse of Statisticians&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.hackerrank.com/the-risky-eclipse-of-statisticians/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; where Ritika Trikha explains the current situation regarding Big Data and the statiscian jobs. How Big Data is in demand but the latter are not and what effects this might have.&lt;/p&gt;

&lt;p&gt;Tags: ritika-trikha, bootcamp, programming, hiring, big-data, analysis, statistics&lt;/p&gt;

&lt;h2 id=&#34;give-it-five-minutes&#34;&gt;Give it five minutes&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://signalvnoise.com/posts/3124-give-it-five-minutes&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Jason Fried where he explains why we should give ideas time to sink in and marinate, before dismissing them. Ideas are so fragile that it is better to let them live for a while before dismissing them. This also applies for thoughts (other people&amp;rsquo;s or your own).&lt;/p&gt;

&lt;p&gt;Tags: jason-fried, idea, think, startup, blue-hat, thinking-hat,  six-thinking-hats, red-hat&lt;/p&gt;

&lt;h2 id=&#34;reading-clojure-stacktraces&#34;&gt;Reading Clojure Stacktraces&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.jayfields.com/2012/06/reading-clojure-stacktraces.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Jay Fields on reading clojure stacktraces. Very similar to &amp;ldquo;Clojure Stack Traces for the Uninitiated&amp;rdquo;&lt;/p&gt;

&lt;p&gt;Tags: jay-fields, clojure, stacktrace&lt;/p&gt;

&lt;h2 id=&#34;clojure-stack-traces-for-the-uninitiated&#34;&gt;Clojure Stack Traces for the Uninitiated&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://blog.8thlight.com/connor-mendenhall/2014/09/12/clojure-stacktraces.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; on how to interpret clojure stacktraces. Written by Connor Mendenhall&lt;/p&gt;

&lt;p&gt;Tags: connor-mendenhall, clojure, stacktrace&lt;/p&gt;

&lt;h2 id=&#34;javascript-type-inference&#34;&gt;JavaScript type inference&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve found (and played) with &lt;a href=&#34;http://www.ccs.neu.edu/home/dimvar/jstypes.html&#34; target=&#34;_blank&#34;&gt;this JavaScript type inference engine&lt;/a&gt;. Written in Javascript (and available online). Written by Dimitrios Vardoulakis.&lt;/p&gt;

&lt;p&gt;Tags: javascript-type-inference, type-inference, type-inference-algorithm, dimitrios-vardoulakis, cfa2&lt;/p&gt;

&lt;h2 id=&#34;alternatives-to-boolean-parameters&#34;&gt;Alternatives to boolean parameters&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://blog.8thlight.com/dariusz-pasciak/2015/05/28/alternatives-to-boolean-parameters.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; explaining alternatives to sending a boolean parameter to decide on the contents of the function. Written by Dariusz Pasciak&lt;/p&gt;

&lt;p&gt;As I heard some time ago, if a function receives a boolean to decide on what to do, it will for sure have more than one responsibility: one for the false value and one for the true value.&lt;/p&gt;

&lt;p&gt;Tags: dariusz-pasciak, boolean, srp, boolean-parameter&lt;/p&gt;

&lt;h2 id=&#34;why-are-web-uploads-so-painful&#34;&gt;Why Are Web Uploads So Painful?&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.codinghorror.com/why-are-web-uploads-so-painful/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; on web uploads being painful. By Jeff Atwood. The screenshots feel old (2007) and some of the problems have already been solved.&lt;/p&gt;

&lt;p&gt;Tags: jeff-atwood, article, upload, browser&lt;/p&gt;

&lt;h2 id=&#34;can-your-team-pass-the-elevator-test&#34;&gt;Can Your Team Pass The Elevator Test?&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.codinghorror.com/can-your-team-pass-the-elevator-test/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; on the elevator test by Jeff Atwood.&lt;/p&gt;

&lt;p&gt;Tags: jeff-atwood, article, elevator-test, assumption, microsoft-bob, vision, product, feature&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>