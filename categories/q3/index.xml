<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>The long way through Software Craftsmanship</title>
    <link>https://alvarogarcia7.github.io/categories/q3/index.xml</link>
    <description>Recent content on The long way through Software Craftsmanship</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="https://alvarogarcia7.github.io/categories/q3/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Books read in 2017Q3</title>
      <link>https://alvarogarcia7.github.io/blog/2017/09/30/books-read-2017q3/</link>
      <pubDate>Sat, 30 Sep 2017 21:00:00 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2017/09/30/books-read-2017q3/</guid>
      <description>&lt;p&gt;Read this quarter:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the senior software developer; Copeland, with the &lt;a href=&#34;https://twitter.com/@deaprendices&#34; target=&#34;_blank&#34;&gt;aprendices reading club&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Scandal in Bohemia, a; Doyle: a short novel by Sir Arthur Conan Doyle, mentioning Irene Adler and the king of Bohemia&lt;/li&gt;
&lt;li&gt;Getting things done, &amp;hellip;; Allen (+): A book on productivity, where Allen explains his method of GTD and how to apply it. Explains what has worked and not worked for him in his many years of consulting and coaching clients.&lt;/li&gt;
&lt;li&gt;Nature of Software Development, the; Jeffries: Jefrries explains what he sees as &amp;lsquo;the Natural way&amp;rsquo; of software development: agile-based, good technical practices-based, to produce software in an iterative incremental way, with a sustainable pace and not much technical debt.&lt;/li&gt;
&lt;li&gt;Clean Coder: A Code of Conduct for Professional Programmers, the; Martin: a set of principles, values, and practices for the professional programmer (as compared to the 9-5 amateur programmer).&lt;/li&gt;
&lt;li&gt;Team Geek; Fitzpatrick, Collins-Sussman; own-it&lt;/li&gt;
&lt;li&gt;Aprendo Yoga; Van Lysebeth; non-technical, own-it&lt;/li&gt;
&lt;li&gt;ML for the working programmer, 2nd edition [5th chapter only]; Paulson; own-it
Note: re+read means I&amp;rsquo;m re-reading this book. The (+) stands for one-or-more times, as in the regexes.&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- copy-paste the books.md here --&gt;

&lt;p&gt;backlog (partially sorted):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;unsorted V&lt;/li&gt;
&lt;li&gt;The Machine That Changed the World: The Story of Lean Production&lt;/li&gt;
&lt;li&gt;Haskell Programming&lt;/li&gt;
&lt;li&gt;Software Architecture in Practice&lt;/li&gt;
&lt;li&gt;The five disfunctions of a team: a leadership fable; Lencioni&lt;/li&gt;
&lt;li&gt;Phoenix project, the ; Kim, Behr, Spafford&lt;/li&gt;
&lt;li&gt;lucha por la desigualdad, la; Pontón; non-technical&lt;/li&gt;
&lt;li&gt;psicología del dinero, la; Hammond; non-technical&lt;/li&gt;
&lt;li&gt;Invirtiendo a largo plazo; García Paramés; non-technical&lt;/li&gt;
&lt;li&gt;Well-Grounded Java Developer, the; own-it&lt;/li&gt;
&lt;li&gt;Quién domina el mundo; Chomsky; non-technical&lt;/li&gt;
&lt;li&gt;Learn You a Haskell for Great Good!; own-it&lt;/li&gt;
&lt;li&gt;camino al 18J, el; Payne; non-technical&lt;/li&gt;
&lt;li&gt;Cartas desde la revolución bolchevique; Sadoul; non-technical&lt;/li&gt;
&lt;li&gt;Java Performance: The Definitive Guide&lt;/li&gt;
&lt;li&gt;Why programmers work at night&lt;/li&gt;
&lt;li&gt;Shogun: The Life of Tokugawa Ieyasu; Sadler; non-technical&lt;/li&gt;
&lt;li&gt;Scrum and XP from the trenches, 2nd edition;&lt;/li&gt;
&lt;li&gt;Els jueus i Catalunya; Villatoro; non-technical&lt;/li&gt;
&lt;li&gt;El problema de los tres cuerpos; Liu; non-technical&lt;/li&gt;
&lt;li&gt;Amazon Web Services in Action; own-it&lt;/li&gt;
&lt;li&gt;Clojure Programming - Practical Lisp for the Java World&lt;/li&gt;
&lt;li&gt;Mature optimization&lt;/li&gt;
&lt;li&gt;XUnit Test Patterns&lt;/li&gt;
&lt;li&gt;Let Over Lambda&lt;/li&gt;
&lt;li&gt;The Haskell Road to Logic, Math and Programming&lt;/li&gt;
&lt;li&gt;Types and Programming Languages&lt;/li&gt;
&lt;li&gt;Fundamentals of Object-oriented Design in UML&lt;/li&gt;
&lt;li&gt;Clojure for the brave and true&lt;/li&gt;
&lt;li&gt;How to Solve It: A New Aspect of Mathematical Method&lt;/li&gt;
&lt;li&gt;Conceptual Mathematics: A First Introduction to Categories&lt;/li&gt;
&lt;li&gt;Understanding Computation: From Simple Machines to Impossible Programs&lt;/li&gt;
&lt;li&gt;Programming in Haskell&lt;/li&gt;
&lt;li&gt;Programming Languages: Application and Interpretation&lt;/li&gt;
&lt;li&gt;Doing Math with Python&lt;/li&gt;
&lt;li&gt;Perfect Software: And Other Illusions about Testing&lt;/li&gt;
&lt;li&gt;Computability and Complexity - From a Programming Perspective&lt;/li&gt;
&lt;li&gt;Thinking Forth: a language and philosophy for solving problems&lt;/li&gt;
&lt;li&gt;Concepts, Techniques, and Models of Computer Programming&lt;/li&gt;
&lt;li&gt;Bridging the Communication Gap; Adzic&lt;/li&gt;
&lt;li&gt;Specification by Example; Adzic&lt;/li&gt;
&lt;li&gt;Cucumber book, the; Adzic&lt;/li&gt;
&lt;li&gt;Software Architecture for Developers; Brown&lt;/li&gt;
&lt;li&gt;Object Design: Roles, Responsibilities, and Collaborations&lt;/li&gt;
&lt;li&gt;RESTful Web APIs&lt;/li&gt;
&lt;li&gt;RESTful Web Services Cookbook&lt;/li&gt;
&lt;li&gt;Building Maintainable Software&lt;/li&gt;
&lt;li&gt;Serverless - Patterns of Modern Application Design Using Microservices (Amazon Web Services Edition)&lt;/li&gt;
&lt;li&gt;A Pattern Language; Alexander&lt;/li&gt;
&lt;li&gt;Types and Programming Languages, TAPL; Pierce; own-it&lt;/li&gt;
&lt;li&gt;Speed Reading Book: Read More, Learn More, Achieve More, the; Buzan&lt;/li&gt;
&lt;li&gt;Cómo crear mapas mentales (Crecimiento personal); Buzan&lt;/li&gt;
&lt;li&gt;First things first; Covey&lt;/li&gt;
&lt;li&gt;What&amp;rsquo;s best next; Perman&lt;/li&gt;
&lt;li&gt;problems of philosophy, the; Russell&lt;/li&gt;
&lt;li&gt;Requiem for the American dream; Chomsky&lt;/li&gt;
&lt;li&gt;sun also rises, the; Hemingway&lt;/li&gt;
&lt;li&gt;travels, the; Polo; non-technical&lt;/li&gt;
&lt;li&gt;Homo Deus: A Brief History of Tomorrow; Harari; non-technical&lt;/li&gt;
&lt;li&gt;Books by Aristotle; non-technical&lt;/li&gt;
&lt;li&gt;Books by Plato&lt;/li&gt;
&lt;li&gt;Books by Descartes&lt;/li&gt;
&lt;li&gt;The idea of culture; Eagleton&lt;/li&gt;
&lt;li&gt;Hereditary Intelligence; Galton; non-technical&lt;/li&gt;
&lt;li&gt;Lean Software Development: An Agile Toolkit; Poppendieck&lt;/li&gt;
&lt;li&gt;Peopleware*; De Marco&lt;/li&gt;
&lt;li&gt;Chaos Monkeys: Obscene Fortune and Random Failure; Garcia Martinez&lt;/li&gt;
&lt;li&gt;Implementing Lean Software Development: From Concept to Cash; Poppendieck&lt;/li&gt;
&lt;li&gt;Joel on Software; Spolsky&lt;/li&gt;
&lt;li&gt;Death March; Yourdon&lt;/li&gt;
&lt;li&gt;Psychology of Computer Programming, The; Weinberg&lt;/li&gt;
&lt;li&gt;Introduction to General Systems Thinking; Weinberg&lt;/li&gt;
&lt;li&gt;Lao Tzu : Tao Te Ching : A Book About the Way and the Power of the Way; Tzu, Le Guin; non-technical&lt;/li&gt;
&lt;li&gt;Gay Science, the; Nietzsche; non-technical&lt;/li&gt;
&lt;li&gt;Being Geek; Lopp&lt;/li&gt;
&lt;li&gt;Finance for Freelancers; Retallick&lt;/li&gt;
&lt;li&gt;Object-oriented software engineering: a use case driven approach; Jacobson&lt;/li&gt;
&lt;li&gt;Patterns of Enterprise Application Architecture; Fowler; own-it&lt;/li&gt;
&lt;li&gt;Thinking fast and slow; Kahneman&lt;/li&gt;
&lt;li&gt;Emotional intelligence; Goleman&lt;/li&gt;
&lt;li&gt;Ética a Nicómaco; Aristotle; own-it, non-technical&lt;/li&gt;
&lt;li&gt;Romeo y Julieta; Shakespeare; non-technical&lt;/li&gt;
&lt;li&gt;Computer Systems: A Programmer’s Perspective; Bryant, O&amp;rsquo;Hallaron&lt;/li&gt;
&lt;li&gt;My Journey to Lhasa: The Classic Story of the Only Western Woman Who Succeeded in Entering the Forbidden City; David-Néel; non-technical&lt;/li&gt;
&lt;li&gt;Cathedral and the bazaar, the ; Raymond&lt;/li&gt;
&lt;li&gt;Coding dojo handbook, the; Bache; own-it&lt;/li&gt;
&lt;li&gt;Making software; Oram and Wilson; own-it&lt;/li&gt;
&lt;li&gt;Code complete; McConnell&lt;/li&gt;
&lt;li&gt;Soft skills; Sonmez; own-it&lt;/li&gt;
&lt;li&gt;DSLs in action; Ghosh; own-it&lt;/li&gt;
&lt;li&gt;purely functional data structures; Okasaki; own-it&lt;/li&gt;
&lt;li&gt;Working effectively with unit tests; Fields (+); own-it&lt;/li&gt;
&lt;li&gt;First Nazi, the; Ludendorff&lt;/li&gt;
&lt;li&gt;Greatest story ever told &amp;hellip; so far; Krauss; non-technical&lt;/li&gt;
&lt;li&gt;Master algorithm, the; Domingos; non-technical&lt;/li&gt;
&lt;li&gt;Invention of Science, the; Wootton; non-technical&lt;/li&gt;
&lt;li&gt;Tesla: Inventor of the electrical age; Bernard Carlson; non-technical&lt;/li&gt;
&lt;li&gt;Psychology in minutes; Weeks; non-technical&lt;/li&gt;
&lt;li&gt;Alan Turing: The Enigma; Hodges; non-technical&lt;/li&gt;
&lt;li&gt;How to think more about sex; de Botton; non-technical&lt;/li&gt;
&lt;li&gt;Piccolo manuale di persuasione; Taylor; non-technical&lt;/li&gt;
&lt;li&gt;arte de la guerra, el; Sun Tzu; non-technical&lt;/li&gt;
&lt;li&gt;Piccolo manuale di leadership Confuciana; Adair; non-technical&lt;/li&gt;
&lt;li&gt;How to Stop Worrying and Start Living; Carnegie; non-technical&lt;/li&gt;
&lt;li&gt;Uomo - Guida allo stile; Roetzel; non-technical&lt;/li&gt;
&lt;li&gt;Unwritten Laws of Engineering: Revised and Updated Edition; King&lt;/li&gt;
&lt;li&gt;Test-Driven JavaScript Development (Developer&amp;rsquo;s Library); Johansen&lt;/li&gt;
&lt;li&gt;Test Driven Development: By Example; Beck&lt;/li&gt;
&lt;li&gt;Arquitectura Java JPA Domain Driven Design; Alvárez, Peláez&lt;/li&gt;
&lt;li&gt;End of loyalty, the; Wartzman; non-technical&lt;/li&gt;
&lt;li&gt;Basic Economics; Sowell; non-technical&lt;/li&gt;
&lt;li&gt;Introduction to Economic Analysis; McAfee; non-technical&lt;/li&gt;
&lt;li&gt;Patterns of Software; Gabriel&lt;/li&gt;
&lt;li&gt;Coders at work; Seibel&lt;/li&gt;
&lt;li&gt;Clean architecture; Martin&lt;/li&gt;
&lt;li&gt;How to Be a Stoic: Using Ancient Philosophy to Live a Modern Life; Pigliucci; non-technical&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;unfinished (unsorted):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Release It! - Design and Deploy Production-Ready Software; own-it&lt;/li&gt;
&lt;li&gt;Refactoring (+); Fowler; own-it&lt;/li&gt;
&lt;li&gt;The Leprechauns of Software Engineering; Bossavit (+); own-it&lt;/li&gt;
&lt;li&gt;Domain-Driven Design: Tackling Complexity in the Heart of Software; Vernon (+); own-it&lt;/li&gt;
&lt;li&gt;Pragmatic Thinking and Learning: Refactor Your Wetware; own-it&lt;/li&gt;
&lt;li&gt;Functional Programming Patterns in Scala and Clojure; own-it&lt;/li&gt;
&lt;li&gt;Readings in Database Systems, 5th Edition; own-it&lt;/li&gt;
&lt;li&gt;Structure and Interpretation of Computer Programs (SICP); Abelson, Sussmann, Sussmann; own-it&lt;/li&gt;
&lt;li&gt;La Sociedad De Coste Marginal Cero (Estado y Sociedad); Rifkin; non-technical&lt;/li&gt;
&lt;li&gt;Odisea; Homero; non-technical&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;wip (3):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Working Effectively with Legacy Code (+); Feathers; own-it&lt;/li&gt;
&lt;li&gt;Effective Java; Bloch; own-it&lt;/li&gt;
&lt;li&gt;Nonviolent communication; Rosenberg; own-it, non-technical&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;done:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Senior software developer, the; Copeland; own-it&lt;/li&gt;
&lt;li&gt;Scandal in Bohemia, a; Doyle; own-it&lt;/li&gt;
&lt;li&gt;Getting things done, &amp;hellip;; Allen (+); own-it&lt;/li&gt;
&lt;li&gt;Nature of Software Development, the; Jeffries; own-it&lt;/li&gt;
&lt;li&gt;Team Geek; Fitzpatrick, Collins-Sussman; own-it&lt;/li&gt;
&lt;li&gt;Aprendo Yoga; Van Lysebeth; non-technical, own-it&lt;/li&gt;
&lt;li&gt;Clean Coder: A Code of Conduct for Professional Programmers, the; Martin; own-it&lt;/li&gt;
&lt;li&gt;ML for the working programmer, 2nd edition [5th chapter only]; Paulson; own-it&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;lists:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.goodreads.com/review/list/246177-rob?shelf=non-fiction-for-humans&#34; target=&#34;_blank&#34;&gt;https://www.goodreads.com/review/list/246177-rob?shelf=non-fiction-for-humans&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.goodreads.com/list/show/451.Best_Philosophy_Book&#34; target=&#34;_blank&#34;&gt;https://www.goodreads.com/list/show/451.Best_Philosophy_Book&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.goodreads.com/list/show/8379.Software_Craftsmanship&#34; target=&#34;_blank&#34;&gt;https://www.goodreads.com/list/show/8379.Software_Craftsmanship&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.ycombinator.com/ycs-2017-summer-reading-list/&#34; target=&#34;_blank&#34;&gt;https://blog.ycombinator.com/ycs-2017-summer-reading-list/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.goodreads.com/list/show/107321.TI2011_Course&#34; target=&#34;_blank&#34;&gt;https://www.goodreads.com/list/show/107321.TI2011_Course&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.goodreads.com/list/show/12287.Fog_Creek_Software_Management_Training_Program&#34; target=&#34;_blank&#34;&gt;https://www.goodreads.com/list/show/12287.Fog_Creek_Software_Management_Training_Program&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Books read in 2016Q3</title>
      <link>https://alvarogarcia7.github.io/blog/2016/09/30/books-read-in-2016q3/</link>
      <pubDate>Fri, 30 Sep 2016 12:49:50 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2016/09/30/books-read-in-2016q3/</guid>
      <description>&lt;p&gt;Books I&amp;rsquo;ve read this quarter&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://shop.oreilly.com/product/9780596004859.do&#34; target=&#34;_blank&#34;&gt;Extreme Programming Pocket Guide&lt;/a&gt; by Chromatic&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://leanpub.com/teamleader&#34; target=&#34;_blank&#34;&gt;Notes to a Software Team Leader (1st Edition)&lt;/a&gt;, by Roy Osherove&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Non-technical:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.thezeromarginalcostsociety.com/pages/The-Book.cfm&#34; target=&#34;_blank&#34;&gt;The Zero Marginal Cost Society: The Internet of Things, the Collaborative Commons, and the Eclipse of Capitalism&lt;/a&gt;, by Jeremy Rifkin&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Snow_Crash&#34; target=&#34;_blank&#34;&gt;Snow Crash&lt;/a&gt;, by Neal Stephenson&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.casadellibro.com/libro-la-guerra-no-tiene-rostro-de-mujer/9788499925752/2630904&#34; target=&#34;_blank&#34;&gt;La guerra no tiene rostro de mujer&lt;/a&gt;, by Svetlana Aleksiévich&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Books started, not yet finished (WIP):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://leanpub.com/talking-with-tech-leads&#34; target=&#34;_blank&#34;&gt;Talking with Tech Leads: From Novices to Practitioners&lt;/a&gt; by Patrick Kua&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Books I want to finish. Usually come from another quarter:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://leanpub.com/nightowls&#34; target=&#34;_blank&#34;&gt;Why programmers work at night&lt;/a&gt; by Swizec Teller&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.redbook.io/&#34; target=&#34;_blank&#34;&gt;Readings in Database Systems, 5th Edition&lt;/a&gt; by Peter Bailis, Joseph M. Hellerstein, Michael Stonebraker, editors&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.amazon.com/exec/obidos/ASIN/0321125215&#34; target=&#34;_blank&#34;&gt;Domain-Driven Design: Tackling Complexity in the Heart of Software&lt;/a&gt; by Eric Evans, again.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.manning.com/books/amazon-web-services-in-action&#34; target=&#34;_blank&#34;&gt;Amazon Web Services in Action&lt;/a&gt; by Michael Wittig and Andreas Wittig&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://pragprog.com/book/mnee/release-it&#34; target=&#34;_blank&#34;&gt;Release It! - Design and Deploy Production-Ready Software&lt;/a&gt;, by Michael T. Nygard, with the &amp;lsquo;&lt;a href=&#34;https://twitter.com/@deaprendices&#34; target=&#34;_blank&#34;&gt;@deAprendices&lt;/a&gt;&amp;rsquo;s reading club&amp;rsquo;. Blog posts under the tag &lt;a href=&#34;https://alvarogarcia7.github.io/categories/release-it
/&#34;&gt;release-it&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://shop.oreilly.com/product/0636920013754.do&#34; target=&#34;_blank&#34;&gt;Clojure Programming - Practical Lisp for the Java World&lt;/a&gt; by Chas Emerick, Brian Carper, Christophe Grand&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Books that have entered the queue:&lt;/p&gt;

&lt;!--

repository for WIP books:

  * [The Well-Grounded Java Developer](http://www.manning.com/evans/) by Benjamin J. Evans and Martijn Verburg
  * [Learn You a Haskell for Great Good!](http://learnyouahaskell.com/) by Miran Lipovača
  * [Working Effectively with Legacy Code](http://www.amazon.co.uk/Working-Effectively-Legacy-Robert-Martin/dp/0131177052) by Michael Feathers, again. Blog posts under the tag [wewlc](/categories/wewlc
/)
  * [Haskell Programming](http://haskellbook.com/), By Chris Allen and Julie Moronuki. This book is still in progress and I&#39;m reviewing it
  * [Pragmatic Thinking and Learning: Refactor Your Wetware](https://pragprog.com/book/ahptl/pragmatic-thinking-and-learning) by Andy Hunt  
  
  Books I want to finish:

  * [Refactoring](http://martinfowler.com/books/refactoring.html) by Martin Fowler, with Kent Beck, John Brant, William Opdyke, and Don Roberts
  * [Java Performance: The Definitive Guide](http://shop.oreilly.com/product/0636920028499.do) by Scott Oaks
  * [Scrum and XP from the trenches](http://www.infoq.com/minibooks/scrum-xp-from-the-trenches) by Henrik Kniberg
  * [The Leprechauns of Software Engineering](https://leanpub.com/leprechauns) by Laurent Bossavit, again. [Gift](https://twitter.com/alvarobiz/status/611799849911103488)  
  * [Functional Programming Patterns in Scala and Clojure](https://pragprog.com/book/mbfpp/functional-programming-patterns-in-scala-and-clojure) by Michael Bevilacqua-Linn

Books in the queue:

  * [Mature optimization](http://carlos.bueno.org/optimization/mature-optimization.pdf), by Carlos Bueno
  * [XUnit Test Patterns](http://xunitpatterns.com/) by Gerard Meszaros
  * [Let Over Lambda](http://letoverlambda.com/) by Doug Hoyte
  * [The Haskell Road to Logic, Math and Programming](http://fldit-www.cs.uni-dortmund.de/~peter/PS07/HR.pdf) by Kees Doets and Jan van Eijck
  * [Types and Programming Languages](http://www.cis.upenn.edu/~bcpierce/tapl/) by Benjamin C. Pierce
  * [Fundamentals of Object-oriented Design in UML](http://www.amazon.co.uk/dp/020169946X/ref=pe_385721_37038051_TE_3p_dp_1) by Meilir Page-Jones
  * [Clojure for the brave and true](http://www.braveclojure.com/#toc)
  * [How to Solve It: A New Aspect of Mathematical Method](http://press.princeton.edu/titles/669.html) by George Pólya
  * [Conceptual Mathematics: A First Introduction to Categories](http://www.amazon.com/Conceptual-Mathematics-First-Introduction-Categories/dp/052171916X) by Lawvere and Schanuel
  * [Understanding Computation: From Simple Machines to Impossible Programs](http://computationbook.com/) by Tom Stuart
  * [Programming in Haskell](http://www.cambridge.org/wm-ecommerce-web/academic/landingPage/PIHMOOC) by Graham Hutton
  * [Programming Languages: Application and Interpretation](http://cs.brown.edu/~sk/Publications/Books/ProgLangs/2007-04-26/) by Shriram Krishnamurthi
  * [Doing Math with Python](https://www.nostarch.com/doingmathwithpython) by Amit Saha. [Gift from the PyConEs 2015](https://twitter.com/alvarobiz/status/668927802159288322)
  * [Perfect Software: And Other Illusions about Testing](http://www.geraldmweinberg.com/Site/Perfect_Software.html) by Gerald M. Weinberg  
  * [Computability and Complexity - From a Programming Perspective](https://mitpress.mit.edu/books/computability-and-complexity) by Neil Deaton Jones
  * [Thinking Forth: a language and philosophy for solving problems](http://thinking-forth.sourceforge.net/) by Leo Brodie
  * [Concepts, Techniques, and Models of Computer Programming](https://mitpress.mit.edu/index.php?q=books/concepts-techniques-and-models-computer-programming) by Peter Van Roy and Seif Haridi
  * [Bridging the Communication Gap](http://books.gojko.net/bridging-the-communication-gap/) by Gojko Adzic
  * [Specification by Example](http://books.gojko.net/specification-by-example/) by Gojko Adzic
  * [The Cucumber book](https://pragprog.com/book/hwcuc/the-cucumber-book) by Matt Wynne and Aslak Hellesøy
  * [Software Architecture for Developers](https://leanpub.com/software-architecture-for-developers) by Simon Brown
  * [Object Design: Roles, Responsibilities, and Collaborations ](http://www.amazon.com/Object-Design-Roles-Responsibilities-Collaborations/dp/0201379430) by Rebecca Wirfs-Brock and Alan McKean
  * [RESTful Web APIs](http://shop.oreilly.com/product/0636920028468.do) by Leonard Richardson, Mike Amundsen, Sam Ruby
  * [RESTful Web Services Cookbook](http://shop.oreilly.com/product/9780596801694.do) by Subbu Allamaraju
  * [Building Maintainable Software](https://www.sig.eu/en/building-maintainable-software) by Joost Visser
  * [Serverless - Patterns of Modern Application Design Using Microservices (Amazon Web Services Edition)](https://leanpub.com/serverless) by Obie Fernandez 

Learning paths that have entered the queue:

  * [Software Architecture Fundamentals](http://shop.oreilly.com/category/learning-path/software-architecture-fundamentals.do)
  * [HTML5 Fundamentals](http://shop.oreilly.com/category/learning-path/html5-fundamentals.do)
  * [Designing Web APIs](http://shop.oreilly.com/category/learning-path/designing-web-apis.do)
  * [Dive Deeper into PHP Programming](http://shop.oreilly.com/category/learning-path/dive-deeper-php-programming.do)
  * [Introduction to the Modern Front-End Web](http://shop.oreilly.com/category/learning-path/intro-modern-front-end-web.do)


--&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;The ending date of the quarter is the same as the publication date
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Books read in 2015Q3</title>
      <link>https://alvarogarcia7.github.io/blog/2015/09/30/books-read-in-2015q3/</link>
      <pubDate>Wed, 30 Sep 2015 12:49:50 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/09/30/books-read-in-2015q3/</guid>
      <description>&lt;p&gt;Books I&amp;rsquo;ve read this quarter&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.amazon.co.uk/Craftsman-Richard-Sennett/dp/0141022094&#34; target=&#34;_blank&#34;&gt;The Craftsman&lt;/a&gt; by Richard Sennett. Posts under the tag &lt;a href=&#34;https://alvarogarcia7.github.io/categories/the-craftsman
/&#34;&gt;the-craftsman&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.amazon.co.uk/Software-Craftsmanship-Imperative-McBreen-Aug-2001/dp/B00L6JZAT0&#34; target=&#34;_blank&#34;&gt;Software Craftsmanship: The New Imperative&lt;/a&gt; by Pete McBreen. Posts under the tag &lt;a href=&#34;https://alvarogarcia7.github.io/categories/software-craftsmanship-book
/&#34;&gt;software-craftsmanship-book&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://leanpub.com/lisphackers&#34; target=&#34;_blank&#34;&gt;Lisp Hackers&lt;/a&gt; by Vsevolod Dyomkin&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://pragprog.com/book/cfcar2/the-passionate-programmer&#34; target=&#34;_blank&#34;&gt;The Passionate Programmer: Creating a Remarkable Career in Software Development&lt;/a&gt; by Chad Fowler.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Books started, not yet finished (WIP):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://haskellbook.com/&#34; target=&#34;_blank&#34;&gt;Haskell Programming&lt;/a&gt;, By Chris Allen and Julie Moronuki. This book is still in progress and I&amp;rsquo;m reviewing it&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://pragprog.com/book/mbfpp/functional-programming-patterns-in-scala-and-clojure&#34; target=&#34;_blank&#34;&gt;Functional Programming Patterns in Scala and Clojure&lt;/a&gt; by Michael Bevilacqua-Linn&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://pragprog.com/book/ahptl/pragmatic-thinking-and-learning&#34; target=&#34;_blank&#34;&gt;Pragmatic Thinking and Learning: Refactor Your Wetware&lt;/a&gt; by Andy Hunt&lt;br /&gt;

&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Books I want to finish:&lt;/p&gt;

&lt;p&gt;Books that have entered the queue:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.braveclojure.com/#toc&#34; target=&#34;_blank&#34;&gt;Clojure for the brave and true&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://press.princeton.edu/titles/669.html&#34; target=&#34;_blank&#34;&gt;How to Solve It: A New Aspect of Mathematical Method&lt;/a&gt; by George Pólya&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.amazon.com/Conceptual-Mathematics-First-Introduction-Categories/dp/052171916X&#34; target=&#34;_blank&#34;&gt;Conceptual Mathematics: A First Introduction to Categories&lt;/a&gt; by Lawvere and Schanuel&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://computationbook.com/&#34; target=&#34;_blank&#34;&gt;Understanding Computation: From Simple Machines to Impossible Programs&lt;/a&gt; by Tom Stuart&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.cambridge.org/wm-ecommerce-web/academic/landingPage/PIHMOOC&#34; target=&#34;_blank&#34;&gt;Programming in Haskell&lt;/a&gt; by Graham Hutton&lt;/li&gt;
&lt;/ul&gt;

&lt;!--

repository for WIP books:

  * [The Well-Grounded Java Developer](http://www.manning.com/evans/) by Benjamin J. Evans and Martijn Verburg
  * [Learn You a Haskell for Great Good!](http://learnyouahaskell.com/) by Miran Lipovača
  * [Working Effectively with Legacy Code](http://www.amazon.co.uk/Working-Effectively-Legacy-Robert-Martin/dp/0131177052) by Michael Feathers, again. Blog posts under the tag [wewlc](/categories/wewlc
/)
  * [Practical Object-Oriented Design in Ruby, An Agile Primer (POODR)](http://www.poodr.com/) by Sandi Metz, with the &#39;[@deAprendices][deaprendices]&#39;s reading club&#39;. Blog posts under the tag [poodr](/categories/poodr
/).
  
  Books I want to finish:

  * [Refactoring](http://martinfowler.com/books/refactoring.html) by Martin Fowler, with Kent Beck, John Brant, William Opdyke, and Don Roberts
  * [Java Performance: The Definitive Guide](http://shop.oreilly.com/product/0636920028499.do) by Scott Oaks
  * [Scrum and XP from the trenches](http://www.infoq.com/minibooks/scrum-xp-from-the-trenches) by Henrik Kniberg

Books that have entered the queue:

  * [Mature optimization](http://carlos.bueno.org/optimization/mature-optimization.pdf), by Carlos Bueno
  * [The Leprechauns of Software Engineering](https://leanpub.com/leprechauns) by Laurent Bossavit, again. [Gift](https://twitter.com/alvarobiz/status/611799849911103488)
  * [XUnit Test Patterns](http://xunitpatterns.com/) by Gerard Meszaros
  * [Why programmers work at night](https://leanpub.com/nightowls) by Swizec Teller
  * [Let Over Lambda](http://letoverlambda.com/) by Doug Hoyte
  * [The Haskell Road to Logic, Math and Programming](http://fldit-www.cs.uni-dortmund.de/~peter/PS07/HR.pdf) by Kees Doets and Jan van Eijck
  * [Structure and Interpretation of Computer Programs](http://mitpress.mit.edu/sicp/) by Abelson, Sussman, and Sussman
  * [Types and Programming Languages](http://www.cis.upenn.edu/~bcpierce/tapl/) by Benjamin C. Pierce
  * [Fundamentals of Object-oriented Design in UML](http://www.amazon.co.uk/dp/020169946X/ref=pe_385721_37038051_TE_3p_dp_1) by Meilir Page-Jones

--&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;The ending date of the quarter is the same as the publication date
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>