<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ciberado on The long way through Software Craftsmanship</title>
    <link>https://alvarogarcia7.github.io/categories/ciberado/</link>
    <description>Recent content in ciberado on The long way through Software Craftsmanship</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 28 Jul 2016 19:28:19 +0000</lastBuildDate><atom:link href="https://alvarogarcia7.github.io/categories/ciberado/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>AWS Kinesis Zombieland</title>
      <link>https://alvarogarcia7.github.io/blog/2016/07/28/aws-kinesis-zombieland/</link>
      <pubDate>Thu, 28 Jul 2016 19:28:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2016/07/28/aws-kinesis-zombieland/</guid>
      <description>I attended a workshop on AWS Kinesis, called AWS Kinesis Zombieland by Javi Moreno at capside.
Notes AWS Kinesis Zombieland
 muy importante escoger bien la clave de particionado (id de shard) KPL librería de kinesis que te permite hacer batching, timeout, &amp;hellip;  la otra se llama KCL. KCL permite mantener estado   cuando te pidan una app de big data, pregunta para qué lo quieren, lo mismo que con cualquier proyecto de software latitud = Y, longitud = x el canal se llama stream, la capacidad se llama shard  el shard sólo permite 5 lecturas por segundo, 2MB/s   usar el shard como buffer usar la clave de particionado como algoritmo de agregación cada vez que tienes una tabla en dynamodb, tienes que poner una alerta de throughput nota: lo que no puedes hacer es guardarlos todos y luego procesarlo.</description>
    </item>
    
  </channel>
</rss>
