<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>functional on The long way through Software Craftsmanship</title>
    <link>https://alvarogarcia7.github.io/categories/functional/</link>
    <description>Recent content in functional on The long way through Software Craftsmanship</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 01 Jun 2018 10:32:19 +0000</lastBuildDate><atom:link href="https://alvarogarcia7.github.io/categories/functional/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Self-Study in June 2018</title>
      <link>https://alvarogarcia7.github.io/blog/2018/06/01/self-study-june-2018/</link>
      <pubDate>Fri, 01 Jun 2018 10:32:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2018/06/01/self-study-june-2018/</guid>
      <description>Don&amp;rsquo;t look, don&amp;rsquo;t tell I&amp;rsquo;ve read this bonilista by David Bonilla on what strategies companies use to deal with security and defects.
Explains full disclosure, responsible disclosure and bug bounties.
Tags: david-bonilla, bonilista, security, full-disclosure, responsible-disclosure, bug-bounty, reporting, hacker, cracker
Id: a1a6925a-7958-11e8-a87f-0242ac110002 Read: Tue, 26 Jun 2018 15:50:21 +0000
La vida de las ideas I&amp;rsquo;ve read this bonilista by David Bonilla about the value of the ideas and what differentiates a good idea from a good execution from a good outcome</description>
    </item>
    
    <item>
      <title>Functional Implementation Patterns</title>
      <link>https://alvarogarcia7.github.io/blog/2015/11/02/functional-implementation-patterns/</link>
      <pubDate>Mon, 02 Nov 2015 21:26:13 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/11/02/functional-implementation-patterns/</guid>
      <description>Collection of HOFs Select Attribute class Array def select_attribute attr self.map { |unit| unit[attr] } end end usage:
[71] pry(main)&amp;gt; [ {:element =&amp;gt; 1, :even? =&amp;gt; false}, {:element =&amp;gt; 2, :even? =&amp;gt; true}, {:element =&amp;gt; 3, :even? =&amp;gt; false}] .select_attribute :even? =&amp;gt; [false, true, false] Collection of patterns Decorating a collection Introduction You want to materialize properties from a collection
Alternative names  Intermediary Functional decorator Collection Annotation (from Wallingford&amp;rsquo;s Roundabout, especially Interface procedure)  Example [62] pry(main)&amp;gt; [1,2,3] .</description>
    </item>
    
  </channel>
</rss>
