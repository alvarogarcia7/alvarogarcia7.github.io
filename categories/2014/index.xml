<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2014 on The long way through Software Craftsmanship</title>
    <link>https://alvarogarcia7.github.io/categories/2014/</link>
    <description>Recent content in 2014 on The long way through Software Craftsmanship</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 02 Aug 2015 21:45:19 +0000</lastBuildDate><atom:link href="https://alvarogarcia7.github.io/categories/2014/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Self-Study in August 2015</title>
      <link>https://alvarogarcia7.github.io/blog/2015/08/02/self-study-in-august-2015/</link>
      <pubDate>Sun, 02 Aug 2015 21:45:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/08/02/self-study-in-august-2015/</guid>
      <description>Humble Object I&amp;rsquo;ve read the Humble Object list of patterns, by Gerard Meszaros, including:
 humble dialog humble executable humble transaction controller humble container adapter  Tags: pattern, gerard-meszaros
How you know I&amp;rsquo;ve reread this small essay by Paul Graham on storing information in our heads, based on the context. On the importance of rereading, to add more contexts to the initial one.
Tags: paul-graham, reread, read
Protected Variation: The Importance of Being Closed I&amp;rsquo;ve read this article by Craig Larman in the magazine IEEE Software &amp;gt; Design.</description>
    </item>
    
    <item>
      <title>Talk: Software is eating the world</title>
      <link>https://alvarogarcia7.github.io/blog/2015/05/10/talk-software-is-eating-the-world/</link>
      <pubDate>Sun, 10 May 2015 21:00:52 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/05/10/talk-software-is-eating-the-world/</guid>
      <description>I&amp;rsquo;ve watched this talk by Erik Meijer
My notes   Agile!: The Good, the Hype and the Ugly
  The hacker way
 code always wins vs manager always wins source: http://www.wired.com/2012/02/zuck-letter/    we&amp;rsquo;re doing maths =&amp;gt; we&amp;rsquo;re building a proof
  reinforcement learning
 agent is the company    related to &amp;ldquo;build, measure, learn&amp;rdquo; by Eric Ries (the lean startup)
  Feedback systems  Open (no) feedback system, such as timed sprinklers Closed feedback system Output only system  Why everything is software  Examples of everything is software Software is eating the world Even hardware is modeled as software  Modeling as a Finite State Machine (FSM)  There&amp;rsquo;s memory in the feedback loop.</description>
    </item>
    
    <item>
      <title>Books read in 2014Q4</title>
      <link>https://alvarogarcia7.github.io/blog/2014/12/31/books-read-in-2014q4/</link>
      <pubDate>Wed, 31 Dec 2014 12:49:50 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2014/12/31/books-read-in-2014q4/</guid>
      <description>Books I&amp;rsquo;ve read this quarter Q4 on 2014, as inspired by Manuel, on this post:
 ATDD by Example: A Practical Guide to Acceptance Test-Driven Development by Markus Gärtner Head First Design Patterns by Eric Freeman, Elisabeth Robson, Bert Bates, Kathy Sierra Apprenticeship Patterns, Guidance for the Aspiring Software Craftsman by Dave Hoover, Adewale Oshineye Diseño ágil con TDD, by Carlos Blé Jurado; again The Mythical Man-Month, Anniversary Edition: Essays On Software Engineering by Frederick P.</description>
    </item>
    
  </channel>
</rss>
