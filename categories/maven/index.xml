<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>maven on The long way through Software Craftsmanship</title>
    <link>https://alvarogarcia7.github.io/categories/maven/</link>
    <description>Recent content in maven on The long way through Software Craftsmanship</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 05 Oct 2015 17:18:55 +0000</lastBuildDate><atom:link href="https://alvarogarcia7.github.io/categories/maven/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Tip: Differences in maven test execution</title>
      <link>https://alvarogarcia7.github.io/blog/2015/10/05/tip-differences-in-maven-test-execution/</link>
      <pubDate>Mon, 05 Oct 2015 17:18:55 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/10/05/tip-differences-in-maven-test-execution/</guid>
      <description>There are times when you only want to have the production code:
 downstream job after a successful build compiling in local after checkout from DVCS spiking (possibly the tests are broken) speeding up the process  For that, maven allows to skip the tests, selectively:
 -DskipTests compiles the tests, but skips running them -Dmaven.test.skip skips compiling the tests and does not run them. This can also be written as -Dmaven.</description>
    </item>
    
    <item>
      <title>Packing your own maven dependencies</title>
      <link>https://alvarogarcia7.github.io/blog/2015/07/30/packing-your-own-maven-dependencies/</link>
      <pubDate>Thu, 30 Jul 2015 23:21:18 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/07/30/packing-your-own-maven-dependencies/</guid>
      <description>Lately, I&amp;rsquo;ve found myself repeating always the same dependencies for my pet projects and katas. Usually, I prefer maven to hold my java dependencies, organized in a java project.
This is how most of them look like:
&amp;lt;project xmlns=&amp;#34;http://maven.apache.org/POM/4.0.0&amp;#34; xmlns:xsi=&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34; xsi:schemaLocation=&amp;#34;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&amp;#34;&amp;gt; &amp;lt;modelVersion&amp;gt;4.0.0&amp;lt;/modelVersion&amp;gt; &amp;lt;groupId&amp;gt;com.gmaur.legacycode&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;legacyutils&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;0.0.1-SNAPSHOT&amp;lt;/version&amp;gt; &amp;lt;dependencies&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.hamcrest&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;hamcrest-all&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;1.3&amp;lt;/version&amp;gt; &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;junit&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;junit&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;4.11&amp;lt;/version&amp;gt; &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.mockito&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;mockito-all&amp;lt;/artifactId&amp;gt; &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt; &amp;lt;version&amp;gt;2.0.2-beta&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;/dependencies&amp;gt; &amp;lt;build&amp;gt; &amp;lt;plugins&amp;gt; &amp;lt;plugin&amp;gt; &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;maven-surefire-plugin&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;2.</description>
    </item>
    
    <item>
      <title>Maven module Base for cucumber in java</title>
      <link>https://alvarogarcia7.github.io/blog/2015/03/10/maven-module-base-for-cucumber-in-java/</link>
      <pubDate>Tue, 10 Mar 2015 07:24:38 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/03/10/maven-module-base-for-cucumber-in-java/</guid>
      <description>I&amp;rsquo;ve built a small maven module, to be used directly with cucumber. You can fork the repository here
This is the setup I&amp;rsquo;ve proposed for the meetup &amp;ldquo;BDD Cucumber kata (gherkin + code)&amp;quot;. Will see if this code is successfully used by the ~40 participants in a couple of weeks
(Quote from the README.md):
This maven project has been possible due to Thomas Sundberg and this post
Should you want to, there&amp;rsquo;s a tweet to thank him the effort: [tweet intent here](https://twitter.</description>
    </item>
    
    <item>
      <title>Brown-bag session: maven</title>
      <link>https://alvarogarcia7.github.io/blog/2015/03/06/brown-bag-session-maven/</link>
      <pubDate>Fri, 06 Mar 2015 22:18:28 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/03/06/brown-bag-session-maven/</guid>
      <description>Yesterday we did a training about the maven tool. One of the team members explained to us some topics including:
 lifecycles profiles and how to create one  slowTests for integration tests (this client only) downloadJavadoc downloadSources   convention over configuration scopes of the dependencies (test, runtime, compile, provided) tricks about the tool:  order of the dependencies (especially junit, hamcrest)   plugins and how to build one destination folders  target, classes, test-classes, etc    Note: this post was created a posteriori, with the original date</description>
    </item>
    
  </channel>
</rss>
