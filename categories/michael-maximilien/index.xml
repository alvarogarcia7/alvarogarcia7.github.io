<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>michael-maximilien on The long way through Software Craftsmanship</title>
    <link>https://alvarogarcia7.github.io/categories/michael-maximilien/</link>
    <description>Recent content in michael-maximilien on The long way through Software Craftsmanship</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 12 May 2015 00:02:44 +0000</lastBuildDate><atom:link href="https://alvarogarcia7.github.io/categories/michael-maximilien/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Paper: TDD in industrial teams</title>
      <link>https://alvarogarcia7.github.io/blog/2015/05/12/paper-tdd-in-industrial-teams/</link>
      <pubDate>Tue, 12 May 2015 00:02:44 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/05/12/paper-tdd-in-industrial-teams/</guid>
      <description>I&amp;rsquo;ve read this paper by Nagappan, Maximilien, Bhat and Williams on the cost, advantages, pitfalls of doing TDD in industrial teams (private companies who create software).
My notes Abstract:
 little empirical evidence supports or refutes the utility of this practice in an industrial context
  they seem to be talking about inside-out tdd as in chapter 2 (page 291), they talk about small units and then integrating them in a bigger context  Benefits taken from chapter 2 (page 292)</description>
    </item>
    
  </channel>
</rss>
