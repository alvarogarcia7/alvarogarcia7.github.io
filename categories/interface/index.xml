<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>The long way through Software Craftsmanship</title>
    <link>https://alvarogarcia7.github.io/categories/interface/index.xml</link>
    <description>Recent content on The long way through Software Craftsmanship</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="https://alvarogarcia7.github.io/categories/interface/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Self-Study in July 2017</title>
      <link>https://alvarogarcia7.github.io/blog/2017/07/01/self-study-july-2017/</link>
      <pubDate>Sat, 01 Jul 2017 10:32:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2017/07/01/self-study-july-2017/</guid>
      <description>

&lt;h2 id=&#34;a-brief-history-of-the-uuid-https-segment-com-blog-a-brief-history-of-the-uuid&#34;&gt;&lt;a href=&#34;https://segment.com/blog/a-brief-history-of-the-uuid/&#34; target=&#34;_blank&#34;&gt;A Brief History of the UUID&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Rick Branson on the history of UUID.
Describes the history of uid, uuid, early computing (both networked and not networked) and their own implementation of a uuid library&lt;/p&gt;

&lt;p&gt;Tags: uuid, uid, flake, snowflake, ksuid, go, golang, rick-branson, library, implementation-history&lt;/p&gt;

&lt;h2 id=&#34;more-data-more-data-https-blog-cloudflare-com-more-data-more-data&#34;&gt;&lt;a href=&#34;https://blog.cloudflare.com/more-data-more-data/&#34; target=&#34;_blank&#34;&gt;More data, more data&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article about how cloudflare manages its logs. By Hunter Blanks&lt;/p&gt;

&lt;p&gt;Tags: log, cloudflare, comparison, what-worked, what-did-not-work, kafka, citusdb, sre, site-reliability-engineering, analytics, hunter-blanks&lt;/p&gt;

&lt;h2 id=&#34;help-your-team-stop-overcommitting-by-empowering-them-to-say-no-https-hbr-org-2017-06-help-your-team-stop-overcommitting-by-empowering-them-to-say-no&#34;&gt;&lt;a href=&#34;https://hbr.org/2017/06/help-your-team-stop-overcommitting-by-empowering-them-to-say-no&#34; target=&#34;_blank&#34;&gt;Help Your Team Stop Overcommitting by Empowering Them to Say No&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article that describes how important is to say no to some ideas or projects so you can say yes to others.
In other words, how prioritizing is important as time and energy (i.e., resources) are not infinite and must be allocated accordingly&lt;/p&gt;

&lt;p&gt;Tags: diana-kander, hbr, harvard-business-review, priority, energy, resources, time, pet-project, yes-people, no-people, yes-culture, no-culture&lt;/p&gt;

&lt;h2 id=&#34;not-even-wrong-ways-to-dismiss-technology-http-ben-evans-com-benedictevans-2017-5-24-not-even-wrong-ways-to-dismiss-technology&#34;&gt;&lt;a href=&#34;http://ben-evans.com/benedictevans/2017/5/24/not-even-wrong-ways-to-dismiss-technology&#34; target=&#34;_blank&#34;&gt;Not even wrong - ways to dismiss technology&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article about how technology can be seen as toys before it is developed to the point where it can be expanded and used for other purposes than the one expected / designed for. By Benedict Evans.&lt;/p&gt;

&lt;p&gt;Tags: benedict-evans, technology, prediction, usage, invention, philosophy, wolfgang-pauli&lt;/p&gt;

&lt;h2 id=&#34;do-we-have-a-better-option-here-https-softwaremill-com-do-we-have-better-option-here&#34;&gt;&lt;a href=&#34;https://softwaremill.com/do-we-have-better-option-here/&#34; target=&#34;_blank&#34;&gt;Do we have a better Option here?&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article comparing &lt;code&gt;Option&lt;/code&gt; and &lt;code&gt;Optional&lt;/code&gt; as types that can contain a value, but maybe not. By Michał Chmielarz&lt;/p&gt;

&lt;p&gt;Tags: michal-chmielarz, option, optional, vavr, javaslang, comparison&lt;/p&gt;

&lt;h2 id=&#34;is-the-keyboard-faster-than-the-mouse-http-danluu-com-keyboard-v-mouse&#34;&gt;&lt;a href=&#34;http://danluu.com/keyboard-v-mouse/&#34; target=&#34;_blank&#34;&gt;Is the keyboard faster than the mouse?&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Dan Luu comparing the use of the mouse and the use of the keyboard and their speeds.
He groups existing literature on the topic plus some experiments he has done himself.&lt;/p&gt;

&lt;p&gt;Mentions the amount of myths related to this, based on old and non-accurate research.&lt;/p&gt;

&lt;p&gt;Tags: dan-luu, keyboard, comparison, mouse, human-interaction-device, hid, interaction, user-experience, interface&lt;/p&gt;

&lt;h2 id=&#34;the-crypto-anarchist-manifesto-http-groups-csail-mit-edu-mac-classes-6-805-articles-crypto-cypherpunks-may-crypto-manifesto-html&#34;&gt;&lt;a href=&#34;http://groups.csail.mit.edu/mac/classes/6.805/articles/crypto/cypherpunks/may-crypto-manifesto.html&#34; target=&#34;_blank&#34;&gt;The Crypto Anarchist Manifesto&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Timothy C. May forecasting the development of a new market based on cryptography and secure communications.&lt;/p&gt;

&lt;p&gt;The same that barbed wire transformed property in the West, is the analogy he uses&lt;/p&gt;

&lt;p&gt;Tags: timothy-may, anarchy, encryption, market, forecast, crypto-anarchism, public-key-encryption, zero-knowledge-proof, cryptography&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Self-Study in February 2017</title>
      <link>https://alvarogarcia7.github.io/blog/2017/02/01/self-study-in-february-2017/</link>
      <pubDate>Wed, 01 Feb 2017 11:32:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2017/02/01/self-study-in-february-2017/</guid>
      <description>

&lt;h2 id=&#34;whatsapp-security-vulnerability&#34;&gt;WhatsApp Security Vulnerability&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://www.schneier.com/blog/archives/2017/01/whatsapp_securi.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Bruce Schneier on a security defect in whatsapp, where an &amp;lsquo;unconfirmed&amp;rsquo; message can be re-encrypted (with a new key) and resent. This is a vector for some attacks.&lt;/p&gt;

&lt;p&gt;Tags: bruce-schneier, security, whatsapp, encryption, attack-vector&lt;/p&gt;

&lt;h2 id=&#34;encrypted-email-service-once-used-by-edward-snowden-relaunches&#34;&gt;Encrypted email service once used by Edward Snowden relaunches&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://theintercept.com/2017/01/20/encrypted-email-service-once-used-by-edward-snowden-to-relaunch/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt;, by Kim Zetter, on Lavabit restablishing its service. Explains the company&amp;rsquo;s past and the new services they are offering&lt;/p&gt;

&lt;p&gt;Tags: lavabit, kim-zetter, privacy, encryption, email, mail&lt;/p&gt;

&lt;h2 id=&#34;what-happens-when-you-mix-java-with-a-1960-ibm-mainframe&#34;&gt;What Happens When You Mix Java with a 1960 IBM Mainframe&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://thenewstack.io/happens-use-java-1960-ibm-mainframe/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by David Cassel about the legacy infrastructure of hardware that the U.S. government agencies have. How old mainframes are still useful to web applications and how these mainframes can communicate with more modern systems, through APIs&lt;/p&gt;

&lt;p&gt;Tags: mainframe, david-cassel, marianne-bellotti, legacy-hardware, legacy-software, legacy-system, legacy, api&lt;/p&gt;

&lt;h2 id=&#34;systems-we-love-how-the-past-informs-our-present&#34;&gt;Systems We Love: How the Past Informs Our Present&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://thenewstack.io/systems-we-love/&#34; target=&#34;_blank&#34;&gt;this experience report&lt;/a&gt; by David Cassel about the conference &amp;ldquo;Systems we love&amp;rdquo;: a mix of papers we love and systems that happened at San Francisco in December 2016&lt;/p&gt;

&lt;p&gt;Tags: david-cassel, systems-we-love, papers-we-love, system, conference, experience-report, joyent&lt;/p&gt;

&lt;h2 id=&#34;the-agonizing-death-of-an-astronaut&#34;&gt;The agonizing death of an astronaut&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.javaslang.io/the-agonizing-death-of-an-astronaut/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Daniel Dietrich on why the implementation of the &lt;code&gt;Option&lt;/code&gt; in Javaslang seems to be broken but, in fact, follows the rules of the monads.&lt;/p&gt;

&lt;p&gt;Explains why &lt;code&gt;map&lt;/code&gt; should be used for non-changing contexts and &lt;code&gt;flatmap&lt;/code&gt; should be used for changing it.&lt;/p&gt;

&lt;p&gt;Tags: daniel-dietrich, monad, option, haskell, optional, maybe, scala, javaslang&lt;/p&gt;

&lt;h2 id=&#34;we-reverse-engineered-16k-apps-here-s-what-we-found&#34;&gt;We reverse engineered 16k apps, here’s what we found&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://hackernoon.com/we-reverse-engineered-16k-apps-heres-what-we-found-51bdf3b456bb&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Fallible team, in which they describe the analysis of apps. They discovered 2500 apps with key and secret on them.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;[&amp;hellip;] whenever you hardcode any API key/token in the app, think hard if you really need to hardcode this, understand the API usage and the read/write scope of the tokens before putting it in the apps.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tags: analysis, security, app, key, token, api, fallible&lt;/p&gt;

&lt;h2 id=&#34;oh-the-emails-you-ll-get&#34;&gt;Oh, the emails you’ll get&amp;hellip;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://www.joelonsoftware.com/2006/11/09/oh-the-emails-youll-get/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Joel Spolsky, in which he explains how some companies focus on some metrics for measuring performance, how difficult it is to measure performance.&lt;/p&gt;

&lt;p&gt;Tags: joel-spolsky, performance, management, consulting&lt;/p&gt;

&lt;h2 id=&#34;2002-07-15-measurement&#34;&gt;2002/07/15 - Measurement&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://www.joelonsoftware.com/2002/07/15/20020715/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Joel Spolsky where he explains how measuring performance is difficult, according to  Robert D. Austin in his book Measuring and Managing Performance in Organizations. He gives some examples of that, mainly about paying out bonuses for performance reasons.&lt;/p&gt;

&lt;p&gt;Tags: joel-spolsky, robert-austin, measuring-performance, managing-performance, book, knowledge-worker, bonus, pay, performance, organization&lt;/p&gt;

&lt;h2 id=&#34;the-purpose-of-life-is-not-happiness-it-s-usefulness&#34;&gt;The Purpose Of Life Is Not Happiness: It’s Usefulness&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://dariusforoux.com/happiness-usefulness/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Darius Foroux on what the purpose of life is about: making a difference (even if small) in what you leave behind.&lt;/p&gt;

&lt;p&gt;Tags: psychology, purpose-of-life, usefulness, happiness, darius-foroux&lt;/p&gt;

&lt;h2 id=&#34;the-future-of-user-interfaces&#34;&gt;The Future of User Interfaces&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://brandur.org/interfaces&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Brandur on how interfaces are becoming more and more bloated, slow and ridden with animations. All of that is targeted to the beginner user, rather than the proficient one. He suggests some ideas on finding inspiration from the terminal applications&lt;/p&gt;

&lt;p&gt;Tags: brandur, interface, interface-design, ux, ui&lt;/p&gt;

&lt;h2 id=&#34;my-increasing-frustration-with-clojure&#34;&gt;My Increasing Frustration With Clojure&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://ashtonkemerling.com/blog/2016/06/11/my-increasing-frustration-with-clojure/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Ashton Kemerling on the problems he has found working professionally with Clojure and some possible solutions.&lt;/p&gt;

&lt;p&gt;Tags: clojure, language, ashton-kemerling, functional-programming, problem, frustration&lt;/p&gt;

&lt;h2 id=&#34;java-without-if&#34;&gt;Java Without If&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://ashtonkemerling.com/blog/2017/01/26/java-without-if/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Ashton Kemerling on how he is using a library called &amp;lsquo;lambda&amp;rsquo;, which brings some of the functional programming features to Java.&lt;/p&gt;

&lt;p&gt;Tags: lambda, library, ashton-kemerling, functional-programming, java, palatable, john-napier&lt;/p&gt;

&lt;h2 id=&#34;top-ten-pull-request-review-mistakes&#34;&gt;Top ten pull request review mistakes&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://blog.scottnonnenberg.com/top-ten-pull-request-review-mistakes/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Scott Nonnenberg on the most common mistakes while doing a code review in the context of a pull request.&lt;/p&gt;

&lt;p&gt;Tags: scott-nonnenberg, pull-request, code-review, github, diff, listicle&lt;/p&gt;

&lt;h2 id=&#34;shutting-down-simplicity-itself&#34;&gt;Shutting down Simplicity Itself&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://daviddawson.me/blog/2017/02/04/simplicity-itself-shutdown.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by David Dawson on why he&amp;rsquo;s shutting down his consultancy company, Simplicity Itself, which was mainly focused on microservices.&lt;/p&gt;

&lt;p&gt;Tags: david-dawson, simplicity-itself, shut-down, company, consulting, post-mortem, postmortem&lt;/p&gt;

&lt;h2 id=&#34;turn-off-your-cellphone&#34;&gt;Turn Off Your Cellphone&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://brandur.org/fragments/turn-off-your-cellphone&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Brandur on how to get more done by unplugging the notifications&lt;/p&gt;

&lt;p&gt;Tags: brandur, time-management, interruption, phone, notification&lt;/p&gt;

&lt;h2 id=&#34;the-dark-standup&#34;&gt;The Dark Standup&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://18f.gsa.gov/2017/01/19/the-dark-standup/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Alan Brouilette on the steps they took to reduce the amount of hours worked. It started with a few extra questions during the daily standup:&lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;What didn’t you do today because you stopped working on time?&lt;/li&gt;
&lt;li&gt;What will the impact be on tomorrow because of it?&lt;/li&gt;
&lt;li&gt;How much more time would you have needed to get everything done today?&lt;/li&gt;
&lt;li&gt;What will you do with those hours tonight instead?&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;and what they realized after a two-week experiment:&lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;The costs of context switching are much higher than we realized.&lt;/li&gt;
&lt;li&gt;We were spending a lot of time doing things that were urgent but not important, or that didn’t need to have been urgent at all.&lt;/li&gt;
&lt;li&gt;We needed to be a lot more ruthless about saying “No.”&lt;/li&gt;
&lt;li&gt;Some Operations roles are legitimately shorthanded, some of us just needed to impose a little order.&lt;/li&gt;
&lt;li&gt;FOMO WIP (unnecessary work one takes on because one fears missing something) is a real problem, especially as regards to Slack and meetings.&lt;/li&gt;
&lt;li&gt;We worked better in the time we had to work, knowing it was finite.&lt;/li&gt;
&lt;li&gt;Work-life balance improves both work and life. People literally slept better when limiting after-hours exposure to Slack and email. [&amp;hellip;]&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tags: dark-standup, quote, limited-time, overtime, team-management, experiment, question, alan-brouilette&lt;/p&gt;

&lt;h2 id=&#34;what-it-means-to-be-a-remote-first-company&#34;&gt;What it Means to be a Remote-First Company&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.stackoverflow.blog/code-for-a-living/what-it-means-to-be-a-remote-first-company&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by  Alyssa Mazzina on what Stack Overflow does to keep its remote employees happy, how they are a remote-first company and small practicalities like tools, holiday gifts and stipends.&lt;/p&gt;

&lt;p&gt;Tags: alyssa-mazzina, team-management, remote, remote-work, stack-overflow, team&lt;/p&gt;

&lt;h2 id=&#34;google-s-not-so-secret-new-os&#34;&gt;Google’s not-so-secret new OS&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://techspecs.blog/blog/2017/2/14/googles-not-so-secret-new-os&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; describing the state of Google&amp;rsquo;s new operating system, Fuchsia or Andromeda (the final name is not final yet).&lt;/p&gt;

&lt;p&gt;Tags: google, os, operating-system, daniel-matte, fuchsia, andromeda&lt;/p&gt;

&lt;h2 id=&#34;four-secrets-of-people-who-finish-their-workweeks-on-thursday&#34;&gt;Four Secrets Of People Who Finish Their Workweeks On Thursday&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://www.fastcompany.com/3068122/work-smart/four-secrets-of-people-who-finish-their-workweeks-on-thursday&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Kat Boogaard that includes four tips to finish your week early:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;They Schedule Intentionally&lt;/li&gt;
&lt;li&gt;They Focus On Priorities&lt;/li&gt;
&lt;li&gt;They Tune Out Distractions&lt;/li&gt;
&lt;li&gt;They Find Shortcuts&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Tags: kat-boogaard, time-management, eisenhower-productivity-matrix, urgent-vs-important, important-vs-urgent, urgent, important, productivity&lt;/p&gt;

&lt;h2 id=&#34;reflecting-on-one-very-very-strange-year-at-uber&#34;&gt;Reflecting On One Very, Very Strange Year At Uber&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://www.susanjfowler.com/blog/2017/2/19/reflecting-on-one-very-strange-year-at-uber&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Susan J Fowler on some bad HR practices at Uber and how they are part of the reason their low percentage of women (3%) in the engineering team.&lt;/p&gt;

&lt;p&gt;Tags: sexism, uber, susan-fowler, hr, human-resources, women, work-environment, review&lt;/p&gt;

&lt;h2 id=&#34;ni-dioses-ni-reyes-sólo-el-hombre&#34;&gt;Ni dioses ni reyes. Sólo el hombre.&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://us2.campaign-archive1.com/?u=374c664073e1a1fa3deca53b4&amp;amp;id=860ccae5e2&#34; target=&#34;_blank&#34;&gt;this bonilista&lt;/a&gt; (in Spanish) by David Bonilla on which he talks about the God Mode and how that is implemented in different applications.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve also liked this:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Los desarrolladores sólo somos herreros que forjan ceros y unos. Construimos herramientas para satisfacer necesidades de nuestros usuarios, sin que eso nos haga mejores que ellos o nos dé el derecho de supervisar y juzgar sus actos. A la hora de diseñar nuevos sistemas y funcionalidades, lo único que nunca deberíamos olvidar es que no somos dioses ni reyes, sólo hombres.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Rough translation:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;We, developers, we are only blacksmiths of the digital era. We build tools to satisfy our user&amp;rsquo;s need, without that fact making us better than they are or without the right to overview what they do or to judge their acts. When designing new systems and features, the only thing we must never forget is that we are neither gods nor kings, just humans.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;las-tres-erres&#34;&gt;Las tres erres&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article (in Spanish) by David Bonilla in which he explains three necessary factors when considering a job offer:&lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Referentes: es imposible conocer a toda la plantilla de una empresa, pero si conoces a dos o tres empleados clave, podrás hacerte una idea de cómo será el equipo que te vas a encontrar. La gente prefiere trabajar con compañeros que compartan su ética y valores. Yo conocía a casi toda la plantilla de Comalatech tras haber coincidido con unos y otros en distintos eventos… y aún hay gente que se pregunta para qué sirve ir a conferencias técnicas si en Internet “se puede encontrar todo”.&lt;/li&gt;
&lt;li&gt;Referencias: es complicado, pero en el día a día una persona puede ser completamente diferente a la imagen que proyecta públicamente. Me ha pasado. Por eso es importante contar con referencias, terceras personas –antiguos empleados, clientes o proveedores- con las que haya trabajado. Los españoles no solemos pedirlas, pero para los anglosajones son un requisito imprescindible. En el caso de Comala, conseguí las mejores de la mejor fuente posible.&lt;/li&gt;
&lt;li&gt;Retos: los profesionales trabajamos por dinero, pero a partir de cierto nivel de salario, podemos permitirnos el lujo de elegir un trabajo u otro según otros factores. En mi caso, siempre he priorizado por encima de todo el potencial de aprendizaje y, en ese sentido, Comalatech no tenía rival.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tags: referent, reference, challenge, david-bonilla, bonilista, change-job, job-offer&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Self-Study in February 2016</title>
      <link>https://alvarogarcia7.github.io/blog/2016/02/01/self-study-in-february-2016/</link>
      <pubDate>Mon, 01 Feb 2016 02:55:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2016/02/01/self-study-in-february-2016/</guid>
      <description>

&lt;h2 id=&#34;software-and-all-that-comes-with-it&#34;&gt;Software and all that comes with it&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://lanyrd.com/2011/fromthefront/sgfgw/&#34; target=&#34;_blank&#34;&gt;these slides&lt;/a&gt; about creating software and asking questions to deliver value, by Alberto Brandolini&lt;/p&gt;

&lt;p&gt;Tags: alberto-brandolini, software, slide, team-management, agile&lt;/p&gt;

&lt;h2 id=&#34;driving-your-dba-crazy-in-3-easy-steps&#34;&gt;Driving your DBA crazy in 3 easy steps&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://lanyrd.com/2011/ddd-day-it/shzym&#34; target=&#34;_blank&#34;&gt;these slides&lt;/a&gt; about dealing with the knowledge that is present in the database, not expressed in ubiquitous language and cause of the low bus factor, by Alberto Brandolini&lt;/p&gt;

&lt;p&gt;Analogy between the movie The Shining and a model / entities / aggregates.&lt;/p&gt;

&lt;p&gt;Tags: ddd, model, entity, aggregate, team-management, dba, agile, ubiquitous-language, alberto-brandolini, bus-factor, slide&lt;/p&gt;

&lt;h2 id=&#34;shorter-feedback-is-not-always-bett&#34;&gt;Shorter Feedback is not Always Bett&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://facebook.com/notes/kent-beck/shorter-feedback-is-not-always-bett/1097086386990891&#34; target=&#34;_blank&#34;&gt;this note&lt;/a&gt; from Kent Beck on why shorter feedback loops might not always be better. I.e., why some processes take time to set in and results are not observable until that time.&lt;/p&gt;

&lt;p&gt;Tags:  kent-beck, feedback-loops, open-question, analogy&lt;/p&gt;

&lt;h2 id=&#34;la-regla-del-triple-check-para-ir-a-eventos&#34;&gt;La Regla del Triple Check para ir a eventos&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.bonillaware.com/regla-triple-check-para-ir-a-eventos&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by David Bonilla about a rule to help you decide attendance to events, in Spanish&lt;/p&gt;

&lt;p&gt;Tags: rule, time-management, david-bonilla, event, spanish, triple-check&lt;/p&gt;

&lt;h2 id=&#34;an-interview-with-charles-wetherell&#34;&gt;An interview with Charles Wetherell&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://demin.ws/blog/english/2012/08/25/interview-with-charles-wetherell/&#34; target=&#34;_blank&#34;&gt;this interview&lt;/a&gt; by Alexander Demin about the interviewee&amp;rsquo;s book &amp;ldquo;Etudes for Programmers&amp;rdquo;. In it, they talk about the origin of the études, the author&amp;rsquo;s research interests and activities. Also about the book (written in 1978) and how computer science has changed since then.&lt;/p&gt;

&lt;p&gt;When asked about three things a programmer should know:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Some ability to do formal mathematics. The level necessary to understand Hopcroft and Ullman combined with a little graph theory is enough. Discrete mathematics is essential; calculus is only necessary for folks working in special application areas.&lt;/p&gt;

&lt;p&gt;Some ability to write clearly in their native language. Dijkstra said that if a person couldn’t write their own language, they couldn’t write a correct program. (Well, that’s what I hope Dijkstra said!). Writing programs is essentially the same as writing a non-fiction essay. If you can’t make the step-by-step connections clearly in your own language, why would we think you could in C, for example?&lt;/p&gt;

&lt;p&gt;Remember that a program is primarily for communication with humans, not computers. When you write a program, the computer will do whatever you say. You must convince the humans who read the program that what you have asked the computer to do is the correct thing to do. Remember, the computer doesn’t care about correctness.&lt;/p&gt;

&lt;p&gt;The answer to the last question means that programs should always have the form of paragraphs of comments that describe the intention of the program followed by paragraphs of code that implement that intention. All of the formatting should be designed to make readers as able as possible to read the code easily; the compiler doesn’t care. In particular, follow conventions of mathematics and your native language, not those you found in some random language manual. Write the comments first and then write the code, not the other way around. If you don’t know what you want to achieve and why, any code you write is, by definition, incorrect.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tags: charles-wetherell, alexander-demin, interview, book, etude, etudes-for-programmers, practice, ability, skill, list&lt;/p&gt;

&lt;h2 id=&#34;how-to-fix-javascript-maybe&#34;&gt;How to fix Javascript… maybe&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@wob/how-to-fix-javascript-maybe-8857819bfa16&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Drew Hamlett about the lack of style guide for javascript and how this affects the adoption of the language and the sprout of similar libraries.&lt;/p&gt;

&lt;p&gt;Suggests the creation of a standard style guide for javascript.&lt;/p&gt;

&lt;p&gt;Tags: drew-hamlett, javascript, style-guide, analysis&lt;/p&gt;

&lt;h2 id=&#34;isomorphic-javascript-devbeat-master-class&#34;&gt;Isomorphic JavaScript: #DevBeat Master Class&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.slideshare.net/spikebrehm/a-28174727&#34; target=&#34;_blank&#34;&gt;these slides&lt;/a&gt; by Spike Brehm on Isomorphic JavaScript and why it&amp;rsquo;s important: initial pageload and speed, reducing effort and duplication, SEO (crawlability).&lt;/p&gt;

&lt;p&gt;Tags: isomorphic-javascript, isomorphism, javascript, seo, crawler, frontend, app, application, fat-client, fat-server, thin-client, thin-server, ria-spike-brehm, slide&lt;/p&gt;

&lt;h2 id=&#34;open-sourcing-our-docker-images&#34;&gt;Open-sourcing our docker images&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.modulus.io/open-sourcing-our-docker-images&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Brandon Cannaday about the Docker images that they have.&lt;/p&gt;

&lt;p&gt;Tags: docker, brandon-annaday, open-ource, image, container, modulus&lt;/p&gt;

&lt;h2 id=&#34;growing-up-in-an-open-source-world&#34;&gt;growing up in an open source world&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://fiveisprime.me/2015/02/18/growing-up-in-open-source/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Matt Hernandez where he explains that fixing the style guide can limit your creativity and how the software is written in enterprise and open-source environments.&lt;/p&gt;

&lt;p&gt;Also about how developers grow when exposed to different style guides.&lt;/p&gt;

&lt;p&gt;Tags: style-guide, matt-hernandez, creativity, dreyfus-model, enterprise, open-source, programming&lt;/p&gt;

&lt;h2 id=&#34;hanlon-s-razor-and-working-with-young-engineers&#34;&gt;Hanlon&amp;rsquo;s Razor and working with young engineers&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://fiveisprime.me/2013/07/27/young-engineers/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Matt Hernandez on the importance of understanding (and empathising) towards others&amp;rsquo; positions and worries.&lt;/p&gt;

&lt;p&gt;Cites the Hanlon Razor:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Never attribute to malice that which is adequately explained by ignorance.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tags:  hanlon-razor, empathy, team-management, ignorance, malice, matt-hernandez&lt;/p&gt;

&lt;h2 id=&#34;intro-to-sails-js&#34;&gt;Intro to sails.js&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched &lt;a href=&#34;https://youtu.be/GK-tFvpIR7c&#34; target=&#34;_blank&#34;&gt;this video&lt;/a&gt;, an introduction to the sails.js framework: a realtime nodejs server for creating REST APIs, inspired by Ruby on Rails.&lt;/p&gt;

&lt;p&gt;Tags: sailsjs, ruby-on-rails, ror, framework, video, introduction, mvc, rest-api, realtime, nodejs,&lt;/p&gt;

&lt;h2 id=&#34;node-js-and-hapi-creating-a-rest-api&#34;&gt;Node.js and hapi - creating a rest api&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.modulus.io/nodejs-and-hapi-create-rest-api&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; about creating a REST API using &lt;a href=&#34;http://hapijs.com/&#34; target=&#34;_blank&#34;&gt;Hapi&lt;/a&gt;, a nodejs framework. Written by Matt Hernandez&lt;/p&gt;

&lt;p&gt;Tags: matt-hernandez, rest-api, nodejs, hapi, framework&lt;/p&gt;

&lt;h2 id=&#34;introducing-pokedex-org-a-progressive-webapp-for-pokémon-fans&#34;&gt;Introducing Pokedex.org: a progressive webapp for Pokémon fans&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.pocketjavascript.com/blog/2015/11/23/introducing-pokedex-org&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Nolan Lawson about the challenge of having a 60 fps application on a mobile device, making it offline.&lt;/p&gt;

&lt;p&gt;Uses Angular 2, javascript 7, PouchDB as well as LocalForage for storage. All processing on WebWorkers, except for DOM manipulation.&lt;/p&gt;

&lt;p&gt;Tags: angular-2, javascript-7, angular, javascript, pouchdb, localforage, cloudant, 60fps, mobile, app, offline-first, offline, pokemon, api, nolan-lawson, web-worker, flip-technique, css, progressive, pokedex, svgomg, frontend&lt;/p&gt;

&lt;h2 id=&#34;lambdaconf-2015-how-to-learn-haskell-in-less-than-5-years-chris-allen&#34;&gt;LambdaConf 2015 - How to Learn Haskell in Less Than 5 Years Chris Allen&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched &lt;a href=&#34;https://www.youtube.com/watch?v=Bg9ccYzMbxc&#34; target=&#34;_blank&#34;&gt;this video&lt;/a&gt; by Chris Allen on how to learn haskell, what are some common pitfalls while learning it and how learning and teaching (it) are different.&lt;/p&gt;

&lt;p&gt;Talks about his (with a coauthor) book, focused on not reducing the readers that make it to the end and, finally, increasing the amount of haskell users.&lt;/p&gt;

&lt;p&gt;References &lt;a href=&#34;https://yow.eventer.com/yow-2014-1222/stop-treading-water-learning-to-learn-by-edward-kmett-1750&#34; target=&#34;_blank&#34;&gt;this talk&lt;/a&gt; by Kmett.&lt;/p&gt;

&lt;p&gt;Tags: chris-allen, haskell, learning-to-learn, meta-learning, lambda-conf, talk&lt;/p&gt;

&lt;h2 id=&#34;extreme-continuous-delivery-at-unruly&#34;&gt;Extreme Continuous Delivery - at Unruly&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.xpdays.de/2014/downloads/002-extreme-continuous-delivery-at-unruly/cd_javaone.pdf&#34; target=&#34;_blank&#34;&gt;these slides&lt;/a&gt; about how the company Unruly does continuous delivery (CD), maximizing business value, minimizing time to market (TTM). Also describes how they do deployments and how to organize teams.&lt;/p&gt;

&lt;p&gt;References: Extreme Programming Explained (Beck), Continuous Delivery (Humble &amp;amp; Farley)&lt;/p&gt;

&lt;p&gt;Tags: silo, team-management, culture, continuous-delivery, tdd, nagdd, shared-infrastructure, acceptance-testing, module-testing, conway-law, cross-pollination, continuous-investment, slide&lt;/p&gt;

&lt;h2 id=&#34;building-chat-applications-and-robots-for-skype&#34;&gt;Building chat applications and robots for Skype&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://opensourcehacker.com/2013/03/28/building-chat-applications-and-robots-for-skype/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; on building robots for skype. By Mikko Ohtamaa&lt;/p&gt;

&lt;p&gt;Tags: skype, robot, bot, mikko-ohtamaa, slack, integration, api&lt;/p&gt;

&lt;h2 id=&#34;why-i-never-wrote-down-our-company-values&#34;&gt;Why I never wrote down our company values&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/swlh/why-i-never-wrote-down-our-company-values-8143520497e8&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Mikael Cho on the subject of having company values, preaching or writing them down. Also, what happens when hard times come, regarding your values.&lt;/p&gt;

&lt;p&gt;Tags: mikael-cho, value, company-value, analogy&lt;/p&gt;

&lt;h2 id=&#34;interview-with-jesper-louis-andersen-about-erlang-haskell-ocaml-go-idris-the-jvm-software-and-protocol-design&#34;&gt;Interview with Jesper Louis Andersen about Erlang, Haskell, OCaml, Go, Idris, the JVM, software and protocol design &lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this interview (&lt;a href=&#34;https://medium.com/this-is-not-a-monad-tutorial/interview-with-jesper-louis-andersen-about-erlang-haskell-ocaml-go-idris-the-jvm-software-and-b0de06440fbd&#34; target=&#34;_blank&#34;&gt;part 1&lt;/a&gt;, &lt;a href=&#34;https://medium.com/this-is-not-a-monad-tutorial/interview-with-jesper-louis-andersen-about-erlang-haskell-ocaml-go-idris-the-jvm-software-and-5628fe591295&#34; target=&#34;_blank&#34;&gt;part 2&lt;/a&gt;) to Jesper Louis Andersen, interviewed by Federico Carrone.&lt;/p&gt;

&lt;p&gt;The first part is about a comparison of languages, what/why he uses them, and protocol design. The second is more about the Erlang language, the BEAM VM, and some experiences.&lt;/p&gt;

&lt;p&gt;Tags: federico-carrone, erlang, interview, jesper-andersen, jesper-louis-andersen, haskell, ocaml, go, idris, the-jvm, protocol-design, software-design, language, functional-programming, protocol, land-of-lisp, northern-war&lt;/p&gt;

&lt;h2 id=&#34;migrating-to-hugo-from-octopress&#34;&gt;Migrating to Hugo From Octopress&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://nathanleclaire.com/blog/2014/12/22/migrating-to-hugo-from-octopress/&#34; target=&#34;_blank&#34;&gt;this guide&lt;/a&gt; by Nathan LeClaire on migrating the blog from Octopress to Hugo&lt;/p&gt;

&lt;p&gt;Tags: static-site-generator, hugo, go, octopress, ruby, jekyll, nathan-leclaire, migration, blog, meta&lt;/p&gt;

&lt;h2 id=&#34;dynamic-static-site-generators-strategies&#34;&gt;Dynamic Static Site Generators strategies&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://timnash.co.uk/dynamic-static-site-generators-strategies/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; explaining what are static site generators, and an example with Jekyll. By Tim Nash&lt;/p&gt;

&lt;p&gt;Tags: tim-nash, static-site-generator, jekyll, strategy, explanation, comparison&lt;/p&gt;

&lt;h2 id=&#34;blog-like-a-confused-hacker&#34;&gt;Blog like a confused hacker&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://timnash.co.uk/using-wordpress-static-site-generator/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Tim Nash on what tools he recomends for static site generation.&lt;/p&gt;

&lt;p&gt;Tags: tim-nash, static-site-generator, jekyll, hide, strategy, explanation, comparison, sublime, wordpress, amazon-s3, cdn&lt;/p&gt;

&lt;h2 id=&#34;resolving-the-frontend-backend-api-design-conflict&#34;&gt;Resolving the Frontend/Backend API Design Conflict&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://launchany.com/resolving-the-frontendbackend-api-design-conflict/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; that explains the &amp;ldquo;Backend for Frontend&amp;rdquo; (BFF) pattern, for solving the different needs of data depending on each device / client. By James Higginbotham&lt;/p&gt;

&lt;p&gt;Tags: james-higginbotham, bff, pattern, backend-for-frontend, api, soa, microservice, frontend, backend, architecture&lt;/p&gt;

&lt;h2 id=&#34;what-if-we-forget-to-write-the-tests&#34;&gt;What If We Forget To Write The Tests?&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://us2.campaign-archive2.com/?u=80ca60ec48ef77dfaa1f38943&amp;amp;id=f70f14b644&amp;amp;e=4a925444f9&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by J. B. Rainsberger on the trust issues related to starting to use a new methodology (TDD in this case) and how to see what impacts it might have in your day to day.&lt;/p&gt;

&lt;p&gt;Tags: j-b-rainsberger, j-brains, rainsberger, tdd, motivation, team-management&lt;/p&gt;

&lt;h2 id=&#34;api-microservices-the-unix-philosophy-and-the-richardson-maturity-model-a-practical-perspective&#34;&gt;API microservices, the Unix philosophy, and the Richardson Maturity Model - a practical perspective&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@chrstphrhrt/microservices-the-unix-philosophy-and-the-richardson-maturity-model-425abed44826&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Chris Hart on why startups and companies alike should be careful when choosing th latest technology and how this applies to microservices.&lt;/p&gt;

&lt;p&gt;Tags: microservice, chris-hart, startup, analysis, company, technical-debt, bounded-context, ddd, rest-api&lt;/p&gt;

&lt;h2 id=&#34;effective-programming&#34;&gt;Effective programming&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@sebas5384/effective-programming-d7e5bb2f3b80&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Sebastian Ferrari on the importance of clean code, systems thinking and functional programming.&lt;/p&gt;

&lt;p&gt;Specifies the important difference between effectiveness and efficiency.&lt;/p&gt;

&lt;p&gt;Links to this talk by &lt;a href=&#34;https://youtu.be/OqEeIG8aPPk&#34; target=&#34;_blank&#34;&gt;Russ Ackoff&lt;/a&gt;. States the difference between &amp;ldquo;the right thing&amp;rdquo; and &amp;ldquo;the thing right&amp;rdquo;, by Drucker.&lt;/p&gt;

&lt;p&gt;Tags: drucker, thing-right, right-thing, sebastian-ferrari, system-thinking, russ-ackoff, video, ted, difference, clean-code, functional-programming&lt;/p&gt;

&lt;h2 id=&#34;learning-how-to-learn&#34;&gt;Learning how to learn&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@thejameskyle/learning-how-to-learn-7f04d6f42c1e&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by James Kyle about the &amp;ldquo;how to learn&amp;rdquo; as one important skill for programmers and how having the solution at a few keystrokes limits / handicaps this ability.&lt;/p&gt;

&lt;p&gt;Tags: programmer, learn-to-learn, james-kyle, stack-overflow, skill&lt;/p&gt;

&lt;h2 id=&#34;why-do-some-functional-programmers-criticize-design-patterns-in-oop-languages-as-a-sign-of-language-deficiency-while-monad-is-also-a-design-pattern&#34;&gt;Why do some functional programmers criticize design patterns in OOP languages as a sign of language deficiency, while Monad is also a design pattern?&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://www.quora.com/Why-do-some-functional-programmers-criticize-design-patterns-in-OOP-languages-as-a-sign-of-language-deficiency-while-Monad-is-also-a-design-pattern/answer/Edward-Kmett?srid=hVnO&amp;amp;share=12410d1e&#34; target=&#34;_blank&#34;&gt;this answer&lt;/a&gt; by Edward Kmett comparing the design patterns in OOP to the design patterns in functional languages.&lt;/p&gt;

&lt;p&gt;Tags: functional-language, object-oriented-language, edward-kmett, oop, pattern, monad, interface, quora, answer&lt;/p&gt;

&lt;h2 id=&#34;should-we-even-debate-refactoring-with-stakeholders&#34;&gt;Should We Even Debate Refactoring With Stakeholders?&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://us2.campaign-archive2.com/?u=80ca60ec48ef77dfaa1f38943&amp;amp;id=215f7f649b&amp;amp;e=4a925444f9&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by J. B. Rainsberger on the power balance between stakeholders and programmers and how it can be inclined to a &amp;lsquo;more trust&amp;rsquo; / &amp;lsquo;less trust&amp;rsquo; by following some actions. The analogy is to a trade you cannot understand, therefore you have to hope that the taken decisions are in your best interest.&lt;/p&gt;

&lt;p&gt;Tags: j-b-rainsberger, j-brains, rainsberger, refactor, business-need, communication, stakeholder&lt;/p&gt;

&lt;h2 id=&#34;the-eternal-struggle-between-business-and-programmers&#34;&gt;The Eternal Struggle Between Business and Programmers&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.thecodewhisperer.com/permalink/the-eternal-struggle-between-business-and-programmers&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by J. B. Rainsberger on the discussion between business (&amp;lsquo;we want more features, now&amp;rsquo;) and the programmers (&amp;lsquo;we want more refactoring, now&amp;rsquo;). Concludes that both players need each other, in a symbiotic fashion, to keep their jobs at the company.&lt;/p&gt;

&lt;p&gt;He suggests that Scrum cannot work without the XP practices and that we need to refactor aggressively after having finished our initial design, to keep the costs down. In fact, agreeing with both parts in this discussion.&lt;/p&gt;

&lt;p&gt;References one of his own videos, at Oredev&amp;rsquo;13, &amp;ldquo;Fundamental Theorem of Agile Software Development&amp;rdquo;, where he describes the relationship between accidental / essential complexity in the cost of a feature, attributing most of it to accidental (&amp;lsquo;we&amp;rsquo;re not good at our jobs&amp;rsquo;) and describing the need for more design / refactor after the initial design.&lt;/p&gt;

&lt;p&gt;Tags: j-b-rainsberger, j-brains, rainsberger, refactor, business-need, design, oredev, talk, agile, xp, scrum, software-development, accidental-complexity, essential-complexity, mythical-man-month&lt;/p&gt;

&lt;h2 id=&#34;turning-code-to-cash-how-to-make-money-as-a-web-developer-and-live-to-tell-the-tale&#34;&gt;Turning code to cash — How to make money as a Web Developer and live to tell the tale.&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@kurtrohlandt/turning-code-to-cash-how-to-make-money-as-a-web-developer-and-live-to-tell-the-tale-f5eedc557b3e&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Kurt Rohlandt with a list of items to check while dealing with clients as a freelancer:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Nothing is simple&lt;/li&gt;
&lt;li&gt;Know your skill set — and let your client know it&lt;/li&gt;
&lt;li&gt;Be clear about what they are buying&lt;/li&gt;
&lt;li&gt;Learn to use the best tool for the job&lt;/li&gt;
&lt;li&gt;To your client you’re more than just a developer&lt;/li&gt;
&lt;li&gt;Sign off your jobs&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tags: freelancer, kurt-rohlandt, list, tip, client&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>