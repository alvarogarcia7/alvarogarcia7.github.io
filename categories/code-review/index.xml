<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>The long way through Software Craftsmanship</title>
    <link>https://alvarogarcia7.github.io/categories/code-review/index.xml</link>
    <description>Recent content on The long way through Software Craftsmanship</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="https://alvarogarcia7.github.io/categories/code-review/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Self-Study in February 2017</title>
      <link>https://alvarogarcia7.github.io/blog/2017/02/01/self-study-in-february-2017/</link>
      <pubDate>Wed, 01 Feb 2017 11:32:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2017/02/01/self-study-in-february-2017/</guid>
      <description>

&lt;h2 id=&#34;whatsapp-security-vulnerability&#34;&gt;WhatsApp Security Vulnerability&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://www.schneier.com/blog/archives/2017/01/whatsapp_securi.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Bruce Schneier on a security defect in whatsapp, where an &amp;lsquo;unconfirmed&amp;rsquo; message can be re-encrypted (with a new key) and resent. This is a vector for some attacks.&lt;/p&gt;

&lt;p&gt;Tags: bruce-schneier, security, whatsapp, encryption, attack-vector&lt;/p&gt;

&lt;h2 id=&#34;encrypted-email-service-once-used-by-edward-snowden-relaunches&#34;&gt;Encrypted email service once used by Edward Snowden relaunches&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://theintercept.com/2017/01/20/encrypted-email-service-once-used-by-edward-snowden-to-relaunch/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt;, by Kim Zetter, on Lavabit restablishing its service. Explains the company&amp;rsquo;s past and the new services they are offering&lt;/p&gt;

&lt;p&gt;Tags: lavabit, kim-zetter, privacy, encryption, email, mail&lt;/p&gt;

&lt;h2 id=&#34;what-happens-when-you-mix-java-with-a-1960-ibm-mainframe&#34;&gt;What Happens When You Mix Java with a 1960 IBM Mainframe&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://thenewstack.io/happens-use-java-1960-ibm-mainframe/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by David Cassel about the legacy infrastructure of hardware that the U.S. government agencies have. How old mainframes are still useful to web applications and how these mainframes can communicate with more modern systems, through APIs&lt;/p&gt;

&lt;p&gt;Tags: mainframe, david-cassel, marianne-bellotti, legacy-hardware, legacy-software, legacy-system, legacy, api&lt;/p&gt;

&lt;h2 id=&#34;systems-we-love-how-the-past-informs-our-present&#34;&gt;Systems We Love: How the Past Informs Our Present&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://thenewstack.io/systems-we-love/&#34; target=&#34;_blank&#34;&gt;this experience report&lt;/a&gt; by David Cassel about the conference &amp;ldquo;Systems we love&amp;rdquo;: a mix of papers we love and systems that happened at San Francisco in December 2016&lt;/p&gt;

&lt;p&gt;Tags: david-cassel, systems-we-love, papers-we-love, system, conference, experience-report, joyent&lt;/p&gt;

&lt;h2 id=&#34;the-agonizing-death-of-an-astronaut&#34;&gt;The agonizing death of an astronaut&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.javaslang.io/the-agonizing-death-of-an-astronaut/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Daniel Dietrich on why the implementation of the &lt;code&gt;Option&lt;/code&gt; in Javaslang seems to be broken but, in fact, follows the rules of the monads.&lt;/p&gt;

&lt;p&gt;Explains why &lt;code&gt;map&lt;/code&gt; should be used for non-changing contexts and &lt;code&gt;flatmap&lt;/code&gt; should be used for changing it.&lt;/p&gt;

&lt;p&gt;Tags: daniel-dietrich, monad, option, haskell, optional, maybe, scala, javaslang&lt;/p&gt;

&lt;h2 id=&#34;we-reverse-engineered-16k-apps-here-s-what-we-found&#34;&gt;We reverse engineered 16k apps, here’s what we found&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://hackernoon.com/we-reverse-engineered-16k-apps-heres-what-we-found-51bdf3b456bb&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Fallible team, in which they describe the analysis of apps. They discovered 2500 apps with key and secret on them.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;[&amp;hellip;] whenever you hardcode any API key/token in the app, think hard if you really need to hardcode this, understand the API usage and the read/write scope of the tokens before putting it in the apps.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tags: analysis, security, app, key, token, api, fallible&lt;/p&gt;

&lt;h2 id=&#34;oh-the-emails-you-ll-get&#34;&gt;Oh, the emails you’ll get&amp;hellip;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://www.joelonsoftware.com/2006/11/09/oh-the-emails-youll-get/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Joel Spolsky, in which he explains how some companies focus on some metrics for measuring performance, how difficult it is to measure performance.&lt;/p&gt;

&lt;p&gt;Tags: joel-spolsky, performance, management, consulting&lt;/p&gt;

&lt;h2 id=&#34;2002-07-15-measurement&#34;&gt;2002/07/15 - Measurement&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://www.joelonsoftware.com/2002/07/15/20020715/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Joel Spolsky where he explains how measuring performance is difficult, according to  Robert D. Austin in his book Measuring and Managing Performance in Organizations. He gives some examples of that, mainly about paying out bonuses for performance reasons.&lt;/p&gt;

&lt;p&gt;Tags: joel-spolsky, robert-austin, measuring-performance, managing-performance, book, knowledge-worker, bonus, pay, performance, organization&lt;/p&gt;

&lt;h2 id=&#34;the-purpose-of-life-is-not-happiness-it-s-usefulness&#34;&gt;The Purpose Of Life Is Not Happiness: It’s Usefulness&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://dariusforoux.com/happiness-usefulness/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Darius Foroux on what the purpose of life is about: making a difference (even if small) in what you leave behind.&lt;/p&gt;

&lt;p&gt;Tags: psychology, purpose-of-life, usefulness, happiness, darius-foroux&lt;/p&gt;

&lt;h2 id=&#34;the-future-of-user-interfaces&#34;&gt;The Future of User Interfaces&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://brandur.org/interfaces&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Brandur on how interfaces are becoming more and more bloated, slow and ridden with animations. All of that is targeted to the beginner user, rather than the proficient one. He suggests some ideas on finding inspiration from the terminal applications&lt;/p&gt;

&lt;p&gt;Tags: brandur, interface, interface-design, ux, ui&lt;/p&gt;

&lt;h2 id=&#34;my-increasing-frustration-with-clojure&#34;&gt;My Increasing Frustration With Clojure&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://ashtonkemerling.com/blog/2016/06/11/my-increasing-frustration-with-clojure/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Ashton Kemerling on the problems he has found working professionally with Clojure and some possible solutions.&lt;/p&gt;

&lt;p&gt;Tags: clojure, language, ashton-kemerling, functional-programming, problem, frustration&lt;/p&gt;

&lt;h2 id=&#34;java-without-if&#34;&gt;Java Without If&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://ashtonkemerling.com/blog/2017/01/26/java-without-if/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Ashton Kemerling on how he is using a library called &amp;lsquo;lambda&amp;rsquo;, which brings some of the functional programming features to Java.&lt;/p&gt;

&lt;p&gt;Tags: lambda, library, ashton-kemerling, functional-programming, java, palatable, john-napier&lt;/p&gt;

&lt;h2 id=&#34;top-ten-pull-request-review-mistakes&#34;&gt;Top ten pull request review mistakes&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://blog.scottnonnenberg.com/top-ten-pull-request-review-mistakes/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Scott Nonnenberg on the most common mistakes while doing a code review in the context of a pull request.&lt;/p&gt;

&lt;p&gt;Tags: scott-nonnenberg, pull-request, code-review, github, diff, listicle&lt;/p&gt;

&lt;h2 id=&#34;shutting-down-simplicity-itself&#34;&gt;Shutting down Simplicity Itself&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://daviddawson.me/blog/2017/02/04/simplicity-itself-shutdown.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by David Dawson on why he&amp;rsquo;s shutting down his consultancy company, Simplicity Itself, which was mainly focused on microservices.&lt;/p&gt;

&lt;p&gt;Tags: david-dawson, simplicity-itself, shut-down, company, consulting, post-mortem, postmortem&lt;/p&gt;

&lt;h2 id=&#34;turn-off-your-cellphone&#34;&gt;Turn Off Your Cellphone&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://brandur.org/fragments/turn-off-your-cellphone&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Brandur on how to get more done by unplugging the notifications&lt;/p&gt;

&lt;p&gt;Tags: brandur, time-management, interruption, phone, notification&lt;/p&gt;

&lt;h2 id=&#34;the-dark-standup&#34;&gt;The Dark Standup&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://18f.gsa.gov/2017/01/19/the-dark-standup/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Alan Brouilette on the steps they took to reduce the amount of hours worked. It started with a few extra questions during the daily standup:&lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;What didn’t you do today because you stopped working on time?&lt;/li&gt;
&lt;li&gt;What will the impact be on tomorrow because of it?&lt;/li&gt;
&lt;li&gt;How much more time would you have needed to get everything done today?&lt;/li&gt;
&lt;li&gt;What will you do with those hours tonight instead?&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;and what they realized after a two-week experiment:&lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;The costs of context switching are much higher than we realized.&lt;/li&gt;
&lt;li&gt;We were spending a lot of time doing things that were urgent but not important, or that didn’t need to have been urgent at all.&lt;/li&gt;
&lt;li&gt;We needed to be a lot more ruthless about saying “No.”&lt;/li&gt;
&lt;li&gt;Some Operations roles are legitimately shorthanded, some of us just needed to impose a little order.&lt;/li&gt;
&lt;li&gt;FOMO WIP (unnecessary work one takes on because one fears missing something) is a real problem, especially as regards to Slack and meetings.&lt;/li&gt;
&lt;li&gt;We worked better in the time we had to work, knowing it was finite.&lt;/li&gt;
&lt;li&gt;Work-life balance improves both work and life. People literally slept better when limiting after-hours exposure to Slack and email. [&amp;hellip;]&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tags: dark-standup, quote, limited-time, overtime, team-management, experiment, question, alan-brouilette&lt;/p&gt;

&lt;h2 id=&#34;what-it-means-to-be-a-remote-first-company&#34;&gt;What it Means to be a Remote-First Company&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.stackoverflow.blog/code-for-a-living/what-it-means-to-be-a-remote-first-company&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by  Alyssa Mazzina on what Stack Overflow does to keep its remote employees happy, how they are a remote-first company and small practicalities like tools, holiday gifts and stipends.&lt;/p&gt;

&lt;p&gt;Tags: alyssa-mazzina, team-management, remote, remote-work, stack-overflow, team&lt;/p&gt;

&lt;h2 id=&#34;google-s-not-so-secret-new-os&#34;&gt;Google’s not-so-secret new OS&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://techspecs.blog/blog/2017/2/14/googles-not-so-secret-new-os&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; describing the state of Google&amp;rsquo;s new operating system, Fuchsia or Andromeda (the final name is not final yet).&lt;/p&gt;

&lt;p&gt;Tags: google, os, operating-system, daniel-matte, fuchsia, andromeda&lt;/p&gt;

&lt;h2 id=&#34;four-secrets-of-people-who-finish-their-workweeks-on-thursday&#34;&gt;Four Secrets Of People Who Finish Their Workweeks On Thursday&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://www.fastcompany.com/3068122/work-smart/four-secrets-of-people-who-finish-their-workweeks-on-thursday&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Kat Boogaard that includes four tips to finish your week early:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;They Schedule Intentionally&lt;/li&gt;
&lt;li&gt;They Focus On Priorities&lt;/li&gt;
&lt;li&gt;They Tune Out Distractions&lt;/li&gt;
&lt;li&gt;They Find Shortcuts&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Tags: kat-boogaard, time-management, eisenhower-productivity-matrix, urgent-vs-important, important-vs-urgent, urgent, important, productivity&lt;/p&gt;

&lt;h2 id=&#34;reflecting-on-one-very-very-strange-year-at-uber&#34;&gt;Reflecting On One Very, Very Strange Year At Uber&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://www.susanjfowler.com/blog/2017/2/19/reflecting-on-one-very-strange-year-at-uber&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Susan J Fowler on some bad HR practices at Uber and how they are part of the reason their low percentage of women (3%) in the engineering team.&lt;/p&gt;

&lt;p&gt;Tags: sexism, uber, susan-fowler, hr, human-resources, women, work-environment, review&lt;/p&gt;

&lt;h2 id=&#34;ni-dioses-ni-reyes-sólo-el-hombre&#34;&gt;Ni dioses ni reyes. Sólo el hombre.&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://us2.campaign-archive1.com/?u=374c664073e1a1fa3deca53b4&amp;amp;id=860ccae5e2&#34; target=&#34;_blank&#34;&gt;this bonilista&lt;/a&gt; (in Spanish) by David Bonilla on which he talks about the God Mode and how that is implemented in different applications.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve also liked this:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Los desarrolladores sólo somos herreros que forjan ceros y unos. Construimos herramientas para satisfacer necesidades de nuestros usuarios, sin que eso nos haga mejores que ellos o nos dé el derecho de supervisar y juzgar sus actos. A la hora de diseñar nuevos sistemas y funcionalidades, lo único que nunca deberíamos olvidar es que no somos dioses ni reyes, sólo hombres.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Rough translation:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;We, developers, we are only blacksmiths of the digital era. We build tools to satisfy our user&amp;rsquo;s need, without that fact making us better than they are or without the right to overview what they do or to judge their acts. When designing new systems and features, the only thing we must never forget is that we are neither gods nor kings, just humans.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;las-tres-erres&#34;&gt;Las tres erres&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article (in Spanish) by David Bonilla in which he explains three necessary factors when considering a job offer:&lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Referentes: es imposible conocer a toda la plantilla de una empresa, pero si conoces a dos o tres empleados clave, podrás hacerte una idea de cómo será el equipo que te vas a encontrar. La gente prefiere trabajar con compañeros que compartan su ética y valores. Yo conocía a casi toda la plantilla de Comalatech tras haber coincidido con unos y otros en distintos eventos… y aún hay gente que se pregunta para qué sirve ir a conferencias técnicas si en Internet “se puede encontrar todo”.&lt;/li&gt;
&lt;li&gt;Referencias: es complicado, pero en el día a día una persona puede ser completamente diferente a la imagen que proyecta públicamente. Me ha pasado. Por eso es importante contar con referencias, terceras personas –antiguos empleados, clientes o proveedores- con las que haya trabajado. Los españoles no solemos pedirlas, pero para los anglosajones son un requisito imprescindible. En el caso de Comala, conseguí las mejores de la mejor fuente posible.&lt;/li&gt;
&lt;li&gt;Retos: los profesionales trabajamos por dinero, pero a partir de cierto nivel de salario, podemos permitirnos el lujo de elegir un trabajo u otro según otros factores. En mi caso, siempre he priorizado por encima de todo el potencial de aprendizaje y, en ese sentido, Comalatech no tenía rival.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tags: referent, reference, challenge, david-bonilla, bonilista, change-job, job-offer&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Open Space: Code reviews</title>
      <link>https://alvarogarcia7.github.io/blog/2015/03/16/open-space-code-reviews/</link>
      <pubDate>Mon, 16 Mar 2015 22:44:42 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/03/16/open-space-code-reviews/</guid>
      <description>

&lt;p&gt;Today we&amp;rsquo;ve discussed about code reviews on &lt;a href=&#34;http://www.meetup.com/Barcelona-Software-Craftsmanship/events/220293683/&#34; target=&#34;_blank&#34;&gt;this open space&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;notes&#34;&gt;Notes&lt;/h2&gt;

&lt;p&gt;These are my notes, in no particular order:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;reduce information silos all around the company, as everyone [technical] can participate in these events&lt;/li&gt;
&lt;li&gt;raise the &amp;ldquo;just arrived&amp;rdquo; people&amp;rsquo;s knowledge [Difficult to hit the ground up and running, but these code review sessions can help]&lt;/li&gt;
&lt;li&gt;invest one person as &amp;lsquo;sheriff&amp;rsquo; for the sprint: they will take care of static analysis tools (such as sonar) and continuous integration (CI; such as jenkins). They will make sure others follow the working agreements&lt;/li&gt;
&lt;li&gt;In the academic environment, some teams do share their patches via mailing lists and this makes it much slower to adapt and review changes [As compared to an on-line sharing system - like web-based interfaces to distributed version control systems] As this team doesn&amp;rsquo;t have a CI tool, they must test it / try it manually before reviewing the code.&lt;/li&gt;
&lt;li&gt;Pair programming does not remove the need for code review [This has been surfaced twice]&lt;/li&gt;
&lt;li&gt;Your work is not more important than your team members&amp;rsquo; one. [Related to not having time to code review]&lt;/li&gt;
&lt;li&gt;Do code reviews include architecture? [We&amp;rsquo;ve agreed that the architecture to some degree should be discussed before code reviews]&lt;/li&gt;
&lt;li&gt;&amp;ldquo;Troll review&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Anyone can veto pull requests [By opening a question; do not allow for pull requests to be closed with open questions]&lt;/li&gt;
&lt;li&gt;A 15-minute time slot everyday to code review [As code hygiene; Done right after lunch,  breakfast or just before leaving, when you&amp;rsquo;re tired]&lt;/li&gt;
&lt;li&gt;Code review tasks have higher priority than other tasks [Do not take other tasks if there are code reviews to do]&lt;/li&gt;
&lt;li&gt;Code reviews put a lot of pressure so people learn and the knowledge level equalizes across the team&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;conclusions&#34;&gt;Conclusions&lt;/h2&gt;

&lt;p&gt;My conclusions, even though some of them were not shared by everyone:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Most of the people approve of code review practices: either they are doing them or are trying to apply them at their clients. (Warning: this was a code review meetup, so there&amp;rsquo;s a bias: people not interested in them won&amp;rsquo;t come). No one was against doing them.&lt;/li&gt;
&lt;li&gt;Code reviews have a cost, although it is beneficial to do them&lt;/li&gt;
&lt;li&gt;Should your teammates not want to participate in the code review after agreeing on doing them, appeal to their professionalism / accountability, then to their time (stated before), then troll them: after a few (healthy) trolling code review sessions, people will feel more comfortable reviewing and being reviewed. Special mention to Miguel who coined (?)&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; the term: troll review.&lt;/li&gt;
&lt;li&gt;Great way of equalizing the (technical) knowledge level within the team&lt;/li&gt;
&lt;li&gt;Great way of reduce information silos across the whole company&lt;/li&gt;
&lt;li&gt;They can be fun if you do them properly&lt;/li&gt;
&lt;li&gt;The need for code reviews do not disappear when pair programming: as long as you have a personal attachment to the code, you might not see its defects.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;your-own&#34;&gt;Your own&lt;/h2&gt;

&lt;p&gt;Should you have any conclusions to share, please add a pull request to this &lt;a href=&#34;https://github.com/alvarogarcia7/blog_source&#34; target=&#34;_blank&#34;&gt;repository&lt;/a&gt; or do it as a comment.&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;after searching some ten minutes on the internet, there are only a couple of questions on meta.codereview stackoverflow, but not related to this. &lt;strong&gt;Update&lt;/strong&gt;: In &lt;a href=&#34;https://twitter.com/mallyvai/status/314260072798752768&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;, Vaibhav Mallya talks about a #trollReview, related to code. So, unfortunately, Miguel, you&amp;rsquo;re not the first one. But there are fewer than 10 results on twitter.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Open discussion: On code reviews</title>
      <link>https://alvarogarcia7.github.io/blog/2015/02/07/open-discussion-on-code-reviews/</link>
      <pubDate>Sat, 07 Feb 2015 18:54:54 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/02/07/open-discussion-on-code-reviews/</guid>
      <description>

&lt;p&gt;At a client, I organized an open discussion on code reviews. We had a great conversation.&lt;/p&gt;

&lt;p&gt;The main idea was to discuss about it and share the ideas each one had. I didn&amp;rsquo;t want it to turn into a masterclass (see &lt;a href=&#34;http://chimera.labs.oreilly.com/books/1234000001813/ch02.html#the_white_belt&#34; target=&#34;_blank&#34;&gt;the white belt&lt;/a&gt;)&lt;/p&gt;

&lt;h2 id=&#34;benefits&#34;&gt;Benefits&lt;/h2&gt;

&lt;p&gt;These are the main benefits we saw in it:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Increased trust&lt;/li&gt;
&lt;li&gt;Learning from others, other approaches&lt;/li&gt;
&lt;li&gt;Less defects, more quality&lt;/li&gt;
&lt;li&gt;Increased &lt;a href=&#34;http://en.wikipedia.org/wiki/Bus_factor&#34; target=&#34;_blank&#34;&gt;bus factor&lt;/a&gt;, decreased information silos&lt;/li&gt;
&lt;li&gt;Also:

&lt;ul&gt;
&lt;li&gt;Getting out of your comfort zone&lt;/li&gt;
&lt;li&gt;Communicating more often (code style, edge cases, complaining, etc)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;pair-programming&#34;&gt;Pair programming&lt;/h2&gt;

&lt;p&gt;Then we discussed about the topic of &lt;a href=&#34;https://alvarogarcia7.github.io/categories/code-review
/&#34;&gt;code reviews&lt;/a&gt; and &lt;a href=&#34;https://alvarogarcia7.github.io/categories/pair-programming
/&#34;&gt;pair programming&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;How do they mix&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Is the need for code review reduced when doing pair programming?&lt;/li&gt;
&lt;li&gt;It is cheaper to catch defects when pairing than code review (e.g., less to modify, mental caches are hot, &amp;hellip;), so why do code reviews? &lt;a href=&#34;https://twitter.com/jbrains&#34; target=&#34;_blank&#34;&gt;J. B. Rainsberger&lt;/a&gt; has an &lt;a href=&#34;http://us2.campaign-archive2.com/?u=80ca60ec48ef77dfaa1f38943&amp;amp;id=acc77a0fb2&amp;amp;e=4a925444f9&#34; target=&#34;_blank&#34;&gt;article&lt;/a&gt; about it&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Does it give you the same benefits?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I argued that it does, some of my colleagues argued against as one is &amp;ldquo;while doing&amp;rdquo; and the other is after.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;practice-practice-practice&#34;&gt;Practice, Practice, Practice&lt;/h2&gt;

&lt;p&gt;This is also a reference to a chapter by the same name (&lt;a href=&#34;http://chimera.labs.oreilly.com/books/1234000001813/ch05.html#practice_comma_practice_comma_practice&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;We proposed this problem:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Receive a list of numbers to a command-line (CLI) application and print their sum&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I wrote simple code listing and we reviewed it. The code is &lt;a href=&#34;https://gist.github.com/alvarogarcia7/258faea12cb9375539fe&#34; target=&#34;_blank&#34;&gt;here as a gist&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;(Just in case, I wrote this listing with some defects / smells on purpose)&lt;/p&gt;

&lt;p&gt;Here are the comments:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Not all parameters will be added, only the first three&lt;/li&gt;
&lt;li&gt;The parameters are out of order, overcomplicating things. Is it due to something? Should I be careful about it?&lt;/li&gt;
&lt;li&gt;There is duplication (i.e., parsing from string)&lt;/li&gt;
&lt;li&gt;Bad naming: what is &lt;code&gt;a&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt;, &lt;code&gt;c&lt;/code&gt;?&lt;/li&gt;
&lt;li&gt;There are no tests for it. No manual / javadoc either. Therefore, it&amp;rsquo;s difficult to maintain&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Difficult to test: a smell for bad design?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;How to test the adding by itself? The output is to the console, so we have to capture it (at GMaur we published this tool: &lt;a href=&#34;https://github.com/GMaur/legacyutils&#34; target=&#34;_blank&#34;&gt;legacyUtils&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;How to test the parsing if there is no mock to be injected? Only via state tests, therefore &amp;ldquo;end to end&amp;rdquo; tests as it includes the adding&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Mixed concerns / responsibilities. Parsing the numbers and adding them are different concerns and should not be together&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;No one was against it&lt;/li&gt;
&lt;li&gt;We all agreed that is important to do it even in time-constrained environments&lt;/li&gt;
&lt;li&gt;It is also important to review our code reviews to make the most of it. The article by &lt;a href=&#34;http://us2.campaign-archive2.com/?u=80ca60ec48ef77dfaa1f38943&amp;amp;id=acc77a0fb2&amp;amp;e=4a925444f9&#34; target=&#34;_blank&#34;&gt;J. B. Rainsberger&lt;/a&gt; is quite useful for that&lt;/li&gt;
&lt;li&gt;Even small codes can be bad and need to be reviewed (as the example)&lt;/li&gt;
&lt;li&gt;Quick and dirty proof of concept do not mix well with code reviews&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>