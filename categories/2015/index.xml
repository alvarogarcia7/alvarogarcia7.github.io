<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2015 on The long way through Software Craftsmanship</title>
    <link>https://alvarogarcia7.github.io/categories/2015/</link>
    <description>Recent content in 2015 on The long way through Software Craftsmanship</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 31 Dec 2015 12:49:50 +0000</lastBuildDate><atom:link href="https://alvarogarcia7.github.io/categories/2015/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Books read in 2015Q4</title>
      <link>https://alvarogarcia7.github.io/blog/2015/12/31/books-read-in-2015q4/</link>
      <pubDate>Thu, 31 Dec 2015 12:49:50 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/12/31/books-read-in-2015q4/</guid>
      <description>Books I&amp;rsquo;ve read this quarter1:
 Practical Object-Oriented Design in Ruby, An Agile Primer (POODR) by Sandi Metz, with the &amp;lsquo;@deAprendices&amp;rsquo;s reading club&amp;rsquo;. Blog posts under the tag poodr.  Books started, not yet finished (WIP):
 Haskell Programming, By Chris Allen and Julie Moronuki. This book is still in progress and I&amp;rsquo;m reviewing it Pragmatic Thinking and Learning: Refactor Your Wetware by Andy Hunt Structure and Interpretation of Computer Programs by Abelson, Sussman, and Sussman, with the &amp;lsquo;@deAprendices&amp;rsquo;s reading club&amp;rsquo;.</description>
    </item>
    
    <item>
      <title>Self-Study in December 2015</title>
      <link>https://alvarogarcia7.github.io/blog/2015/12/02/self-study-in-december-2015/</link>
      <pubDate>Wed, 02 Dec 2015 09:50:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/12/02/self-study-in-december-2015/</guid>
      <description>Ruby Equality And Object Comparison I&amp;rsquo;ve read this article, written by Alan Skorkin, that explains equality comparisons in ruby:
 equal? is reference equality == is value equality eql? is value and type equality  Tags: ruby, comparison, equality, object, reference, alan-skorkin
Software Folklore I&amp;rsquo;ve watched this PechaKucha by Chris Ford on what are laws and how they relate to creating software. Also talks on what could be an analogy to software creation (says not science, not engineering)</description>
    </item>
    
    <item>
      <title>Self-Study in November 2015</title>
      <link>https://alvarogarcia7.github.io/blog/2015/11/02/self-study-in-november-2015/</link>
      <pubDate>Mon, 02 Nov 2015 15:25:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/11/02/self-study-in-november-2015/</guid>
      <description>Call me maybe: RabbitMQ I&amp;rsquo;ve read this article by Kyle Kingsbury on using RabbitMQ as a lock service. It investigates and gives a counterexample of using it for this purpose.
Uses Knossos to do the testing and surfaces a problem with it. Explains specific problems on locking: at-most-once and at-least-once message delivery
Note: References Jepsen (I guess an inside joke to the song &amp;ldquo;Call me maybe&amp;rdquo; by Carly Rae Jepsen) for at-most-once and at-least-once message delivery.</description>
    </item>
    
    <item>
      <title>Self-Study in October 2015</title>
      <link>https://alvarogarcia7.github.io/blog/2015/10/01/self-study-in-october-2015/</link>
      <pubDate>Thu, 01 Oct 2015 15:25:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/10/01/self-study-in-october-2015/</guid>
      <description>Blazing Fast HTML: Virtual DOM in Elm I&amp;rsquo;ve read this article explaining how Elm works in relation to the virtual DOM. By Evan Czaplicki.
Tags: elm, dom, virtual-dom, comparison, speed, haskell, evan-czaplicki
Why you should never, ever, ever use MongoDB I&amp;rsquo;ve read this article stating the downsides of using MongoDB. Written by Sven Slootweg
Tags: mongodb, downside, sven-slootweg, json, document-store, postgresql, acid
Do you really get classloaders? I&amp;rsquo;ve watched this video by Jevgeny Kabanov on classloaders: what they are, how they work nad some tips to solve common issues.</description>
    </item>
    
    <item>
      <title>Books read in 2015Q3</title>
      <link>https://alvarogarcia7.github.io/blog/2015/09/30/books-read-in-2015q3/</link>
      <pubDate>Wed, 30 Sep 2015 12:49:50 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/09/30/books-read-in-2015q3/</guid>
      <description>Books I&amp;rsquo;ve read this quarter1:
 The Craftsman by Richard Sennett. Posts under the tag the-craftsman Software Craftsmanship: The New Imperative by Pete McBreen. Posts under the tag software-craftsmanship-book Lisp Hackers by Vsevolod Dyomkin The Passionate Programmer: Creating a Remarkable Career in Software Development by Chad Fowler.  Books started, not yet finished (WIP):
 Haskell Programming, By Chris Allen and Julie Moronuki. This book is still in progress and I&amp;rsquo;m reviewing it Functional Programming Patterns in Scala and Clojure by Michael Bevilacqua-Linn Pragmatic Thinking and Learning: Refactor Your Wetware by Andy Hunt  Books I want to finish:</description>
    </item>
    
    <item>
      <title>Self-Study in September 2015</title>
      <link>https://alvarogarcia7.github.io/blog/2015/09/01/self-study-in-september-2015/</link>
      <pubDate>Tue, 01 Sep 2015 15:25:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/09/01/self-study-in-september-2015/</guid>
      <description>The 30 second habit with a lifelong impact I&amp;rsquo;ve read this article list of patterns, by Robyn Scott, in which it is explained why to compress information in a few ideas, investing 30 seconds to condense the article.
Tags: 30-second, habit, robyn-scott
The Strengths and Weaknesses of Extreme Programming I&amp;rsquo;ve watched this video explaining the strengths and weaknesses of extreme programming. By William Matheson
Tags: extreme-programming, xp, william-matheson, video, strength, weakness</description>
    </item>
    
    <item>
      <title>Self-Study in August 2015</title>
      <link>https://alvarogarcia7.github.io/blog/2015/08/02/self-study-in-august-2015/</link>
      <pubDate>Sun, 02 Aug 2015 21:45:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/08/02/self-study-in-august-2015/</guid>
      <description>Humble Object I&amp;rsquo;ve read the Humble Object list of patterns, by Gerard Meszaros, including:
 humble dialog humble executable humble transaction controller humble container adapter  Tags: pattern, gerard-meszaros
How you know I&amp;rsquo;ve reread this small essay by Paul Graham on storing information in our heads, based on the context. On the importance of rereading, to add more contexts to the initial one.
Tags: paul-graham, reread, read
Protected Variation: The Importance of Being Closed I&amp;rsquo;ve read this article by Craig Larman in the magazine IEEE Software &amp;gt; Design.</description>
    </item>
    
    <item>
      <title>Self-study in July 2015</title>
      <link>https://alvarogarcia7.github.io/blog/2015/07/01/self-study-in-july-2015/</link>
      <pubDate>Wed, 01 Jul 2015 01:08:10 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/07/01/self-study-in-july-2015/</guid>
      <description>I&amp;rsquo;ve grouped all small posts related to the self-study from July 2015 into a single post
Clojure made simple I&amp;rsquo;ve watched this talk by Rich Hickey at the Java One. It references the talk Easy made simple
 polymorphism without inheritance; single dispatch on the first parameter  Productive pair programming I&amp;rsquo;ve read this article about pair programming, using the driver &amp;amp; copilot technique, written by Carlos Blé
Building Automated REST APIs with Python Investigating QA automation for REST APIs, I&amp;rsquo;ve read these slides about it</description>
    </item>
    
    <item>
      <title>Books read in 2015Q2</title>
      <link>https://alvarogarcia7.github.io/blog/2015/06/30/books-read-in-2015q2/</link>
      <pubDate>Tue, 30 Jun 2015 12:49:50 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/06/30/books-read-in-2015q2/</guid>
      <description>Books I&amp;rsquo;ve read this quarter Q2 on 2015:
 Flow by Mihaly Csikszentmihalyi. Blog posts under the tag flow Growing Object-Oriented Software Guided by Tests by Steve Freeman and Nat Pryce. Blog posts under the tag goos. Read in the &amp;lsquo;@deAprendices&amp;rsquo;s reading club&amp;rsquo;. TDD in Java, by Viktor Farcic and Alex García. I&amp;rsquo;ve reviewed this book.  Books started, not yet finished (WIP):
 The Well-Grounded Java Developer by Benjamin J.</description>
    </item>
    
    <item>
      <title>Self-study in June 2015</title>
      <link>https://alvarogarcia7.github.io/blog/2015/06/03/self-study-in-june-2015/</link>
      <pubDate>Wed, 03 Jun 2015 13:13:10 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/06/03/self-study-in-june-2015/</guid>
      <description>Update: I&amp;rsquo;ve grouped all small posts related to the self-study from June 2015 into a single post
Le monitoring de flux par l’exemple I&amp;rsquo;ve read this article about monitoring, in the way of &amp;ldquo;by example&amp;rdquo;, by Cédrick Lunven and Julien Kirch (French)
The First Micro-service Architecture I&amp;rsquo;ve read this article about microservices and how they were implemented many years ago by Robert C. Martin
How I Learned to Balance My Life With Remote Work I&amp;rsquo;ve read this article about balancing life and work, either physical or remote by Michael Erasmus</description>
    </item>
    
    <item>
      <title>Video: Nothing is something</title>
      <link>https://alvarogarcia7.github.io/blog/2015/05/04/video-nothing-is-something/</link>
      <pubDate>Mon, 04 May 2015 07:43:14 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/05/04/video-nothing-is-something/</guid>
      <description>I have seen this video: [Nothing is something][video] by [Sandi Metz][sandimetz], as I saw it recommended [here][recommendation]
In the video, she talks programming in this fashion: (it is a stack, not an unordered list)
 Abstraction seeking Message centric Condition Averse Smalltalk Infected   Not here to change the language but change you
 This is a pattern I&amp;rsquo;ve also heard from [Alvaro Videla][old_sound], where he said that other, more powerful languages can change your mind and help you bring some of those concepts to your own language.</description>
    </item>
    
    <item>
      <title>Whose fault is this?</title>
      <link>https://alvarogarcia7.github.io/blog/2015/04/25/whose-fault-is-this/</link>
      <pubDate>Sat, 25 Apr 2015 14:10:31 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/04/25/whose-fault-is-this/</guid>
      <description>In the prologue of the book, while thanking everyone that has made the book possible:
 [&amp;hellip;], none of the people mentioned here would be responsible for any inaccuracy that might exist in the book, as this responsibility is exclusively mine
Mihaly Csikszentmihalyi (translated)1, prologue of &amp;ldquo;Flow&amp;rdquo;
 (More posts on this same book, here)
This connects with what Dan North said in the Craft Conf about this idea of the &amp;ldquo;I&amp;rsquo;m the only one in the company producing good quality work, the rest are not doing the same&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Talks I have attended at the Craft Conf 2015</title>
      <link>https://alvarogarcia7.github.io/blog/2015/04/25/talks-i-have-attended-at-the-craft-conf-2015/</link>
      <pubDate>Sat, 25 Apr 2015 12:25:09 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/04/25/talks-i-have-attended-at-the-craft-conf-2015/</guid>
      <description>These are the talks I&amp;rsquo;ve attended at the Craft Conf 2015:
Thursday 23th  Opening keynote by Dan North and Jessica Kerr Writing testable code - A functional programming point of view, by Alvaro Videla Coding Culture, by Sven Peters OnConnectionLost: the life of an offline web application, by Stefanie Grewenig and Johannes Thönes Concurrency: It&amp;rsquo;s harder (and easier) than you think, by Paul Butcher Testing and Integration (the remix), by Inés Sombra Beyond Features: Rethinking agile planning and tracking, by Dan North Closing keynote by Alf Rehn  Friday 24th  Opening keynote: The New New Software development game: Containers, Microservices and Contract tests, by Mary Poppendieck Apprenticeship patterns, revisited, by Dave Hoover Interaction Driven Design, by Sandro Mancuso The hidden dimension of refactoring, by Michael Feathers Why is an API like a puppy, by Adewale Oshineye Microservice antipatterns, by Tammer Saleh  I couldn&amp;rsquo;t attend the last talk nor the keynote as I had to get to the airport</description>
    </item>
    
    <item>
      <title>Books read in 2015Q1</title>
      <link>https://alvarogarcia7.github.io/blog/2015/03/31/books-read-in-2015q1/</link>
      <pubDate>Tue, 31 Mar 2015 12:49:49 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/03/31/books-read-in-2015q1/</guid>
      <description>Books I&amp;rsquo;ve read this quarter Q1 on 2015, as inspired by Manuel, on this post:
 Fifty Quick Ideas to Improve your User Stories, by Gojko Adzic and David Evans Fun retrospectives by Taina Caetano and Paulo Caroli Implementation patterns by Kent Beck Clean code by Robert C. Martin; again  Books started, not yet finished (WIP):
 The Well-Grounded Java Developer, by Benjamin J. Evans and Martijn Verburg Refactoring, by Martin Fowler, (with Kent Beck, John Brant, William Opdyke, and Don Roberts) Growing Object-Oriented Software Guided by Tests, by Steve Freeman and Nat Pryce Flow, by Mihaly Csikszentmihalyi  (Note: I&amp;rsquo;ve written this list a posteriori, in May 2015)</description>
    </item>
    
  </channel>
</rss>
