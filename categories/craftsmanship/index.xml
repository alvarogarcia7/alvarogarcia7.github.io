<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>craftsmanship on The long way through Software Craftsmanship</title>
    <link>https://alvarogarcia7.github.io/categories/craftsmanship/</link>
    <description>Recent content in craftsmanship on The long way through Software Craftsmanship</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 01 Jun 2016 21:47:19 +0000</lastBuildDate><atom:link href="https://alvarogarcia7.github.io/categories/craftsmanship/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Self-Study in June 2016</title>
      <link>https://alvarogarcia7.github.io/blog/2016/06/01/self-study/</link>
      <pubDate>Wed, 01 Jun 2016 21:47:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2016/06/01/self-study/</guid>
      <description>DiversityMediocrityIllusion I&amp;rsquo;ve read this article by Martin Fowler (on his bliki) about the diversity in conferences and the profession. How it is our job to incentive a positive feedback cycle that brings more diverse people into the workforce.
Explains how they do it in ThoughtWorks and how they have changed in the last decade.
Tags: martin-fowler, diversity, gender, workforce, conference, profession, bliki
What do cryptic Github comments mean? I&amp;rsquo;ve read this article by Alex Beregszaszi on the abbreviations used in Github comments and pull requests.</description>
    </item>
    
    <item>
      <title>Self-Study in April 2016</title>
      <link>https://alvarogarcia7.github.io/blog/2016/04/01/self-study/</link>
      <pubDate>Fri, 01 Apr 2016 00:08:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2016/04/01/self-study/</guid>
      <description>Deliberate Practice: What It Is and Why You Need It I&amp;rsquo;ve read this article by Corbett Barr on what is deliberate practice and why it is needed to become an expert in a given domain field.
The four essential components:
 Motivation Tailored (practice) Feedback Repetion  Tags: corbett-barr, deliberate-practice, expert, practice, anders-ericsson, talent, professional-development, career
10 Features I Wish Java Would Steal From the Kotlin Language I&amp;rsquo;ve read this list of features that the Kotlin Language has that would be an improvement for the Java language.</description>
    </item>
    
    <item>
      <title>Self-Study in March 2016</title>
      <link>https://alvarogarcia7.github.io/blog/2016/03/02/self-study-in-march-2016/</link>
      <pubDate>Wed, 02 Mar 2016 12:58:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2016/03/02/self-study-in-march-2016/</guid>
      <description>Learning Programming Isn’t That Hard, Deep Work Is Hard I&amp;rsquo;ve read this article by Benedict Fritz on two types of work (i.e., deep and shallow) and how programming is of the deep type. He links the difficulty of learning to program to the difficulty of practicing deep work.
Tags: analogy, benedict-fritz, deep-work, shallow-work, learn-to-program, psychology
BeCodeWeek by Yeray Darias I&amp;rsquo;ve read this category of posts by Yeray Darias about his BeCodeWeek, a desk-surfing experience at BeCode.</description>
    </item>
    
    <item>
      <title>Craftsmanship analogy</title>
      <link>https://alvarogarcia7.github.io/blog/2015/07/27/craftsmanship-analogy/</link>
      <pubDate>Mon, 27 Jul 2015 00:41:26 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/07/27/craftsmanship-analogy/</guid>
      <description>I&amp;rsquo;ve found this set of tweets about the craftsmanship analogy by Sarah Mei:</description>
    </item>
    
    <item>
      <title>Practical Object-Oriented Design in Ruby: Chapter 4</title>
      <link>https://alvarogarcia7.github.io/blog/2015/07/26/practical-object-oriented-design-in-ruby-chapter-4/</link>
      <pubDate>Sun, 26 Jul 2015 22:40:29 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/07/26/practical-object-oriented-design-in-ruby-chapter-4/</guid>
      <description>We&amp;rsquo;ve read the fourth chapter from the Practical Object-Oriented Design in Ruby, by Sandi Metz.
These are the concepts and links brought up during the discussion:
 The craftsmanship analogy, as exposed in these tweets Difference between function and method What vs How (also present in the GOOS)  </description>
    </item>
    
    <item>
      <title>Self-study in July 2015</title>
      <link>https://alvarogarcia7.github.io/blog/2015/07/01/self-study-in-july-2015/</link>
      <pubDate>Wed, 01 Jul 2015 01:08:10 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/07/01/self-study-in-july-2015/</guid>
      <description>I&amp;rsquo;ve grouped all small posts related to the self-study from July 2015 into a single post
Clojure made simple I&amp;rsquo;ve watched this talk by Rich Hickey at the Java One. It references the talk Easy made simple
 polymorphism without inheritance; single dispatch on the first parameter  Productive pair programming I&amp;rsquo;ve read this article about pair programming, using the driver &amp;amp; copilot technique, written by Carlos Blé
Building Automated REST APIs with Python Investigating QA automation for REST APIs, I&amp;rsquo;ve read these slides about it</description>
    </item>
    
    <item>
      <title>Self-study in May 2015</title>
      <link>https://alvarogarcia7.github.io/blog/2015/05/09/self-study-in-may-2015/</link>
      <pubDate>Sat, 09 May 2015 16:41:10 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/05/09/self-study-in-may-2015/</guid>
      <description>Update: I&amp;rsquo;ve grouped all small posts related to the self-study from May 2015 into a single post
Programmer passion considered harmful I&amp;rsquo;ve read this article on why programmer passion could be negative. The title is similar to a paper by Dijkstra.
Software Craftsmanship: Are Bootcamps Enough? I&amp;rsquo;ve read this article on software craftsmanship, development bootcamps and passion by Ken Auer
Improve your development environments with virtualization I have seen this video: Improve your development environments with virtualization by Luke Sneeringer.</description>
    </item>
    
    <item>
      <title>The Guardian of the Source</title>
      <link>https://alvarogarcia7.github.io/blog/2015/04/17/the-guardian-of-the-source/</link>
      <pubDate>Fri, 17 Apr 2015 22:01:48 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/04/17/the-guardian-of-the-source/</guid>
      <description>Overheard today at the office, while they were discussing the approval of a pull request:
 [Pull request reviewer] - I&amp;rsquo;m sorry, can&amp;rsquo;t approve this: I don&amp;rsquo;t really agree with this design. Isn&amp;rsquo;t there an alternative for this?
[Pull request author] - [redacted], of course you don&amp;rsquo;t, you&amp;rsquo;re the guardian of the source
[PR reviewer] - Well, sometimes I&amp;rsquo;m a bit picky about introducing bad code into our codebase.
 This has made me think about Gandalf blocking the path of Balrog Demon, shouting &amp;ldquo;[you shall not pass][you-shall-not-pass-meme]&amp;rdquo; while on top of the bridge.</description>
    </item>
    
    <item>
      <title>Open Space: Code reviews</title>
      <link>https://alvarogarcia7.github.io/blog/2015/03/16/open-space-code-reviews/</link>
      <pubDate>Mon, 16 Mar 2015 22:44:42 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/03/16/open-space-code-reviews/</guid>
      <description>Today we&amp;rsquo;ve discussed about code reviews on this open space
Notes These are my notes, in no particular order:
 reduce information silos all around the company, as everyone [technical] can participate in these events raise the &amp;ldquo;just arrived&amp;rdquo; people&amp;rsquo;s knowledge [Difficult to hit the ground up and running, but these code review sessions can help] invest one person as &amp;lsquo;sheriff&amp;rsquo; for the sprint: they will take care of static analysis tools (such as sonar) and continuous integration (CI; such as jenkins).</description>
    </item>
    
    <item>
      <title>Polishing your tools</title>
      <link>https://alvarogarcia7.github.io/blog/2015/02/22/polishing-your-tools/</link>
      <pubDate>Sun, 22 Feb 2015 09:30:20 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/02/22/polishing-your-tools/</guid>
      <description>The toolsmith Frederick P Brooks, Jr quoted / explained a theory explained by Mills and Baker1 around 1971-72:
 Chapter 3: The Surgical Team
[&amp;hellip;] but the team be organized like a surgical team rather than a hog-butchering team. That is, instead of each member cutting away on the problem, one does the cutting and the others give him[her] every support that will enhance his[her] effectiveness and productivity.
[&amp;hellip;]
Brooks, F.</description>
    </item>
    
  </channel>
</rss>
