<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>The long way through Software Craftsmanship</title>
    <link>https://alvarogarcia7.github.io/categories/code/index.xml</link>
    <description>Recent content on The long way through Software Craftsmanship</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="https://alvarogarcia7.github.io/categories/code/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Self-Study in June 2017</title>
      <link>https://alvarogarcia7.github.io/blog/2017/06/01/self-study-june-2017/</link>
      <pubDate>Thu, 01 Jun 2017 11:32:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2017/06/01/self-study-june-2017/</guid>
      <description>

&lt;h2 id=&#34;so-hey-you-should-stop-using-texts-for-two-factor-authentication&#34;&gt;So Hey You Should Stop Using Texts for Two-Factor Authentication&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://www.wired.com/2016/06/hey-stop-using-texts-two-factor-authentication/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; explaining why messages over SMS should not be used for the &amp;lsquo;what you own&amp;rsquo; in 2FA.&lt;/p&gt;

&lt;p&gt;Tags: andy-greenberg, 2fa, sms, security, warning&lt;/p&gt;

&lt;h2 id=&#34;why-i-d-never-work-for-google-twitter-or-facebook&#34;&gt;Why I&amp;rsquo;d never work for Google, Twitter, or Facebook&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://naildrivin5.com/blog/2011/08/01/why-i-wont-work-for-google-twitter-facebook.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by David Bryant Copeland on why he would never work for these three companies: he doesn&amp;rsquo;t share the principles and values from these companies.&lt;/p&gt;

&lt;p&gt;Tags: david-copeland, google, twitter, facebook, job-satisfaction, commitment&lt;/p&gt;

&lt;h2 id=&#34;design-thinking-needs-to-think-bigger&#34;&gt;Design Thinking Needs To Think Bigger&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://www.fastcodesign.com/90112320/design-thinking-needs-to-think-bigger&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by STEVE VASSALLO on systems thinking and design thinking.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;What makes a system a system rather than just a collection of parts is that the components are interconnected and interdependent&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tags: steve-vassallo, design-thinking, system-thinking, mental-model, emergence-point, leverage-point, iceberg-model&lt;/p&gt;

&lt;h2 id=&#34;cobol-is-everywhere-who-will-maintain-it&#34;&gt;COBOL Is Everywhere. Who Will Maintain It?&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://thenewstack.io/cobol-everywhere-will-maintain/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by David Cassel explaining the state of the COBOL systems at some banks and the difficulty of finding young COBOL programmers.&lt;/p&gt;

&lt;p&gt;Tags: david-cassel, cobol, youth, team-management, hiring, bank, java, mainframe, legacy-system&lt;/p&gt;

&lt;h2 id=&#34;you-re-too-busy-you-need-a-shultz-hour&#34;&gt;You’re Too Busy. You Need a ‘Shultz Hour.’&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://www.nytimes.com/2017/04/18/opinion/youre-too-busy-you-need-a-shultz-hour.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by David Leonhardt, about the Shultz Hour: time set aside to not be busy, so you can set aside the tactical topics and focus on the strategic topics.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;“You waste years by not being able to waste hours.”&lt;/p&gt;

&lt;p&gt;Amos Tversky  (as Michael Lewis describes in his THE UNDOING PROJECT)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tags: david-leonhardt, busyness, time-management, shultz-hour, connectedness, social-media, quote&lt;/p&gt;

&lt;h1 id=&#34;avoid-these-35-habits-that-lead-to-unmaintainable-code&#34;&gt;Avoid these 35 habits that lead to unmaintainable code&lt;/h1&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://www.linkedin.com/pulse/avoid-35-habits-lead-unmaintainable-code-christian-maioli-mackeprang&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; about habits that make writing software more difficult:&lt;/p&gt;

&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;Saying “I’ll fix it later”, and never doing it&lt;/li&gt;
&lt;li&gt;Insisting on a one-liner solution&lt;/li&gt;
&lt;li&gt;Making pointless optimizations&lt;/li&gt;
&lt;li&gt;Convincing yourself that styling issues are not that important&lt;/li&gt;
&lt;li&gt;Sweeping things under the rug&lt;/li&gt;
&lt;li&gt;Using names that don’t add information&lt;/li&gt;
&lt;li&gt;Ignoring proven best practices&lt;/li&gt;
&lt;li&gt;Abandoning plans too early&lt;/li&gt;
&lt;li&gt;Insisting on a plan that has little chance of working&lt;/li&gt;
&lt;li&gt;Working on your own all the time&lt;/li&gt;
&lt;li&gt;Refusing to write bad code&lt;/li&gt;
&lt;li&gt;Blaming others&lt;/li&gt;
&lt;li&gt;Not sharing with your team what you’ve learned&lt;/li&gt;
&lt;li&gt;Being too slow on giving feedback to managers/clients&lt;/li&gt;
&lt;li&gt;Not using Google enough&lt;/li&gt;
&lt;li&gt;Overvaluing your personal style&lt;/li&gt;
&lt;li&gt;Having a personal attachment to your code&lt;/li&gt;
&lt;li&gt;Not knowing how to optimize&lt;/li&gt;
&lt;li&gt;Using the wrong tool for the job&lt;/li&gt;
&lt;li&gt;Not bothering with mastering your tools and IDE&lt;/li&gt;
&lt;li&gt;Ignoring error messages&lt;/li&gt;
&lt;li&gt;Romanticizing your developer toolkit&lt;/li&gt;
&lt;li&gt;Hardcoding values instead of making them configurable&lt;/li&gt;
&lt;li&gt;Reinventing the wheel all the time&lt;/li&gt;
&lt;li&gt;Blindly copy/pasting code&lt;/li&gt;
&lt;li&gt;Not taking the time to learn how things really work&lt;/li&gt;
&lt;li&gt;Having excessive confidence in your own code&lt;/li&gt;
&lt;li&gt;Not thinking about the trade-offs of each design, solution, or library&lt;/li&gt;
&lt;li&gt;Not getting help when you’re stuck&lt;/li&gt;
&lt;li&gt;Writing tests to pass&lt;/li&gt;
&lt;li&gt;Disregarding performance testing for critical cases&lt;/li&gt;
&lt;li&gt;Not checking that your build works&lt;/li&gt;
&lt;li&gt;Pushing large changes late, or leaving after making a large push&lt;/li&gt;
&lt;li&gt;Disowning code you wrote&lt;/li&gt;
&lt;li&gt;Ignoring the nonfunctional requirements&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tags: christian-maioli-mackeprang, maintanability, code, listicle, habit&lt;/p&gt;

&lt;h2 id=&#34;javascript-a-first-class-language-at-last&#34;&gt;JavaScript — A First-Class Language At Last&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://www.linkedin.com/pulse/javascript-first-class-language-atlast-tom-goldenberg&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Tom Goldenberg defending javascript, citing sources on why it is a first-class language,
the amount of job offers, and the state of the art in NodeJS.&lt;/p&gt;

&lt;p&gt;Tags: tom-goldenberg, javascript, java, comparison, first-class, language, analysis&lt;/p&gt;

&lt;h2 id=&#34;why-the-8-hour-workday-doesn-t-work&#34;&gt;Why the 8-Hour Workday Doesn&amp;rsquo;t Work&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://www.linkedin.com/pulse/why-8-hour-workday-doesnt-work-dr-travis-bradberry&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; defending the removal of the 8-hour workday, preferring the division of time in slots.
In the article, 52 minutes of highly focused work then 17 minutes of rest.&lt;/p&gt;

&lt;p&gt;The key idea is the work-rest, no matter how big those slots are.&lt;/p&gt;

&lt;p&gt;Gives tips on how to separate both, some other tips for improving your performance.&lt;/p&gt;

&lt;p&gt;By Travis Bradberry&lt;/p&gt;

&lt;p&gt;Tags: time-management, pomodoro-technique, travis-bradberry, time, workday&lt;/p&gt;

&lt;h2 id=&#34;the-dark-side-of-extreme-productivity-and-how-to-steer-back-toward-the-light-https-medium-freecodecamp-com-the-dark-side-of-extreme-productivity-2a31ff7a4cd2&#34;&gt;&lt;a href=&#34;https://medium.freecodecamp.com/the-dark-side-of-extreme-productivity-2a31ff7a4cd2&#34; target=&#34;_blank&#34;&gt;The dark side of extreme productivity, and how to steer back toward the light&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Beau Carnes on how productivity can have a downside, how it can affect your healthy lifestyle.
Explains effective vs efficient, productivity, silent retreat, prayer or meditation&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The key is not to prioritize what’s on your schedule, but to schedule your priorities&lt;/p&gt;

&lt;p&gt;Stephen Covey&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tags: beau-carnes, productivity, quote, stephen-covey, sustainable-pace&lt;/p&gt;

&lt;h2 id=&#34;dejé-de-leer&#34;&gt;Dejé de leer&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://culto.latercera.com/2017/03/15/deje-de-leer/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Catalina Bu on the tsundoku and how to read more. (In Spanish)&lt;/p&gt;

&lt;p&gt;Tags: catalina-bu, tsundoku, reading, time-management, spanish&lt;/p&gt;

&lt;h2 id=&#34;hacked-in-translation-from-subtitles-to-complete-takeover&#34;&gt;Hacked in Translation – from Subtitles to Complete Takeover&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.checkpoint.com/2017/05/23/hacked-in-translation/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; about a vector to getting to user&amp;rsquo;s machines through the video player, using subtitle files.
by Check Point Research Team.&lt;/p&gt;

&lt;p&gt;Tags: check-point-research-team, security, vulnerability, vector, attack, subtitle, video-player&lt;/p&gt;

&lt;h2 id=&#34;8-teamwork-myths-to-tackle-at-your-office&#34;&gt;8 Teamwork Myths To Tackle At Your Office&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.trello.com/8-teamwork-myths-to-tackle-at-your-office&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Leah Ryder on remote work myths.&lt;/p&gt;

&lt;p&gt;Tags: leah-ryder, productivity, myth, remote, remote-work&lt;/p&gt;

&lt;h2 id=&#34;why-i-think-elm-is-the-future-of-front-end-development&#34;&gt;Why I think Elm is the Future of Front End Development&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@rgoomar/why-i-think-elm-is-the-future-of-front-end-development-21e9b091fa05&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Rishi Goomar comparing reactredux to elm, comparing javascript to elm.&lt;/p&gt;

&lt;p&gt;Tags: rishi-goomar, comparison, elm, javascript, react, redux, javascript-fatigue&lt;/p&gt;

&lt;h2 id=&#34;los-viejos-programadores-nunca-mueren-y-silicon-valley-se-está-dando-cuenta-de-ello&#34;&gt;Los viejos programadores nunca mueren, y Silicon Valley se está dando cuenta de ello&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://m.xataka.com/empresas-y-economia/los-viejos-programadores-nunca-mueren-y-silicon-valley-se-esta-dando-cuenta-de-ello&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Javier Pastor on the age of the programmers in Silicon Valley. In Spanish.&lt;/p&gt;

&lt;p&gt;Tags: spanish, javier-pastor, age, programmer, career-manager, silicon-valley&lt;/p&gt;

&lt;h2 id=&#34;creating-a-tensorflow-powered-ing-api-client&#34;&gt;Creating a TensorFlow-powered ING API client&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@donflopez/cracking-the-ing-api-with-tensorflow-9681ae7dc249&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Francisco López on how he has implemented a small bot to click the virtual keyboard and connect to the bank website.&lt;/p&gt;

&lt;p&gt;Tags: ing-direct, francisco-lopez, bot, opencv, tensorflow, machine-learning, python, banking, open-banking-data&lt;/p&gt;

&lt;h2 id=&#34;be-a-good-mentor-not-a-dickhead&#34;&gt;Be a good mentor, not a dickhead&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Edaqa Mortoray about traits of a mentor. &lt;a href=&#34;https://dev.to/mortoray/be-a-good-mentor-not-a-dickhead&#34; target=&#34;_blank&#34;&gt;https://dev.to/mortoray/be-a-good-mentor-not-a-dickhead&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tags: edaqa-mortoray, mentor, trait, skill, mentorship, apprentice, apprenticeship&lt;/p&gt;

&lt;h2 id=&#34;the-largest-git-repo-on-the-planet-https-blogs-msdn-microsoft-com-bharry-2017-05-24-the-largest-git-repo-on-the-planet&#34;&gt;&lt;a href=&#34;https://blogs.msdn.microsoft.com/bharry/2017/05/24/the-largest-git-repo-on-the-planet/&#34; target=&#34;_blank&#34;&gt;The largest Git repo on the planet&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by  Brian Harry on how Microsoft manages one of its big repositories. Explains how they have virtualized the git folder and the git workspace at Microsoft using gvfs. Explains how they have performed the improvements necessary to make it useful and usable to programmers.&lt;/p&gt;

&lt;p&gt;They have support for clients, but what about Linux?&lt;/p&gt;

&lt;p&gt;Tags:  brian-harry, microsoft, continous-delivery, linux, windows, gvfs, repository, monorepo&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Modifying titles in a Trello Board</title>
      <link>https://alvarogarcia7.github.io/blog/2017/03/16/modifying-titles-in-a-trello-board/</link>
      <pubDate>Thu, 16 Mar 2017 00:36:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2017/03/16/modifying-titles-in-a-trello-board/</guid>
      <description>

&lt;p&gt;A teammate and I have created a &lt;a href=&#34;https://github.com/alvarogarcia7/javascript-simple-sessions/tree/master/trello-cards&#34; target=&#34;_blank&#34;&gt;small tool to modify the titles of the trello card in a trello board&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;technical-description&#34;&gt;Technical description&lt;/h2&gt;

&lt;p&gt;It works by applying a function to the existing title (because we wanted to remove a prefix from the existing title).&lt;/p&gt;

&lt;p&gt;The modification is done, not through the API, but simulating user interaction:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Click to edit the card&lt;/li&gt;
&lt;li&gt;Input the new title&lt;/li&gt;
&lt;li&gt;Save&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The full code is available &lt;a href=&#34;https://github.com/alvarogarcia7/javascript-simple-sessions/tree/master/trello-cards&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;This has been a great example of working with legacy code, as the tools to work with the existing product are not the ones you would like to have and an imaginative solution provides a way out of the tar pit.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Self-Study in June 2016</title>
      <link>https://alvarogarcia7.github.io/blog/2016/06/01/self-study/</link>
      <pubDate>Wed, 01 Jun 2016 21:47:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2016/06/01/self-study/</guid>
      <description>

&lt;h2 id=&#34;diversitymediocrityillusion&#34;&gt;DiversityMediocrityIllusion&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by &lt;a href=&#34;http://martinfowler.com/bliki/DiversityMediocrityIllusion.html&#34; target=&#34;_blank&#34;&gt;Martin Fowler&lt;/a&gt; (on his bliki) about the diversity in conferences and the profession. How it is our job to incentive a positive feedback cycle that brings more diverse people into the workforce.&lt;/p&gt;

&lt;p&gt;Explains how they do it in ThoughtWorks and how they have changed in the last decade.&lt;/p&gt;

&lt;p&gt;Tags: martin-fowler, diversity, gender, workforce, conference, profession, bliki&lt;/p&gt;

&lt;h2 id=&#34;what-do-cryptic-github-comments-mean&#34;&gt;What do cryptic Github comments mean?&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.freecodecamp.com/what-do-cryptic-github-comments-mean-9c1912bcc0a4&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Alex Beregszaszi on the abbreviations used in Github comments and pull requests.&lt;/p&gt;

&lt;p&gt;Tags: github, pull-request, alex-beregszaszi, abbreviation&lt;/p&gt;

&lt;h2 id=&#34;6-erreurs-à-éviter-en-tant-que-développeur-freelance&#34;&gt;6 erreurs à éviter en tant que développeur freelance&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@adrienjoly/enseignements-apr%C3%A8s-1-an-d-erreurs-en-tant-que-d%C3%A9veloppeur-freelance-916f855efd9b&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; (in French) by Adrien Joly on the mistakes freelancers shouldn&amp;rsquo;t do when working with clients.&lt;/p&gt;

&lt;p&gt;Tags: adrien-joly, freelance, list, mistake, french&lt;/p&gt;

&lt;h2 id=&#34;agile-methodology-s-promise-seems-to-fall-short-in-the-face-of-reality&#34;&gt;Agile Methodology’s Promise Seems To Fall Short in the Face of Reality&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@pagalvin/agile-methodology-s-promise-seems-to-fall-short-in-the-face-of-reality-b16d3e775dbe&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; on an experience by Paul Galvin on some failing agile implementations.&lt;/p&gt;

&lt;p&gt;Tags: paul-galvin, agile, reality, agility, team-management&lt;/p&gt;

&lt;h2 id=&#34;how-sharing-other-people-s-feelings-can-make-you-sick&#34;&gt;How sharing other people’s feelings can make you sick&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://www.newscientist.com/article/mg23030732-900-how-sharing-other-peoples-feelings-can-make-you-sick/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Emma Young on how being empathic to others can make you sick on their own illness. How illness can be socially transmitted, by loved ones or even by strangers.&lt;/p&gt;

&lt;p&gt;How algorithms (that display news) can affect your own well-being and how this is reduced by using compassion instead of empathy.&lt;/p&gt;

&lt;p&gt;Borders on the difference of empathy vs compassion.&lt;/p&gt;

&lt;p&gt;Tags: emma-young, empathy, compassion, feeling, team-management, vent-free-zone, sickness, illness&lt;/p&gt;

&lt;h2 id=&#34;aws-lambda-for-beginners&#34;&gt;AWS Lambda for Beginners&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://dzone.com/articles/aws-lambda-for-beginners&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Mashooq Badar on an introduction to AWS Lambdas, where the basics are covered until getting a Lambda service in production. Using Python or Java.&lt;/p&gt;

&lt;p&gt;Tags: mashooq-badar, serverless, aws, aws-lambda, lambda, python, java, devops, serverless-architecture&lt;/p&gt;

&lt;h2 id=&#34;advanced-logging-with-the-javascript-console&#34;&gt;Advanced Logging with the JavaScript Console&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched &lt;a href=&#34;https://egghead.io/series/js-console-for-power-users&#34; target=&#34;_blank&#34;&gt;this course&lt;/a&gt; by Mykola Bilokonsky at egghead.io.&lt;/p&gt;

&lt;p&gt;In it, he covers the following methods on the console:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;warn&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;error&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;info&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;debug&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The amount of parameters does not matter, it will put a space in between. printing an object will print its values&lt;/p&gt;

&lt;p&gt;console.log with the C&amp;rsquo;s printf syntax, as long as the first parameter is a string&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span&gt;&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;o&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;an&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;object&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;CSS&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;group&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;groupCollapsed&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;groupEnd&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Tags: mykola-bilokonsky, logging, javascript, console, egghead, course&lt;/p&gt;

&lt;h2 id=&#34;after-work-is-what-determines-your-future-spend-one-hour-per-day-doing-these-5-things-and-your-life-will-change-forever&#34;&gt;After work, is what determines your future! Spend one hour per day doing these 5 things and your life will change forever!&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://www.linkedin.com/pulse/after-work-what-determines-your-future-spend-one-hour-sundaram&#34; target=&#34;_blank&#34;&gt;this post&lt;/a&gt; by Kalyana Sundaram on the activities we do at night, after a day&amp;rsquo;s work and how they influence our learning.&lt;/p&gt;

&lt;p&gt;Tags: kalyana-sundaram, after-work, career, career-management, learning, lifelong-learning&lt;/p&gt;

&lt;h2 id=&#34;expert-resumé-driven-development&#34;&gt;Expert Resumé Driven Development&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://dev.to/tra/expert-resum-driven-development&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Tariq Ali, where he explains the Resume-Driven Development, as a subset of the Principal-Agent Problem:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The Principal (management) hires an Agent (a developer) to build a program and
allow the Agent to choose the tech stack. But the Agent&amp;rsquo;s interest (making his resumé
more impressive) can be orthogonal to the Principal&amp;rsquo;s interest (producing a great
product by using the &amp;ldquo;right tool&amp;rdquo; for the job). If the Principal allows the Agent to
do as he wish, then the Agent will do as he wishes, thereby leading to the Agent to
prosper and the Principal to suffer.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;References the &lt;a href=&#34;http://www.gartner.com/technology/research/methodologies/hype-cycle.jsp&#34; target=&#34;_blank&#34;&gt;Gartner Hype Cycle&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tags: tariq-ali, resume-driven-development, hype, cycle, hype-cycle, career, professional-career&lt;/p&gt;

&lt;h2 id=&#34;resume-driven-development&#34;&gt;Resume Driven Development&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://radar.oreilly.com/2014/10/resume-driven-development.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by  Mike Loukides about the problem of finding a technical person based on CVs and the &lt;a href=&#34;https://en.wikipedia.org/wiki/Law_of_the_instrument&#34; target=&#34;_blank&#34;&gt;Law of the instrument&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;[&amp;hellip;] the inability of a technical team to specify what they really want
 (a developer with good programming taste and instincts), and
 instead hiring someone who has a particular skill or credential [&amp;hellip;]&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tags: law-instrument, mike-loukides, cv, career, resume-driven-development&lt;/p&gt;

&lt;h2 id=&#34;why-britain-banned-mobile-apps&#34;&gt;Why Britain banned mobile apps&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://govinsider.asia/smart-gov/why-britain-banned-mobile-apps/&#34; target=&#34;_blank&#34;&gt;this interview&lt;/a&gt; with Ben Terrett, former design chief at the UK Government Digital Services (GDS), that explains why they prefer webapps rather than native (mobile) apps: it&amp;rsquo;s a matter of cost, having to maintain and update so many mobile versions, versus a single one for the webapp.&lt;/p&gt;

&lt;p&gt;Also talks about user research and productagile teams inside the GDS.&lt;/p&gt;

&lt;p&gt;The interview is written by Joshua Chambers.&lt;/p&gt;

&lt;p&gt;Tags: joshua-chambers, ben-terrett, gds, webapp, mobile-app, native-app, product-team, agile, government, uk&lt;/p&gt;

&lt;h2 id=&#34;most-tech-interviews-suck-the-only-4-questions-that-matter&#34;&gt;Most Tech Interviews Suck — The Only 4 Questions That Matter&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/lightspeed-venture-partners/most-tech-interviews-suck-the-only-4-questions-that-matter-1a71181ef4d4&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; on why the majority of technical interviews could be improved, asking four questions instead of following other practices. By Aaron Batalion&lt;/p&gt;

&lt;p&gt;Tags: aaron-batalion, tech-interview, hiring, team&lt;/p&gt;

&lt;h2 id=&#34;why-socrates-uk-is-not-just-a-conference-for-software-craftsmen&#34;&gt;Why Socrates UK is not just a conference for software craftsmen&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://codurance.com/2016/06/07/why-socrates-uk-is-not-just-a-conference-for-software-craftsmen/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by  Giulia Mantuano on the SoCraTes UK 2016 conference, where she gave a talk on the importance of design in our environment, where we craft beautiful interfaces in our programs.&lt;/p&gt;

&lt;p&gt;Tags: socrates, socrates-uk, socrates-uk-2016, giulia-mantuano, design&lt;/p&gt;

&lt;h2 id=&#34;360-million-reasons-to-destroy-all-passwords&#34;&gt;360 million reasons to destroy all passwords&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.freecodecamp.com/360-million-reasons-to-destroy-all-passwords-9a100b2b5001&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Quincy Larson about the insecurity of passwords, both managed by vaults (like LastPass) or remembered ones. They all are susceptible to being discovered, leaked or shared to other sites / accounts.&lt;/p&gt;

&lt;p&gt;The author suggests to use passwordless login, which sends a link to your email account, which allows you to log in to the application&lt;/p&gt;

&lt;p&gt;Tags: passwordless, lastpass, vault, password-vault, quincy-larson, hack, leak, password&lt;/p&gt;

&lt;h2 id=&#34;a-brutally-honest-rejection-letter-by-an-hr&#34;&gt;A Brutally Honest Rejection Letter by an HR&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/the-coffeelicious/a-brutally-honest-rejection-letter-by-an-hr-493164bc5205&#34; target=&#34;_blank&#34;&gt;this parody letter&lt;/a&gt; by Nish Rao, on the real reasons so HR uses these templates for rejecting candidates&lt;/p&gt;

&lt;p&gt;Tags: nish-rao, parody, rejection-letter, hr, human-resources&lt;/p&gt;

&lt;h2 id=&#34;passwords-are-obsolete&#34;&gt;Passwords are Obsolete&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@ninjudd/passwords-are-obsolete-9ed56d483eb&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Justin Balthrop on how to set up a passwordless system and how is that related to the Heartbleed bug.&lt;/p&gt;

&lt;p&gt;Tags: passwordless, justin-balthrop, heartbleed, password&lt;/p&gt;

&lt;h2 id=&#34;server-side-swift-vs-the-other-guys-2-speed&#34;&gt;Server Side Swift vs. The Other Guys — 2: Speed&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@qutheory/server-side-swift-vs-the-other-guys-2-speed-ca65b2f79505&#34; target=&#34;_blank&#34;&gt;this comparison&lt;/a&gt; of languages and frameworks (Vapor (Swift), Ruby on Rails (Ruby), Laravel (PHP), Lumen (PHP), Express (JavaScript), Django (Python), Flask (Python), Spring (Java), Nancy (C#), Go (Pure Go, no framework)) and to benchmark Plaintext, JSON, Random SQLite Fetch.&lt;/p&gt;

&lt;p&gt;Tags: comparison, qutheory, speed, swift&lt;/p&gt;

&lt;h2 id=&#34;compilers-as-assistants&#34;&gt;Compilers as Assistants&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://elm-lang.org/blog/compilers-as-assistants&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Evan Czaplicki on seeing the compiler as an assistant to your work, instead of an adversary. Of how the compiler should give the most useful errors and warnings.&lt;/p&gt;

&lt;p&gt;He also explains what features have been removed from the Elm language in 0.16.&lt;/p&gt;

&lt;p&gt;Tags: compiler, assistant, adversary, enemy, elm, elm-compiler, evan-czaplicki&lt;/p&gt;

&lt;h2 id=&#34;craftsmanship-design-and-code&#34;&gt;Craftsmanship, design, and code&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.freecodecamp.com/craftsmanship-design-and-code-6d93eba3e7fe&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Jonathan Z. White about the relation between design and code and what craftsmanship is about.&lt;/p&gt;

&lt;p&gt;Suggests learning more about the counterpart (design vs code), to better understand the activity of creating software as a whole. For developers, suggests a few activities to improve (e.g., read better code, write unit tests, analyze code). Cites that the only way of measuring progress is comparing where you are today compared to some time ago.&lt;/p&gt;

&lt;p&gt;Tags: craftsmanship, jonathan-white, design, code, improving&lt;/p&gt;

&lt;h2 id=&#34;the-programmer-s-oath&#34;&gt;The Programmer&amp;rsquo;s Oath&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.cleancoder.com/uncle-bob/2015/11/18/TheProgrammersOath.html&#34; target=&#34;_blank&#34;&gt;this oath&lt;/a&gt; by Robert C Martin.&lt;/p&gt;

&lt;p&gt;Tags: oath, programmer, craft, manifesto, robert-martin, uncle-bob&lt;/p&gt;

&lt;h2 id=&#34;intel-x86s-hide-another-cpu-that-can-take-over-your-machine-you-can-t-audit-it&#34;&gt;Intel x86s hide another CPU that can take over your machine (you can&amp;rsquo;t audit it)&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://boingboing.net/2016/06/15/intel-x86-processors-ship-with.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Damien Zammit on the Intel Management Engine (ME), a hardware system that is embedded in the newer Intel chipsets. Its function is to provide low-level management services. ME (like Active Management Technology [AMT] in the past), provides great services, but has access to any memory location and to the TCP/IP stack, without any control from the operating system.&lt;/p&gt;

&lt;p&gt;The firmware is currently checked before booting, but it is highly-valuable as a security risk, as it has full access to the physical hardware.&lt;/p&gt;

&lt;p&gt;Tags: security, damien-zammit, intel-management-engine, active-management-technology, me, amt, tcp-ip, backdoor&lt;/p&gt;

&lt;h2 id=&#34;programming-doesn-t-require-talent-or-even-passion&#34;&gt;Programming Doesn’t Require Talent or Even Passion&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@WordcorpGlobal/programming-doesnt-require-talent-or-even-passion-11422270e1e4&#34; target=&#34;_blank&#34;&gt;this list&lt;/a&gt; of examples of why programming doesn&amp;rsquo;t require talent or passion, by Tony You&lt;/p&gt;

&lt;p&gt;Tags: talent, passion, list, programming, tony-you&lt;/p&gt;

&lt;h2 id=&#34;getting-from-to&#34;&gt;Getting from ⭐️⭐️ to ⭐️⭐️⭐️⭐️⭐️&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://m.signalvnoise.com/getting-from-%EF%B8%8F-%EF%B8%8F-to-%EF%B8%8F-%EF%B8%8F-%EF%B8%8F-%EF%B8%8F-%EF%B8%8F-c65cc3bb7cb1&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; on how Basecamp increased their ratings at the App Store: notify the user about new features and, in that modal, ask them to review the app or dismiss. By Dylan Ginsburg&lt;/p&gt;

&lt;p&gt;Tags: review, user-engagement, rating, basecamp, dylan-ginsburg, app-store, app&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Self-Study in May 2016</title>
      <link>https://alvarogarcia7.github.io/blog/2016/05/01/self-study/</link>
      <pubDate>Sun, 01 May 2016 00:08:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2016/05/01/self-study/</guid>
      <description>

&lt;h2 id=&#34;being-a-developer-after-40&#34;&gt;Being A Developer After 40&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.freecodecamp.com/being-a-developer-after-40-3c5dd112210c&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Adrian Kosmaczewski on the required topics to be a developer at age 40 and keep enjoying it:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Forget The Hype&lt;/li&gt;
&lt;li&gt;Choose Your Galaxy Wisely&lt;/li&gt;
&lt;li&gt;Learn About Software History&lt;/li&gt;
&lt;li&gt;Keep on Learning&lt;/li&gt;
&lt;li&gt;Teach&lt;/li&gt;
&lt;li&gt;Workplaces Suck&lt;/li&gt;
&lt;li&gt;Know Your Worth&lt;/li&gt;
&lt;li&gt;Send The Elevator Down&lt;/li&gt;
&lt;li&gt;LLVM&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;He references galaxy, the big stack you are positioned (JVM, .net, PHP, etc). He makes a special mention of the LLVM&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Take conscious decisions in your life. Be aware of your actions and their effect. Do not blush or be embarrased for changing your opinions. Say “I’m sorry” when required. Listen. Do not be a hotshot. Have integrity and self-respect.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Recommends these books:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Dealers of Lightning by Michael A. Hiltzik&lt;/li&gt;
&lt;li&gt;Revolution in the Valley by Andy Hertzfeld&lt;/li&gt;
&lt;li&gt;The Cathedral and the Bazaar by Eric S. Raymond&lt;/li&gt;
&lt;li&gt;The Success of Open Source by Steven Weber&lt;/li&gt;
&lt;li&gt;The Old New Thing by Raymond Chen&lt;/li&gt;
&lt;li&gt;The Mythical Man Month by Frederick P. Brooks Jr.&lt;/li&gt;
&lt;li&gt;Peopleware by Tom DeMarco and Tim Lister&lt;/li&gt;
&lt;li&gt;The Psychology of Software Programming by Gerald M. Weinberg&lt;/li&gt;
&lt;li&gt;Facts and Fallacies of Software Engineering by Robert L. Glass&lt;/li&gt;
&lt;li&gt;The Design of Everyday Things by Don Norman&lt;/li&gt;
&lt;li&gt;Agile!: The Good, the Hype and the Ugly by Bertrand Meyer&lt;/li&gt;
&lt;li&gt;Rework by Jason Fried and David Heinemeier Hansson&lt;/li&gt;
&lt;li&gt;Geekonomics by David Rice&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tags: adrian-kosmaczewski, career, profession, age, galaxy, long-term, book&lt;/p&gt;

&lt;h2 id=&#34;firing-people&#34;&gt;Firing people&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://zachholman.com/talk/firing-people&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Zach Holman on firing people at your current work, both from the perspective of the employee (fired), employer, coworker.&lt;/p&gt;

&lt;p&gt;Also explains his personal experience of being fired from Github.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You’ll know the difference between doing far and away your best work, and doing work that is still good, but just nominally better than what you’ve been doing. Once you catch yourself adjusting to that incremental progression… maybe it’s time to leave, to change things up&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tags: zach-holman, github, team-management, firing, coworker, employee, employer, job, relationship, next&lt;/p&gt;

&lt;h2 id=&#34;10-design-principles-for-developers&#34;&gt;10 design principles — for developers&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@nirbenita/the-10-design-heuristics-for-developers-1e70a9dc58a7&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; that explains what are the 10 design principles for programmers, as outlined by Jakob Nielsen. The article itself is by Nir Benita&lt;/p&gt;

&lt;p&gt;Tags: design-principle, ux, jakob-nielsen, nir-benita, usability, testing, list&lt;/p&gt;

&lt;h2 id=&#34;design-patterns-coming-full-circle-part-two&#34;&gt;Design Patterns — Coming Full Circle, Part Two&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/swlh/design-patterns-coming-full-circle-part-two-ced2c69e4724#.x8ud7eeqm&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; that explains how design patterns can be observed and then discovered and shows a list of four patterns dot working with data, by flux.io. Article by Jen Carlile&lt;/p&gt;

&lt;p&gt;Tags: design-pattern, data, pattern, flux, flux-io, pattern-catalog, jen-carlile&lt;/p&gt;

&lt;h2 id=&#34;why-i-m-ending-my-github-streak-after-844-days&#34;&gt;Why I’m Ending my Github Streak after 844 Days&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@karan/why-i-m-ending-my-github-streak-after-844-days-80fd014dc8df&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Karan Goel on the mechanics of following a pattern, of an activity sliced in small parts (1 problem a day or half an hour) and how this can be counterproductive sometimes.&lt;/p&gt;

&lt;p&gt;Discusses ROI of this type of activity at the beginning of your career and later.&lt;/p&gt;

&lt;p&gt;Tags: karan-goel, github, streak, python, code, everyday, practice, deliberate-practice, career, career-management&lt;/p&gt;

&lt;h2 id=&#34;good-lessons-learned-from-past-jobs&#34;&gt;Good lessons learned from past jobs&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.kartones.net/post/good-lessons-learned-from-past-jobs/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Diego &amp;lsquo;Kartones&amp;rsquo; on a synopsis of his work experience, job by job and what he has learned on each job.&lt;/p&gt;

&lt;p&gt;Tags: diego-kartones, job, professional-career, career&lt;/p&gt;

&lt;h2 id=&#34;too-much-work-in-progress&#34;&gt;Too Much Work In Progress&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://monospacedmonologues.com/post/144137568985/too-much-work-in-progress&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Samir Talwar on factors that indicate work in progress.&lt;/p&gt;

&lt;p&gt;Tags: wip, work-in-progress, list, samir-talwar&lt;/p&gt;

&lt;h2 id=&#34;testdouble&#34;&gt;TestDouble&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.martinfowler.com/bliki/TestDouble.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Martin Fowler describing the test doubles that Gerard Meszaros describes in xUnit Test Patterns.&lt;/p&gt;

&lt;p&gt;Tags: test-double, martin-fowler, gerard-meszaros, stub, fake, mock, dummy, spy, xunit, junit, pattern, test-pattern&lt;/p&gt;

&lt;h2 id=&#34;scaling-to-12-million-concurrent-connections-how-migratorydata-did-it&#34;&gt;Scaling to 12 Million Concurrent Connections: How MigratoryData Did It&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://mrotaru.wordpress.com/2013/10/10/scaling-to-12-million-concurrent-connections-how-migratorydata-did-it/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Mihai Rotaru on how MigratoryData scaled to 12 million concurrent connections in a 1U server. They explain what optimizations they did in order to achieve this.&lt;/p&gt;

&lt;p&gt;Tags: migratorydata, mihai-rotaru, concurrent-connection, 1u-server, scalability, websocket&lt;/p&gt;

&lt;h2 id=&#34;do-what-you-love&#34;&gt;Do what you love&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://www.linkedin.com/pulse/do-what-you-love-jorge-diaz&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Jorge Diaz on doing what takes you out of your comfort zone, changing careers, and life-work in general.&lt;/p&gt;

&lt;p&gt;Cites this &lt;a href=&#34;https://www.ted.com/talks/scott_dinsmore_how_to_find_work_you_love/transcript?language=en&#34; target=&#34;_blank&#34;&gt;TED talk: How to find work you love&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tags: jorge-diaz, work, life, career, comfort-zone, scott-dinsmore, career-management&lt;/p&gt;

&lt;h2 id=&#34;jhipster-the-best-way-to-breed-a-new-app&#34;&gt;JHipster - The best way to breed a new app&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://speakerdeck.com/olbpetersson/jhipster-the-best-way-to-breed-a-new-app&#34; target=&#34;_blank&#34;&gt;these slides&lt;/a&gt; by Ola Petersson, where he describes the architecture and contents of the jHipster, its pros and cons.&lt;/p&gt;

&lt;p&gt;Tags: jhipster, ola petersson, java, code-generation, code-generator, microservice&lt;/p&gt;

&lt;h2 id=&#34;how-going-to-coding-events-helped-me-get-an-awesome-job&#34;&gt;How going to coding events helped me get an awesome job&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.freecodecamp.com/networking-at-meet-ups-getting-hired-f0f7c4f4681a&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Gwendolyn Faraday on how to kickstart a career in web development, attending events, pairing and networking. That netted her some interviews to start programming for a living.&lt;/p&gt;

&lt;p&gt;Tags: networking, gwendolyn-faraday, event, job, learn-to-code&lt;/p&gt;

&lt;h2 id=&#34;maze-generation-algorithm-recap&#34;&gt;Maze Generation: Algorithm Recap&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://weblog.jamisbuck.org/2011/2/7/maze-generation-algorithm-recap&#34; target=&#34;_blank&#34;&gt;this list&lt;/a&gt; of maze-generation algorithms by Jamis Buck. Including:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;recursive backtracker&lt;/li&gt;
&lt;li&gt;Eller’s algorithm&lt;/li&gt;
&lt;li&gt;Kruskal’s algorithm&lt;/li&gt;
&lt;li&gt;Prim’s algorithm&lt;/li&gt;
&lt;li&gt;recursive division algorithm&lt;/li&gt;
&lt;li&gt;Aldous-Broder algorithm&lt;/li&gt;
&lt;li&gt;Wilson’s algorithm&lt;/li&gt;
&lt;li&gt;Hunt-and-Kill algorithm&lt;/li&gt;
&lt;li&gt;Growing Tree algorithm&lt;/li&gt;
&lt;li&gt;Binary Tree algorithm&lt;/li&gt;
&lt;li&gt;Sidewinder algorithm&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tags: recursive-backtracker,eller-algorithm,kruskal-algorithm,prim-algorithm,recursive-division-algorithm,aldous-broder-algorithm,wilson-algorithm,hunt-and-kill-algorithm,growing-tree-algorithm,binary-tree-algorithm,sidewinder-algorithm, jamis-buck, maze, maze-generation, algorithm, list&lt;/p&gt;

&lt;h2 id=&#34;the-poverty-of-constraints&#34;&gt;The Poverty of Constraints&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://weblog.jamisbuck.org/2016/3/19/poverty-of-constraints.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Jamis Buck on interpreting two Korean proverbs in the world of software:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A dutiful son comes from a poor home&lt;/li&gt;
&lt;li&gt;A poor house has many children&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tags: proverb, korea, philosophy, software, constraint, jamis-buck&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Self-Study in December 2015</title>
      <link>https://alvarogarcia7.github.io/blog/2015/12/02/self-study-in-december-2015/</link>
      <pubDate>Wed, 02 Dec 2015 09:50:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/12/02/self-study-in-december-2015/</guid>
      <description>

&lt;h2 id=&#34;ruby-equality-and-object-comparison&#34;&gt;Ruby Equality And Object Comparison&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.skorks.com/2009/09/ruby-equality-and-object-comparison/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt;, written by Alan Skorkin, that explains equality comparisons in ruby:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;equal? is reference equality&lt;/li&gt;
&lt;li&gt;== is value equality&lt;/li&gt;
&lt;li&gt;eql? is value and type equality&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tags: ruby, comparison, equality, object, reference, alan-skorkin&lt;/p&gt;

&lt;h2 id=&#34;software-folklore&#34;&gt;Software Folklore&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched &lt;a href=&#34;https://www.thoughtworks.com/insights/blog/software-folklore&#34; target=&#34;_blank&#34;&gt;this PechaKucha&lt;/a&gt; by Chris Ford on what are laws and how they relate to creating software. Also talks on what could be an analogy to software creation (says not science, not engineering)&lt;/p&gt;

&lt;p&gt;Tags: folklore, chris-ford, analogy, computer-science, pechakucha, software-engineering, software-creation, law&lt;/p&gt;

&lt;h2 id=&#34;3-things-java-programmers-can-steal-from-clojure&#34;&gt;3 Things Java Programmers Can Steal from Clojure&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.lispcast.com/3-things-java-can-steal-from-clojure&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Eric Normand, where he explains 3 clojure things that can be applied to your day to day java:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Persistent Data Structures&lt;/li&gt;
&lt;li&gt;Software Transactional Memory&lt;/li&gt;
&lt;li&gt;Extensible Data Notation&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Tags: clojure, java, eric-normand, stm, edn&lt;/p&gt;

&lt;h2 id=&#34;2-features-of-clojure-editors-professionals-won-t-do-without&#34;&gt;2 Features of Clojure Editors Professionals Won&amp;rsquo;t Do Without&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.lispcast.com/clojure-editors&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Eric Normand, where he explains the most necessary features for a clojure editor:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;REPL Integration&lt;/li&gt;
&lt;li&gt;Structural Editing&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Tags: clojure, java, eric-normand, stm, edn&lt;/p&gt;

&lt;h2 id=&#34;how-to-read-more-books&#34;&gt;How to read more books&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://verraes.net/2012/12/how-to-read-more-books/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Mathias Verraes on tips to read more books:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Negative things to stop doing&lt;/li&gt;
&lt;li&gt;Positive things to start doing&lt;/li&gt;
&lt;li&gt;Habits to form&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tags: mathias-verraes, reading, book&lt;/p&gt;

&lt;h2 id=&#34;effective-learning-strategies-for-programmers&#34;&gt;Effective Learning Strategies for Programmers&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://akaptur.com/blog/2015/10/10/effective-learning-strategies-for-programmers/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Allison Kaptur on fixed vs growth mindset and the need for having the latter for being a programmer.&lt;/p&gt;

&lt;p&gt;Especially interesting is the provided example of the confusion in the documentation, that can hinder productivity&lt;/p&gt;

&lt;p&gt;(Note: this entry is also present in this same month)&lt;/p&gt;

&lt;p&gt;Tags: allison-kaptur, fixed-mindset, growth-mindset, research, learning-strategy, recurse-center, carol-dweck, mindset&lt;/p&gt;

&lt;h2 id=&#34;code-a-fully-functional-web-app-in-14-days-challenge-accepted&#34;&gt;Code a fully-functional web app in 14 days… - Challenge Accepted&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@OggimusPrime/code-a-fully-functional-web-app-in-14-days-e247f536772d&#34; target=&#34;_blank&#34;&gt;this experience report&lt;/a&gt; on how Ryan Haase and Benjamin Hoffman built an MVP in 14 days. They describe their stack choices, gotchas and key points.&lt;/p&gt;

&lt;p&gt;Tags: ryan-haase, benjamin-hoffman, mvp, angular, firebase, challenge&lt;/p&gt;

&lt;h2 id=&#34;writing-clear-code-not-clever-code&#34;&gt;Writing-Clear-Code, Not-Clever-Code&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve-read &lt;a href=&#34;https://medium.com/@mikesherov/writing-clear-code-not-clever-code-d6b90353a3c5&#34; target=&#34;_blank&#34;&gt;this-article&lt;/a&gt; by-Mike-Sherov-where-he-explains-the-reflection-he-did-since-his-team-members-were-asking-too-much-about-his-code. His-conclusion-was-to-stop-reducing-the-size-of-the-code-to-improve-readability.&lt;/p&gt;

&lt;p&gt;Tags: mike-sherov, clean-code,clear-code, clever-code, reflection, team, code&lt;/p&gt;

&lt;h2 id=&#34;en-vez-de-un-scrum-por-proyecto-mejor-un-scrum-por-equipo&#34;&gt;En vez de “un Scrum por proyecto” mejor un “Scrum por equipo”&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.javiergarzas.com/2015/12/alejate-del-concepto-proyecto-si-quieres-usar-bien-scrum-22-adaptar-scrum-segun-cada-proyecto.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; where Javier Garzás explains scrum by teams or by projects and why the former should be preferred (in Spanish).&lt;/p&gt;

&lt;p&gt;Tags:  javier-garzas, scrum, project-management, team, agile&lt;/p&gt;

&lt;h2 id=&#34;application-gateways-an-example-in-clojure&#34;&gt;Application gateways: an example in Clojure&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.obliquo.eu/post/134421923177/application-gateways-an-example-in-clojure&#34; target=&#34;_blank&#34;&gt;this example&lt;/a&gt; that Cristobal Garcia prepared for me after asking for it at the local Barcelona Software Craftsmanship community (Many thanks!).&lt;/p&gt;

&lt;p&gt;He describes what an application gateway is, giving an example in clojure. In this case, the application gateway is used to cache and forward/deny requests to another webservice.&lt;/p&gt;

&lt;p&gt;Tags: cristobal-garcia, application-gateway, clojure, example, level-7-firewall, barcelona-software-craftsmanship, scbcn, gift&lt;/p&gt;

&lt;h2 id=&#34;habits-for-effective-refactoring&#34;&gt;Habits For Effective Refactoring&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched &lt;a href=&#34;https://www.youtube.com/watch?v=THw8t7ePlsc&#34; target=&#34;_blank&#34;&gt;this video&lt;/a&gt; by Jason Gorman about techniques for effective and sustainable refactoring. Among them:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;check the tests, the coverage to make sure that the refactored code has a good safety net&lt;/li&gt;
&lt;li&gt;set a refactoring goal: decide what you want to refactor at this time and when you&amp;rsquo;ll be done&lt;/li&gt;
&lt;li&gt;know your code smells&lt;/li&gt;
&lt;li&gt;only refactor on green&lt;/li&gt;
&lt;li&gt;use automated refactoring steps whenever possible: for the benefits of transactionability and undo are huge and the risk of messing it up decreases&lt;/li&gt;
&lt;li&gt;commit after achieving the refactoring goal: allows to create a checkpoint to revert to&lt;/li&gt;
&lt;li&gt;bottle the code smells for faster/better learning (in the commit message, he uses a hashtag for searching)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tags: jason-gorman, refactoring, video, technique, refactor, tutorial, code-smell&lt;/p&gt;

&lt;h2 id=&#34;key-to-oeis-org-poster-n-15&#34;&gt;Key to &amp;ldquo;OEIS.org&amp;rdquo; Poster, n. 15&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://oeisf.org/Poster15a_key.pdf&#34; target=&#34;_blank&#34;&gt;the 15th &amp;ldquo;poster and its key&amp;rdquo;&lt;/a&gt; by the OEIS, published by N. J. A. Sloane.&lt;/p&gt;

&lt;p&gt;Tags: sloane, oeis, poster-and-key, neil-sloane&lt;/p&gt;

&lt;h2 id=&#34;the-clojure-style-guide&#34;&gt;The Clojure Style Guide&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://github.com/bbatsov/clojure-style-guide&#34; target=&#34;_blank&#34;&gt;this style guide&lt;/a&gt; to clojure, by Bozhidar Batsov&lt;/p&gt;

&lt;p&gt;Tags: bozhidar-batsov, clojure, style-guide&lt;/p&gt;

&lt;h2 id=&#34;marick-s-midje-information&#34;&gt;Marick&amp;rsquo;s Midje information&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/marick/Midje/wiki/Writing-your-own-checkers&#34; target=&#34;_blank&#34;&gt;Custom checkers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/marick/Midje/wiki/Two-words-you-need-to-know&#34; target=&#34;_blank&#34;&gt;Domain concepts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/marick/Midje/wiki/Top-down-testing&#34; target=&#34;_blank&#34;&gt;Top-down testing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/marick/Midje/wiki/Nested-checkers&#34; target=&#34;_blank&#34;&gt;Nested checkers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;clusterware-11gr2-setting-up-an-active-passive-failover-configuration&#34;&gt;Clusterware 11gR2 – Setting up an Active/Passive failover configuration&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://blogs.oracle.com/xpsoluxdb/entry/clusterware_11gr2_setting_up_an_activepassive_failover_configuration&#34; target=&#34;_blank&#34;&gt;this how-to guide&lt;/a&gt; by Gilles Haro on how to create an Active/Passive failover configuration for Oracle.&lt;/p&gt;

&lt;p&gt;Tags: failover, high-availability, oracle, gilles-haro, active-passive, database&lt;/p&gt;

&lt;h2 id=&#34;old-stuff-that-rocks&#34;&gt;Old stuff that rocks&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://wincent.com/blog/old-stuff-that-rocks&#34; target=&#34;_blank&#34;&gt;this list&lt;/a&gt; of old technologies that still rock, according to Greg Hurrell.&lt;/p&gt;

&lt;p&gt;Tags: list, old-stuff, greg-hurrell&lt;/p&gt;

&lt;h2 id=&#34;do-not-underestimate-credentials-leaks&#34;&gt;Do not underestimate credentials leaks&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://github.com/ChALkeR/notes/blob/master/Do-not-underestimate-credentials-leaks.md&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; that describes how credentials are usually accidentally leaked and a guide on what to do about it. By Сковорода Никита Андреевич.&lt;/p&gt;

&lt;p&gt;Tags: credential, leak, guide, how-to&lt;/p&gt;

&lt;h2 id=&#34;clojure-for-the-brave-and-true-chapter-8-writing-macros&#34;&gt;Clojure for the brave and true: chapter 8 - Writing Macros&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.braveclojure.com/writing-macros&#34; target=&#34;_blank&#34;&gt;this chapter&lt;/a&gt; from Daniel Higginbotham about macros in clojure. In it, he explains common gotchas (e.g., double execution, variable capture), splicing, quoting and unquoting.&lt;/p&gt;

&lt;p&gt;Tags: daniel-higginbotham, clojure, macro, chapter, quoting, unquoting, splicing&lt;/p&gt;

&lt;h2 id=&#34;the-telescoping-constructor-anti-pattern&#34;&gt;The Telescoping Constructor (Anti)Pattern&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.captaindebug.com/2011/05/telescoping-constructor-antipattern.html#.ViF57eztmkp&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Roger Hughes on the telescoping constructor, with the example in java. The discussion is whether to apply this or not and whether this is a pattern or an anti-pattern&lt;/p&gt;

&lt;p&gt;Tags: roger-hughes, telescoping-constructor, java, pattern, antipattern&lt;/p&gt;

&lt;h2 id=&#34;ruby-for-newbies-testing-with-rspec&#34;&gt;Ruby for Newbies: Testing with Rspec&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://code.tutsplus.com/tutorials/ruby-for-newbies-testing-with-rspec--net-21297&#34; target=&#34;_blank&#34;&gt;this tutorial&lt;/a&gt; on how to make write tests with RSpec in Ruby. Written by Andrew Burgess&lt;/p&gt;

&lt;p&gt;Tags: andrew-burgess, ruby, rspec, test, tutorial&lt;/p&gt;

&lt;h2 id=&#34;ruby-dynamic-method-calling&#34;&gt;Ruby dynamic method calling&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.khd.me/ruby/ruby-dynamic-method-calling/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; about dynamically calling methods and a benchmark on three ways of doing it in Ruby:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;call&lt;/li&gt;
&lt;li&gt;send&lt;/li&gt;
&lt;li&gt;eval&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tags: khell, metaprogramming, comparison, benchmark, ruby, evaluation, dynamic&lt;/p&gt;

&lt;h2 id=&#34;becoming-a-cto&#34;&gt;Becoming a CTO&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article []&lt;a href=&#34;https://medium.com/@juokaz/becoming-a-cto-337dc1a9c6ae&#34; target=&#34;_blank&#34;&gt;becoming-a-cto&lt;/a&gt; by Juozas Kaziukėnas about the profile and the abilities of a CTO. Talks about the limiting factors for being one (e.g., stop programming, attend many meetings) and the type of work you are supposed to do (e.g., face business people, communicate the strategy, make yourself respectable).&lt;/p&gt;

&lt;p&gt;Tags: juozas-kaziukenas, cto, career-change, technology, career, programmer, title, job&lt;/p&gt;

&lt;h2 id=&#34;4-stages-of-team-development&#34;&gt;4 Stages of Team Development&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched &lt;a href=&#34;https://www.youtube.com/watch?feature=player_embedded&amp;amp;v=7NouiH2ZT8w&#34; target=&#34;_blank&#34;&gt;this video&lt;/a&gt; by the Glenn Smith &amp;ldquo;Growth Coach Houston&amp;rdquo; about the four stages of team development: forming, norming, storming, performing and how to get through them.&lt;/p&gt;

&lt;p&gt;Tags: tuckman, forming, norming, storming, performing, glenn-smith, video, team-management, team&lt;/p&gt;

&lt;h2 id=&#34;time-hacking-for-college-students&#34;&gt;Time Hacking for College Students&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://goel.io/time-hacking/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Karan Goel about techniques for finding time for important things:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;prioritizing&lt;/li&gt;
&lt;li&gt;waking up early&lt;/li&gt;
&lt;li&gt;automate&lt;/li&gt;
&lt;li&gt;keep learning&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tags: karan-goel, time-management, important-vs-urgent, prioritization&lt;/p&gt;

&lt;h2 id=&#34;clojure-at-a-real-estate-portal&#34;&gt;Clojure at a Real Estate Portal&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.pitheringabout.com/?p=1069&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Jon Pither, where he does a post-mortem analysis of a real-estate project with a fixed deadline (TV ads) with around ten months of development time. They brought in an external company, JUXT, who with 6 seasoned developers were able to finish the project on time and on budget.&lt;/p&gt;

&lt;p&gt;Their stack was:  Ring, Compojure, Bidi, and http-kit for our Clojure web-apps, mixing in Friend and Liberator.&lt;/p&gt;

&lt;p&gt;Tags: ring, compojure, bidi, http-kit, clojure, fixed-deadline, project, success-story, post-mortem, jon-pither&lt;/p&gt;

&lt;h2 id=&#34;musing-on-tdd-impulsive-developers-and-aesthetics&#34;&gt;Musing on TDD, Impulsive Developers and Aesthetics&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Jon Pither on why TDD can be harmful sometimes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;limits the amount of lateral thinking&lt;/li&gt;
&lt;li&gt;forces a technology&lt;/li&gt;
&lt;li&gt;limits the solution space given a fixed problem space&lt;/li&gt;
&lt;li&gt;limits creativity and freedom when performing large / aggressive refactorings&lt;/li&gt;
&lt;li&gt;sterile place&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;while he agrees that can be useful sometimes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;mostly in OOP&lt;/li&gt;
&lt;li&gt;to keep you on the rails and focused&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tags: tdd, jon-pither, senior-developer, junior-developer, aesthetics, lateral-thinking&lt;/p&gt;

&lt;h2 id=&#34;fred-george-on-programmer-anarchy&#34;&gt;Fred George On Programmer Anarchy&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.infoq.com/news/2012/02/programmer-anarchy&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Roopesh Shenoy on a talk by Fred George: &amp;ldquo;Programmer Anarchy&amp;rdquo;, where programmers make business decisions based on business metrics set by clients, among other things.&lt;/p&gt;

&lt;p&gt;Tags: roopesh-shenoy, fred-george, programmer-anarchy, analogy, anarchy, business-metric, client, agile, methodology&lt;/p&gt;

&lt;h2 id=&#34;programmer-anarchy&#34;&gt;Programmer Anarchy&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.slideshare.net/fredgeorge/programmer-anarchy-chinese&#34; target=&#34;_blank&#34;&gt;these slides&lt;/a&gt; by Fred George about programmer&amp;rsquo;s anarchy. Commented in the article above&lt;/p&gt;

&lt;p&gt;Tags: slide, fred-george, programmer-anarchy, analogy, anarchy, business-metric, client, agile, methodology&lt;/p&gt;

&lt;h2 id=&#34;what-is-programmer-anarchy-and-does-it-have-a-future&#34;&gt;What is Programmer Anarchy and does it have a future?&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://martinjeeblog.com/2012/11/20/what-is-programmer-anarchy-and-does-it-have-a-future/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Martin Jee explaining what is programmer anarchy and how it compares to an agile team. Compares the division of labor structure in anarchist and agile teams, using Marxist terms.&lt;/p&gt;

&lt;p&gt;He finishes saying that what is a powerful idea in this methodology is the taking of personal responsibilities by the programmers.&lt;/p&gt;

&lt;p&gt;Tags: fred-george, programmer-anarchy, analogy, anarchy, martin-jee, agile, methodology&lt;/p&gt;

&lt;h2 id=&#34;agile-is-the-new-black&#34;&gt;Agile is the New Black&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.slideshare.net/fredgeorge/agile-is-thenewblack&#34; target=&#34;_blank&#34;&gt;these slides&lt;/a&gt; by Fred George where compares xp/agile development in 1999, 2006 and 2011.&lt;/p&gt;

&lt;p&gt;Tags: fred-george, agile, methodology, comparison, slide&lt;/p&gt;

&lt;h2 id=&#34;show-how-don-t-tell-what-a-management-style&#34;&gt;Show How, Don&amp;rsquo;t Tell What - A Management Style&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://2ndscale.com/rtomayko/2012/management-style&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Ryan Tomayko about the management style they apply at github:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;instead of telling them what to do, show people how to plan, build, and ship product together.&lt;/p&gt;

&lt;p&gt;I’ve never actually told anyone what to do here. In fact, I vehemently refuse to tell people what to do. Here are just a couple reasons why:&lt;/p&gt;

&lt;p&gt;I don’t scale. If I tell someone what to do and they do it, then what? Do I have to tell them another thing to do? What happens when I have to decide what to do for 20 people?&lt;/p&gt;

&lt;p&gt;Telling people what to do is lazy. Instead, try to convince them with argument. This is how humans interact when there’s no artificial authority structure and it works great. If you can’t convince people through argument then maybe you shouldn’t be doing it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;about managers:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;It’s often cited that GitHub doesn’t have managers. In my opinion, a better way to describe the phenomenon would be to say that everyone at GitHub is a manager&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tags: ryan-tomayko, management, management-style, team-management, github&lt;/p&gt;

&lt;h2 id=&#34;clojure-for-the-brave-and-true-chapter-7-clojure-alchemy-reading-evaluation-and-macros&#34;&gt;Clojure for the brave and true: chapter 7 - Clojure Alchemy: Reading, Evaluation, and Macros&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.braveclojure.com/read-and-eval/&#34; target=&#34;_blank&#34;&gt;this chapter&lt;/a&gt; from Daniel Higginbotham about the essential concepts for macros: the reader, the evaluator, their relative order and independence. How to use clojure to extend itself and an example: the thread (&lt;code&gt;-&amp;gt;&lt;/code&gt;) macro&lt;/p&gt;

&lt;p&gt;Tags: daniel-higginbotham, clojure, macro, chapter, reader, evaluator&lt;/p&gt;

&lt;h2 id=&#34;team-bus-factors-how-to-reduce-them-and-how-to-prevent-them&#34;&gt;Team Bus Factors: How to Reduce Them and How to Prevent Them&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://5whys.com/blog/team-bus-factors-how-to-reduce-them-and-how-to-prevent-them.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Roy Osherove on the bus factor:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;what is it&lt;/li&gt;
&lt;li&gt;how to reduce them&lt;/li&gt;
&lt;li&gt;how to prevent them&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Also talks about examples of bus-factor people&lt;/p&gt;

&lt;p&gt;Tags: bus-factor, roy-osherove, team-management, prevention, reduction, definition&lt;/p&gt;

&lt;h2 id=&#34;hambre-de-programar&#34;&gt;Hambre de programar&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@xav1uzz/hambre-de-programar-166aeae3b525&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; (in Spanish) by Xavi Gost where he analyses the Barcelona Software Craftsmanship 2015: the events, the relationships and the passion that it has injected to attendees&lt;/p&gt;

&lt;p&gt;Tags: xavi-gost, barcelona-software-craftsmanship, 2015, experience-report, scbcn15&lt;/p&gt;

&lt;h2 id=&#34;software-craftsmanship-barcelona-2015&#34;&gt;Software Craftsmanship Barcelona 2015&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.idealista.com/labs/blog/idealista/software-craftsmanship-barcelona-2015/&#34; target=&#34;_blank&#34;&gt;this analysis&lt;/a&gt; of the Barcelona Software Craftsmanship 2015 by the Idealista R&amp;amp;D team.&lt;/p&gt;

&lt;p&gt;Tags: jaime-perera, barcelona-software-craftsmanship, 2015, idealista, experience-report, scbcn15&lt;/p&gt;

&lt;h2 id=&#34;jvmls-2015-compilers-are-databases&#34;&gt;JVMLS 2015 - Compilers are Databases&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched &lt;a href=&#34;https://www.youtube.com/watch?v=48js0H6ooBY&#34; target=&#34;_blank&#34;&gt;this video&lt;/a&gt; by Martin Odersky on why compilers resemble databases and explains how a functional compiler works on the inside.&lt;/p&gt;

&lt;p&gt;Explains the notion of a Type, Reference, Symbol, Denotation (and Multi-Denotation) living in the Abstract Syntax Tree (AST)&lt;/p&gt;

&lt;p&gt;Also explains the need for a reading compiler (e.g., for quick validation in the IDE), single-pass and multi-pass compiler.&lt;/p&gt;

&lt;p&gt;They have built phases to transform the source code into bytecode, but to better use the cache locality, they programmatically mix phases using Java Reflection (metaprogramming) to traverse the tree (AST) once for these selected phases.&lt;/p&gt;

&lt;p&gt;Tags: type, reference, symbol, denotation, abstract-syntax-tree, ast, compiler, functional-compiler, scalac, dotty, martin-odersky, analogy, database&lt;/p&gt;

&lt;h2 id=&#34;in-functional-programming-what-is-a-functor&#34;&gt;In Functional Programming, what is a functor?&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://stackoverflow.com/questions/2030863/in-functional-programming-what-is-a-functor/2031421#2031421&#34; target=&#34;_blank&#34;&gt;this answer&lt;/a&gt; of what is a functor&lt;/p&gt;

&lt;p&gt;Tags: stack-overflow, functor, answer, functional-programming&lt;/p&gt;

&lt;h2 id=&#34;ten-habits-of-a-good-programmer&#34;&gt;Ten Habits of a Good Programmer&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://hintjens.com/blog:98&#34; target=&#34;_blank&#34;&gt;this list&lt;/a&gt; of good habits of good programmers by Pieter Hintjens:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;If it works and is still useful, don&amp;rsquo;t throw it out.&lt;/li&gt;
&lt;li&gt;Never solve the same problem twice in parallel.&lt;/li&gt;
&lt;li&gt;Solve the same problem often in serial.&lt;/li&gt;
&lt;li&gt;Write code, and repeat, until you are fluent in your language.&lt;/li&gt;
&lt;li&gt;Learn to use code generators.&lt;/li&gt;
&lt;li&gt;Work with others.&lt;/li&gt;
&lt;li&gt;Technology is a tool, not a tribal affiliation.&lt;/li&gt;
&lt;li&gt;Aim for this cycle: learn, play, work, teach.&lt;/li&gt;
&lt;li&gt;Get your edit-compile-run-fail cycles down to seconds.&lt;/li&gt;
&lt;li&gt;If you need debuggers, you&amp;rsquo;re doing it wrong.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Tags: pieter-hintjens, list, habit, good-programmer&lt;/p&gt;

&lt;h2 id=&#34;beginning-clojure-cursive&#34;&gt;Beginning Clojure: Cursive&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://potetm.github.io/2015/10/04/beginning-clojure-cursive.html&#34; target=&#34;_blank&#34;&gt;this tutorial&lt;/a&gt; on installing Cursive, IntelliJ Idea&amp;rsquo;s plugin for working with Clojure. Written by Tim Pote&lt;/p&gt;

&lt;p&gt;Tags: cursive, clojure, intellij-idea, plugin, tutorial, tim-pote&lt;/p&gt;

&lt;h2 id=&#34;nodejs-a-quick-optimization-advice&#34;&gt;#NodeJS : A quick optimization advice&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://top.fse.guru/nodejs-a-quick-optimization-advice-7353b820c92e&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; on the limit for inlining for the NodeJS optimizing compiler (Crankshaft), that includes both source code and comments. Written Julien Crouzet&lt;/p&gt;

&lt;p&gt;Tags: nodejs, comment, julien-crouzet, crankshaft, optimizer, inline, function-inline&lt;/p&gt;

&lt;h2 id=&#34;specification-pattern&#34;&gt;Specification Pattern&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://en.wikipedia.org/wiki/Specification_pattern&#34; target=&#34;_blank&#34;&gt;this wikipedia&lt;/a&gt; page on the specification pattern&lt;/p&gt;

&lt;p&gt;Tags: eric-evans, martin-fowler, specification-pattern, pattern, design-pattern, dsl, domain-specific-language&lt;/p&gt;

&lt;h2 id=&#34;el-recruiting-está-roto-bonilista&#34;&gt;El recruiting está ROTO #Bonilista&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://us2.campaign-archive2.com/?u=374c664073e1a1fa3deca53b4&amp;amp;id=539364dde4&#34; target=&#34;_blank&#34;&gt;this bonilista&lt;/a&gt; where David Bonilla explains why the recruitment sector for technical people in Spain is broken. Article is in Spanish.&lt;/p&gt;

&lt;p&gt;Tags: david-bonilla, bonilista, recruitment, job, career&lt;/p&gt;

&lt;h2 id=&#34;bddon-t-the-practice-and-the-tools&#34;&gt;BDDon’t: The practice and the tools&lt;/h2&gt;

&lt;p&gt;​I&amp;rsquo;ve  read &lt;a href=&#34;https://www.thoughtworks.com/p2magazine/issue12/bdd-dont/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Kevin Dishman that explains what is BDD and how it I  usually used. Also the common downsides and what to do about it&lt;/p&gt;

&lt;p&gt;Suggests using a faster tool, lower on the test pyramid that can bring the same business value at a lower cost&lt;/p&gt;

&lt;p&gt;Tags: kevin-dishman, downside, test-pyramid, bdd, test, unit-test, functional-test, acceptance-test&lt;/p&gt;

&lt;h2 id=&#34;cómo-usan-git-en-github-scbcn&#34;&gt;Cómo usan #Git en GitHub – #scbcn&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched &lt;a href=&#34;http://codely.tv/screencasts/como-usan-git-en-github/&#34; target=&#34;_blank&#34;&gt;this screencast&lt;/a&gt; on the talk we organized yesterday about github.&lt;/p&gt;

&lt;p&gt;Tags: javier-ferrer, codely-tv, codely, event, scbcn, alain-helaili, screencast&lt;/p&gt;

&lt;h2 id=&#34;trying-to-speed-up-binary-search&#34;&gt;Trying to speed up Binary Search&lt;/h2&gt;

&lt;p&gt;I have read &lt;a href=&#34;http://databasearchitects.blogspot.com.es/2015/09/trying-to-speed-up-binary-search.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; on how the binary search is implemented and what other algorithms are possible to speed up the search in large datasets, especially common in databases.&lt;/p&gt;

&lt;p&gt;Tags: optimization, branch-misprediction, clang, o3, gpp, c, database, binary-search, thomas-neumann&lt;/p&gt;

&lt;h2 id=&#34;scrum-3-0-and-organization-4-0-impressions-from-a-great-evening-with-boris-gloger-at-immobilienscout24&#34;&gt;Scrum 3.0 and Organization 4.0 - impressions from a great evening with Boris Gloger at ImmobilienScout24&lt;/h2&gt;

&lt;p&gt;I have read &lt;a href=&#34;http://www.ontheagilepath.net/2015/12/scrum-30-and-organization-40.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by  Sebastian Radics that compares the different ways of doing scrum: 1 2 3, most comments on other strategies or management methodologies like no estimates.&lt;/p&gt;

&lt;p&gt;Compares the importance of focusing on the process or on the final product, the role of the scrum master, the role of the product owner, and the team itself.&lt;/p&gt;

&lt;p&gt;Tags: management, agile, scrum, team-management, sebastian-radics, scrum30&lt;/p&gt;

&lt;h2 id=&#34;trucos-para-trabajar-con-equipos-remotos&#34;&gt;Trucos para trabajar con equipos remotos&lt;/h2&gt;

&lt;p&gt;I have read &lt;a href=&#34;http://thinkingwithyou.com/2015/11/trucos-para-trabajar-con-equipos-remotos/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Israel Alcázar (Spanish). Explains how this company organized their product development process. explains tools for working with a remote team.&lt;/p&gt;

&lt;p&gt;give three pieces of advice for improving it, and further resources to read&lt;/p&gt;

&lt;p&gt;Tags: remote, remote-first, isra-alcazar, israel-alcazar, team-management, advice&lt;/p&gt;

&lt;h2 id=&#34;introducing-new-open-source-tools-for-the-elixir-community&#34;&gt;Introducing new open-source tools for the Elixir community&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://engineering.pinterest.com/blog/introducing-new-open-source-tools-elixir-community&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Steve Cohen that explains what the actor model is and what is the spirit of the elixir language: user friendlier syntax for erlang&lt;/p&gt;

&lt;p&gt;They also explain that they have implemented and ad server and access control using elixir. For this matter, they rely on two tools that are now open source&lt;/p&gt;

&lt;p&gt;Tags: elixir, microsecond, latency, erlang, actor-model, language-syntax, open-source, steve-cohen&lt;/p&gt;

&lt;h2 id=&#34;cuánto-pagas-por-tus-herramientas-de-trabajo&#34;&gt;¿Cuánto pagas por tus herramientas de trabajo?&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://us2.campaign-archive2.com/?u=374c664073e1a1fa3deca53b4&amp;amp;id=12ed2d6eb0&#34; target=&#34;_blank&#34;&gt;this bonilista&lt;/a&gt; about how much programmers invest in buying their tools (and honing them). By David Bonilla, in Spanish&lt;/p&gt;

&lt;p&gt;Tags: david-bonilla, bonilista, tool, investment&lt;/p&gt;

&lt;h2 id=&#34;clojure-at-a-bank-freeing-the-rules&#34;&gt;Clojure at a Bank – Freeing the Rules&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.pitheringabout.com/?p=830&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Jon Pither about converting OO business rules into Clojure and using the homoiconicity for increasing the power: when code is data, the rules themselves become searchable (using a search engine), visualizable and analyzable. This wasn&amp;rsquo;t possible before when code was not data.&lt;/p&gt;

&lt;p&gt;They have also build further tools to analyze rules with larger sets of data, rather than unit tests, to see if they conflict among each other.&lt;/p&gt;

&lt;p&gt;Tags: jon-pither, clojure, homoiconicity, code=data, data=code, rule, rule-engine, bank, business-rule, code-analysis&lt;/p&gt;

&lt;h2 id=&#34;five-reasons-to-learn-clojure-and-emacs-together&#34;&gt;Five reasons to learn Clojure and Emacs together&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.pitheringabout.com/?p=849&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Jon Pither advocating the learning of Clojure and Emacs at the same time. The main reasons are: liberation, change, support, simplicity, mass adoption.&lt;/p&gt;

&lt;p&gt;Cites that being hard to learn a new editor is a good idea to separate those who are willing to invest the time in learning (both an editor and a new language) from those who don&amp;rsquo;t.&lt;/p&gt;

&lt;p&gt;Tags: clojure, emacs, jon-pither, learning, liberation, change, support, simplicity, mass-adoption&lt;/p&gt;

&lt;h2 id=&#34;pull-requests-maintainers-won-t-hate&#34;&gt;Pull Requests Maintainers Won&amp;rsquo;t Hate&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this &lt;a href=&#34;https://www.booleanknot.com/blog/2013/09/07/pull-requests.html&#34; target=&#34;_blank&#34;&gt;list of tips&lt;/a&gt; by James Reeves on improving the pull requests
Tags: pull-request, james-reeves, tip, list&lt;/p&gt;

&lt;h2 id=&#34;how-to-get-rich-in-tech-guaranteed&#34;&gt;How to get rich in tech, guaranteed.&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://startupljackson.com/post/135800367395/how-to-get-rich-in-tech-guaranteed&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; that describes what is a way to make good money and retire rich why working for a company.&lt;/p&gt;

&lt;p&gt;It also explains about entering the startup market, what questions should be asked, what&amp;rsquo;s your real value, what are the benefits of doing it, known limitations and other questions&lt;/p&gt;

&lt;p&gt;Tags: startup, career, career-management, work, professional-career, value, money&lt;/p&gt;

&lt;h2 id=&#34;modern-perl-4th-edition-a-review&#34;&gt;Modern Perl 4th edition, a review&lt;/h2&gt;

&lt;p&gt;I have read &lt;a href=&#34;http://perltricks.com/article/205/2015/12/21/Modern-Perl-4th-edition--a-review&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; that explains how this new book covers the syntax, idioms and the rest of the Perl language.&lt;/p&gt;

&lt;p&gt;In this 4th edition, parts of  the text have completely been rewritten, a New formatting applied to ease and improve the reading comprehension&lt;/p&gt;

&lt;p&gt;Tags: book-review, review, david-farrell, perl, reedition, modern-perl&lt;/p&gt;

&lt;h2 id=&#34;8-characteristics-of-agile-software-developers&#34;&gt;8 Characteristics of Agile Software Developers&lt;/h2&gt;

&lt;p&gt;​I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@pm_loop/8-characteristics-of-successful-agile-software-developers-ab2c43abb959&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; that describes what characteristics are common in companies practicing an agile methodology, as revealed by a study (that even though it&amp;rsquo;s not cited, can be tracked back to &lt;a href=&#34;http://productdevelopmentsuccess.com/study&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;Suggests ideas for teams that change in a changing environment and what to do about it.&lt;/p&gt;

&lt;p&gt;Written by Keela Robison.&lt;/p&gt;

&lt;p&gt;Tags: keela-robison, agile, team-management&lt;/p&gt;

&lt;h2 id=&#34;this-is-why-you-never-end-up-hiring-good-developers&#34;&gt;This is why you never end up hiring good developers&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://qz.com/258066/this-is-why-you-dont-hire-good-developers/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; that explains what to look for in a strong, stronger, strongest (software) developer&lt;/p&gt;

&lt;p&gt;The main idea is to find a good person that fits the job, without inflicting pain in the team morale and can learn to perform the specific tasks in the future, as (paraprasing) the pool of people that know what you need is much smaller than the people who can learn it.&lt;/p&gt;

&lt;p&gt;The article specifies what to look and not look for in a candidate.&lt;/p&gt;

&lt;p&gt;Some quotes:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;grasp of complex topics and the ability to clearly communicate about them, which are the two jobs of the working engineer.&lt;/p&gt;

&lt;p&gt;track record of learning new skills and applying them successfully&lt;/p&gt;

&lt;p&gt;TL;DR:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Many interview techniques test skills that are at best irrelevant to real working life;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;you want somebody who knows enough to do the job right now;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;or somebody smart and motivated enough that they can learn the job quickly;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;you want somebody who keeps getting better at what they do;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;your interview should be a collaborative conversations, not a combative interrogation;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;you also want somebody who you will enjoy working with;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;it’s important to separate “enjoy working with” from “enjoy hanging out with;”&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;don’t hire assholes, no matter how good they are;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;if your team isn’t diverse, your team is worse than it needed to be;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;accept that hiring takes a really long time and is really, really hard.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;effective-learning-strategies-for-programmers-1&#34;&gt;Effective Learning Strategies for Programmers&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve (re-)read &lt;a href=&#34;http://akaptur.com/blog/2015/10/10/effective-learning-strategies-for-programmers/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Allison Kaptur on fixed vs growth mindset and the need for having the latter for being a programmer.&lt;/p&gt;

&lt;p&gt;The fixed mindset is present in the 10x-engineer, and the worshipping of heroes.&lt;/p&gt;

&lt;p&gt;It also includes a recipe for changing from a fixed-mindset to a growth-mindset.&lt;/p&gt;

&lt;p&gt;(Note: this entry is also present in this same month)&lt;/p&gt;

&lt;p&gt;Tags: allison-kaptur, fixed-mindset, growth-mindset, research, learning-strategy, recurse-center, carol-dweck, mindset, 10x-engineer, impostor-syndrome&lt;/p&gt;

&lt;h2 id=&#34;doctor-please-fix-my-agile&#34;&gt;Doctor! Please fix my agile!&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://dl.dropboxusercontent.com/u/59614769/Presentations/Doctor%20please%20fix%20my%20Agile.pdf&#34; target=&#34;_blank&#34;&gt;these slides&lt;/a&gt; by Ville Törmälä on what is agile, organizational problems and the distinction between efficiency and effectiveness. Also talks about the distribution of time and the organization of the environment (what calls)&lt;/p&gt;

&lt;p&gt;Tags: slide, agile, efficiency, effectiveness, tip, organization, ville-tormala, project-thinking, team-thinking&lt;/p&gt;

&lt;h2 id=&#34;wolf-narrative-considered-harmful-also-biologically-unlikely&#34;&gt;“Wolf” narrative considered harmful (also biologically unlikely)&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://laughingmeme.org/2014/09/02/wolf-narrative-considered-harmful-also-biologically-unlikely/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; that explains what the &amp;ldquo;lone wolf&amp;rdquo; archetype is, among programmers, and possible outcomings for those profiles. Written by Kellan Elliott-McCrea.&lt;/p&gt;

&lt;p&gt;Describes some craftsmanship ideas for these roles, based on their proficiency with their tools, that will generate tools for the rest of the team and make the rest more effective. Also discusses the non-management advancement career.&lt;/p&gt;

&lt;p&gt;Tags: analogy, wolf, lone-wolf, archetype, programmer, programmer-analogy, profile, team-management, kellan-elliott-mccrea&lt;/p&gt;

&lt;h2 id=&#34;the-wolf-dictating-their-own-terms&#34;&gt;The Wolf - dictating their own terms&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://randsinrepose.com/archives/the-wolf/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Michael Lopp about the &lt;code&gt;wolf&lt;/code&gt; position as a person or in a team. He describes their characteristics and his own experiences working with them.&lt;/p&gt;

&lt;p&gt;Tags: management, wolf, team-management, analogy, michael-lopp&lt;/p&gt;

&lt;h2 id=&#34;volkswagen-and-cheating-software&#34;&gt;Volkswagen and Cheating Software&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://www.schneier.com/crypto-gram/archives/2015/1015.html#1&#34; target=&#34;_blank&#34;&gt;this essay&lt;/a&gt; by Bruce Schneier on cheating software, using as an example the Volkswagen case, but especially centered on software that is made do cheat in an undetectable fashion. Or that could be attributed to a programming mistake. The later, says the author, is so common that there could be already intentional or unintentional errors hiding cheating.&lt;/p&gt;

&lt;p&gt;The author cites the Internet of Things of new opportunities for companies to use / produce cheating software and about a possible solution: transparency and oversight of the software that more and more reigns our lives.&lt;/p&gt;

&lt;p&gt;Other (opinion) articles I&amp;rsquo;ve read on the issue are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.nytimes.com/2015/09/24/opinion/volkswagen-and-the-era-of-cheating-software.html&#34; target=&#34;_blank&#34;&gt;Volkswagen and the Era of Cheating Software&lt;/a&gt; by Zeynep Tufekci&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://fusion.net/story/202867/volkswagen-software-deception-ai/&#34; target=&#34;_blank&#34;&gt;Volkswagen isn’t the first company to use software to break the law and it won’t be the last&lt;/a&gt; by Daniela Hernandez&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.slate.com/articles/technology/future_tense/2015/09/volkswagen_s_cheating_emissions_software_and_the_threat_of_black_boxes.html&#34; target=&#34;_blank&#34;&gt;Harry Potter and the Mysterious Defeat Device&lt;/a&gt; by James Grimmelmann&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tags: cryptogram, bruce Schneier, volkswagen, mistake, quality, transparency, oversight, iot, essay, cheating, cheating software&lt;/p&gt;

&lt;h2 id=&#34;please-java-do-finally-support-multiline-string-literals&#34;&gt;Please, Java. Do Finally Support Multiline String Literals&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.jooq.org/2015/12/29/please-java-do-finally-support-multiline-strings/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; explaining the need for multi-line string literal in java.&lt;/p&gt;

&lt;p&gt;Tags: java, syntax, string, feature, multi-line string&lt;/p&gt;

&lt;h2 id=&#34;the-silver-bullet-syndrome&#34;&gt;The Silver Bullet Syndrome&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched &lt;a href=&#34;https://www.youtube.com/watch?v=3wyd6J3yjcs&#34; target=&#34;_blank&#34;&gt;this talk&lt;/a&gt; by Hadi Hariri about chasing the next silver bullet.&lt;/p&gt;

&lt;p&gt;He explains this with javascript and nodejs, but it could be exemplified with other technologies / promises as well.&lt;/p&gt;

&lt;p&gt;Note: ABC stands for:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A = address&lt;/li&gt;
&lt;li&gt;B = binding&lt;/li&gt;
&lt;li&gt;C = contract&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tags: hadi-hariri, silver-bullet, talk, devoxx&lt;/p&gt;

&lt;h2 id=&#34;writing-clean-tests-small-is-beautiful&#34;&gt;Writing Clean Tests – Small Is Beautiful&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.petrikainulainen.net/programming/testing/writing-clean-tests-small-is-beautiful/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Petri Kainulainen on writing BDD style tests with JUnit in java.&lt;/p&gt;

&lt;p&gt;There is &lt;a href=&#34;https://github.com/NitorCreations/CoreComponents/tree/master/junit-runners&#34; target=&#34;_blank&#34;&gt;a tool&lt;/a&gt;, created by Nitor Creations that allows you to write nested classes in JUnit, allowing for test specialization.&lt;/p&gt;

&lt;p&gt;Tags: junit, runner, bdd, test, nitor-creations, petri-kainulainen, tdd&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tip: Propagate the failure in bash</title>
      <link>https://alvarogarcia7.github.io/blog/2015/10/02/tip-propagate-the-failure-in-bash/</link>
      <pubDate>Fri, 02 Oct 2015 08:53:29 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/10/02/tip-propagate-the-failure-in-bash/</guid>
      <description>

&lt;p&gt;In bash, the usual behavior is to return the last status code:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;bash-3.1$ tr
tr: two strings must be given when translating
bash-3.1$ &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$?&lt;/span&gt;
&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;But this also applies to pipes:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;bash-3.1$ tr&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;tee &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;.txt
tr: two strings must be given when translating
bash-3.1$ &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$?&lt;/span&gt;
&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Should you want to pass the non-zero (error) status code to the next operation, use this feature toggle: &lt;code&gt;set -o pipefail&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;bash-3.1$ &lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt; -o pipefail
bash-3.1$ tr&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;tee &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;.txt
tr: two strings must be given when translating
bash-3.1$ &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$?&lt;/span&gt;
&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This might be useful if you stop on a non-zero status (&lt;code&gt;set -e&lt;/code&gt;).&lt;/p&gt;

&lt;h2 id=&#34;set-builtin-reference&#34;&gt;Set Builtin Reference&lt;/h2&gt;

&lt;p&gt;Reference from the &lt;a href=&#34;https://www.gnu.org/software/bash/manual/html_node/The-Set-Builtin.html#The-Set-Builtin&#34; target=&#34;_blank&#34;&gt;Set Builtin&lt;/a&gt;:&lt;/p&gt;

&lt;h3 id=&#34;e&#34;&gt;-e&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;-e&lt;/p&gt;

&lt;p&gt;Exit immediately if a pipeline (see Pipelines), which may consist of a single simple command (see Simple Commands), a list (see Lists), or a compound command (see Compound Commands) returns a non-zero status. The shell does not exit if the command that fails is part of the command list immediately following a while or until keyword, part of the test in an if statement, part of any command executed in a &amp;amp;&amp;amp; or || list except the command following the final &amp;amp;&amp;amp; or ||, any command in a pipeline but the last, or if the command’s return status is being inverted with !. If a compound command other than a subshell returns a non-zero status because a command failed while -e was being ignored, the shell does not exit. A trap on ERR, if set, is executed before the shell exits.&lt;/p&gt;

&lt;p&gt;This option applies to the shell environment and each subshell environment separately (see Command Execution Environment), and may cause subshells to exit before executing all the commands in the subshell.&lt;/p&gt;

&lt;p&gt;If a compound command or shell function executes in a context where -e is being ignored, none of the commands executed within the compound command or function body will be affected by the -e setting, even if -e is set and a command returns a failure status. If a compound command or shell function sets -e while executing in a context where -e is ignored, that setting will not have any effect until the compound command or the command containing the function call completes.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;o-pipefail&#34;&gt;-o pipefail&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;-o pipefail&lt;/p&gt;

&lt;p&gt;If set, the return value of a pipeline is the value of the last (rightmost) command to exit with a non-zero status, or zero if all commands in the pipeline exit successfully. This option is disabled by default.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>What defines a dependency</title>
      <link>https://alvarogarcia7.github.io/blog/2015/07/13/what-defines-a-dependency/</link>
      <pubDate>Mon, 13 Jul 2015 07:48:28 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/07/13/what-defines-a-dependency/</guid>
      <description>&lt;p&gt;A friend and I were arguing about this code (&lt;a href=&#34;https://github.com/alvarogarcia7/cos/blob/7bf866bdfb9006d73a0124e00152e55c520d98a4/src/main/java/users/Registry.java&#34; target=&#34;_blank&#34;&gt;fragment&lt;/a&gt;):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;register&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;userName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;try&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;registeredUsers&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;User&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;userName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;));&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;catch&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;AlreadyRegisteredUserException&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;resultListener&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;alreadyRegistered&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;userName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I would have said that &lt;code&gt;resultListener&lt;/code&gt; is a dependency as, first, it was injected by the constructor, second, it is necessary for the execution (negative case).&lt;/p&gt;

&lt;p&gt;He suggested that:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;being injected through  the constructor is usually what happens with dependencies, but does not make it one (i.e., something can be injected by the constructor and not be a dependency)&lt;/li&gt;
&lt;li&gt;what defines a dependency is related to the business: if this behavior is mandatory for the business, then it is a dependency.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As a conclusion, &lt;code&gt;resultListener&lt;/code&gt; would be a notification, as business does not require it.&lt;/p&gt;

&lt;p&gt;On a later commit, we decided to inject it to &lt;code&gt;registeredUsers&lt;/code&gt; (&lt;a href=&#34;https://github.com/alvarogarcia7/cos/blob/c89bec1a2de388165676f095c2218afeb1321374/src/main/java/users/InMemoryRegisteredUsers.java&#34; target=&#34;_blank&#34;&gt;fragment&lt;/a&gt;)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;add&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;User&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;RegistryResultListener&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;resultListener&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;contains&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;resultListener&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;alreadyRegistered&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;());&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;n&#34;&gt;users&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;resultListener&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;successfullyRegistered&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;());&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Note: for cases when no one needs to be informed about the users being registered or not, a null-object pattern will suffice, as there is no check for null reference in the parameter &lt;code&gt;resultListener&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Note: more information on object stereotypes can be found &lt;a href=&#34;../../../../2015/07/13/object-peer-stereotypes/&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Inserting clojure code in octopress</title>
      <link>https://alvarogarcia7.github.io/blog/2015/04/14/inserting-clojure-code-in-octopress/</link>
      <pubDate>Tue, 14 Apr 2015 23:48:27 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/04/14/inserting-clojure-code-in-octopress/</guid>
      <description>&lt;p&gt;Inserting this code in the blog:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;```clojure
(defn all-access[k]
    (let [{:keys [a b] :as k}]
        (do a)
        (do (:b k))))
```
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;the octopress processor throws the error:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Error: Pygments can&#39;t parse unknown language: clojure
Error: Run jekyll build --trace for more information.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A solution would be to include it as lisp code:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;```lisp
(defn all-access[k]
    (let [{:keys [a b] :as k}]
        (do a)
        (do (:b k))))
```
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;this is an example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-lisp&#34; data-lang=&#34;lisp&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;defn&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;all-access[k]&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;[{:keys&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;[a&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;b]&lt;/span&gt; &lt;span class=&#34;ss&#34;&gt;:as&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;k}]&lt;/span&gt;
		&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;do&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
		&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;do&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;ss&#34;&gt;:b&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>