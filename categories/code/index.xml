<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>code on The long way through Software Craftsmanship</title>
    <link>https://alvarogarcia7.github.io/categories/code/</link>
    <description>Recent content in code on The long way through Software Craftsmanship</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 01 Apr 2019 10:32:19 +0000</lastBuildDate><atom:link href="https://alvarogarcia7.github.io/categories/code/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Self-Study in April 2019</title>
      <link>https://alvarogarcia7.github.io/blog/2019/04/01/self-study-april-2019/</link>
      <pubDate>Mon, 01 Apr 2019 10:32:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2019/04/01/self-study-april-2019/</guid>
      <description>How to validate password with regular expression Explains the &amp;lsquo;?=&amp;rsquo; character in a regex, to validate conditions. Make it &amp;lsquo;.*&amp;rsquo; to &amp;lsquo;contain&amp;rsquo;, rather than &amp;lsquo;startWith&amp;rsquo;
Tags: password, validation, look-ahead, regex, regular-expression
Id: 2ed5999a-555f-11e9-8bf8-0242ac110005 Read: Tue, 02 Apr 2019 15:51:30 +0000
Unlock honest feedback from your employees with this one word I&amp;rsquo;ve read this article about asking for advice instead of asking for feedback and how that helped.
Tags: comparison, advice, feedback</description>
    </item>
    
    <item>
      <title>Refactoring: split loop &#43; loop/map equivalence</title>
      <link>https://alvarogarcia7.github.io/blog/2019/02/06/refactoring-split-loop-map-equivalence/</link>
      <pubDate>Wed, 06 Feb 2019 20:44:59 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2019/02/06/refactoring-split-loop-map-equivalence/</guid>
      <description>We can combine the &amp;ldquo;Split loop&amp;rdquo; refactoring technique plus the &amp;ldquo;Loop / Map equivalence&amp;rdquo; when refactoring.
Given that it does not matter in which order we apply these operations, we can say that they have the associative property
Chart of the operations Take the case of a loop doing two things. From there:
 we can replace the loop for a map (including the two actions into a single map body) we can split the loop into two loops  Take the case of two loops, doing one thing each.</description>
    </item>
    
    <item>
      <title>Testing a component that includes randomness</title>
      <link>https://alvarogarcia7.github.io/blog/2018/06/15/testing-component-randomness/</link>
      <pubDate>Fri, 15 Jun 2018 09:03:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2018/06/15/testing-component-randomness/</guid>
      <description>Context We have been tasked with designing a component to generate secrets for two-factor authentication (2FA), to ensure that the you also own that other &amp;lsquo;channel&amp;rsquo;.
It has to be secure enough to pass to verify a user, meaning no other user should be able to impersonating another one by guessing the secret.
Solution A first solution that he have implemented is to provide a 6-digit pin code.
The solution (in java) is straightforward: get a Random to generate ints for you.</description>
    </item>
    
    <item>
      <title>Self-Study in June 2018</title>
      <link>https://alvarogarcia7.github.io/blog/2018/06/01/self-study-june-2018/</link>
      <pubDate>Fri, 01 Jun 2018 10:32:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2018/06/01/self-study-june-2018/</guid>
      <description>Don&amp;rsquo;t look, don&amp;rsquo;t tell I&amp;rsquo;ve read this bonilista by David Bonilla on what strategies companies use to deal with security and defects.
Explains full disclosure, responsible disclosure and bug bounties.
Tags: david-bonilla, bonilista, security, full-disclosure, responsible-disclosure, bug-bounty, reporting, hacker, cracker
Id: a1a6925a-7958-11e8-a87f-0242ac110002 Read: Tue, 26 Jun 2018 15:50:21 +0000
La vida de las ideas I&amp;rsquo;ve read this bonilista by David Bonilla about the value of the ideas and what differentiates a good idea from a good execution from a good outcome</description>
    </item>
    
    <item>
      <title>Self-Study in June 2017</title>
      <link>https://alvarogarcia7.github.io/blog/2017/06/01/self-study-june-2017/</link>
      <pubDate>Thu, 01 Jun 2017 11:32:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2017/06/01/self-study-june-2017/</guid>
      <description>So Hey You Should Stop Using Texts for Two-Factor Authentication I&amp;rsquo;ve read this article explaining why messages over SMS should not be used for the &amp;lsquo;what you own&amp;rsquo; in 2FA.
Tags: andy-greenberg, 2fa, sms, security, warning
Why I&amp;rsquo;d never work for Google, Twitter, or Facebook I&amp;rsquo;ve read this article by David Bryant Copeland on why he would never work for these three companies: he doesn&amp;rsquo;t share the principles and values from these companies.</description>
    </item>
    
    <item>
      <title>Modifying titles in a Trello Board</title>
      <link>https://alvarogarcia7.github.io/blog/2017/03/16/modifying-titles-in-a-trello-board/</link>
      <pubDate>Thu, 16 Mar 2017 00:36:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2017/03/16/modifying-titles-in-a-trello-board/</guid>
      <description>A teammate and I have created a small tool to modify the titles of the trello card in a trello board.
Technical description It works by applying a function to the existing title (because we wanted to remove a prefix from the existing title).
The modification is done, not through the API, but simulating user interaction:
 Click to edit the card Input the new title Save  The full code is available here</description>
    </item>
    
    <item>
      <title>Self-Study in June 2016</title>
      <link>https://alvarogarcia7.github.io/blog/2016/06/01/self-study/</link>
      <pubDate>Wed, 01 Jun 2016 21:47:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2016/06/01/self-study/</guid>
      <description>DiversityMediocrityIllusion I&amp;rsquo;ve read this article by Martin Fowler (on his bliki) about the diversity in conferences and the profession. How it is our job to incentive a positive feedback cycle that brings more diverse people into the workforce.
Explains how they do it in ThoughtWorks and how they have changed in the last decade.
Tags: martin-fowler, diversity, gender, workforce, conference, profession, bliki
What do cryptic Github comments mean? I&amp;rsquo;ve read this article by Alex Beregszaszi on the abbreviations used in Github comments and pull requests.</description>
    </item>
    
    <item>
      <title>Self-Study in May 2016</title>
      <link>https://alvarogarcia7.github.io/blog/2016/05/01/self-study/</link>
      <pubDate>Sun, 01 May 2016 00:08:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2016/05/01/self-study/</guid>
      <description>Being A Developer After 40 I&amp;rsquo;ve read this article by Adrian Kosmaczewski on the required topics to be a developer at age 40 and keep enjoying it:
 Forget The Hype Choose Your Galaxy Wisely Learn About Software History Keep on Learning Teach Workplaces Suck Know Your Worth Send The Elevator Down LLVM  He references galaxy, the big stack you are positioned (JVM, .net, PHP, etc). He makes a special mention of the LLVM</description>
    </item>
    
    <item>
      <title>Self-Study in December 2015</title>
      <link>https://alvarogarcia7.github.io/blog/2015/12/02/self-study-in-december-2015/</link>
      <pubDate>Wed, 02 Dec 2015 09:50:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/12/02/self-study-in-december-2015/</guid>
      <description>Ruby Equality And Object Comparison I&amp;rsquo;ve read this article, written by Alan Skorkin, that explains equality comparisons in ruby:
 equal? is reference equality == is value equality eql? is value and type equality  Tags: ruby, comparison, equality, object, reference, alan-skorkin
Software Folklore I&amp;rsquo;ve watched this PechaKucha by Chris Ford on what are laws and how they relate to creating software. Also talks on what could be an analogy to software creation (says not science, not engineering)</description>
    </item>
    
    <item>
      <title>Tip: Propagate the failure in bash</title>
      <link>https://alvarogarcia7.github.io/blog/2015/10/02/tip-propagate-the-failure-in-bash/</link>
      <pubDate>Fri, 02 Oct 2015 08:53:29 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/10/02/tip-propagate-the-failure-in-bash/</guid>
      <description>In bash, the usual behavior is to return the last status code:
bash-3.1$ tr tr: two strings must be given when translating bash-3.1$ echo $? 1 But this also applies to pipes:
bash-3.1$ tr|tee 1.txt tr: two strings must be given when translating bash-3.1$ echo $? 0 Should you want to pass the non-zero (error) status code to the next operation, use this feature toggle: set -o pipefail
bash-3.1$ set -o pipefail bash-3.</description>
    </item>
    
    <item>
      <title>What defines a dependency</title>
      <link>https://alvarogarcia7.github.io/blog/2015/07/13/what-defines-a-dependency/</link>
      <pubDate>Mon, 13 Jul 2015 07:48:28 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/07/13/what-defines-a-dependency/</guid>
      <description>A friend and I were arguing about this code (fragment):
public void register (final String userName) { try { registeredUsers.add(new User(userName)); } catch (AlreadyRegisteredUserException e) { resultListener.alreadyRegistered(userName); } } I would have said that resultListener is a dependency as, first, it was injected by the constructor, second, it is necessary for the execution (negative case).
He suggested that:
 being injected through the constructor is usually what happens with dependencies, but does not make it one (i.</description>
    </item>
    
    <item>
      <title>Inserting clojure code in octopress</title>
      <link>https://alvarogarcia7.github.io/blog/2015/04/14/inserting-clojure-code-in-octopress/</link>
      <pubDate>Tue, 14 Apr 2015 23:48:27 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/04/14/inserting-clojure-code-in-octopress/</guid>
      <description>Inserting this code in the blog:
```clojure (defn all-access[k] (let [{:keys [a b] :as k}] (do a) (do (:b k)))) ```  the octopress processor throws the error:
Error: Pygments can&#39;t parse unknown language: clojure Error: Run jekyll build --trace for more information.  A solution would be to include it as lisp code:
```lisp (defn all-access[k] (let [{:keys [a b] :as k}] (do a) (do (:b k)))) ```  this is an example:</description>
    </item>
    
  </channel>
</rss>
