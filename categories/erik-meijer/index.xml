<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Erik Meijer on The long way through Software Craftsmanship</title>
    <link>https://alvarogarcia7.github.io/categories/erik-meijer/</link>
    <description>Recent content in Erik Meijer on The long way through Software Craftsmanship</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 10 May 2015 21:00:52 +0000</lastBuildDate>
    <atom:link href="https://alvarogarcia7.github.io/categories/erik-meijer/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Talk: Software is eating the world</title>
      <link>https://alvarogarcia7.github.io/blog/2015/05/10/talk-software-is-eating-the-world/</link>
      <pubDate>Sun, 10 May 2015 21:00:52 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/05/10/talk-software-is-eating-the-world/</guid>
      <description>

&lt;p&gt;I&amp;rsquo;ve watched &lt;a href=&#34;http://reaktor.com/blog/erik-meijer-software-eating-world/&#34; target=&#34;_blank&#34;&gt;this talk&lt;/a&gt; by Erik Meijer&lt;/p&gt;

&lt;h2 id=&#34;my-notes&#34;&gt;My notes&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.amazon.com/Agile-The-Good-Hype-Ugly/dp/3319051547&#34; target=&#34;_blank&#34;&gt;Agile!: The Good, the Hype and the Ugly&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The hacker way&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;code always wins vs manager always wins&lt;/li&gt;
&lt;li&gt;source: &lt;a href=&#34;http://www.wired.com/2012/02/zuck-letter/&#34; target=&#34;_blank&#34;&gt;http://www.wired.com/2012/02/zuck-letter/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;we&amp;rsquo;re doing maths =&amp;gt; we&amp;rsquo;re building a proof&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;reinforcement learning&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;agent is the company&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;related to &amp;ldquo;build, measure, learn&amp;rdquo; by Eric Ries (&lt;a href=&#34;http://theleanstartup.com/book&#34; target=&#34;_blank&#34;&gt;the lean startup&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;feedback-systems&#34;&gt;Feedback systems&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Open (no) feedback system, such as timed sprinklers&lt;/li&gt;
&lt;li&gt;Closed feedback system&lt;/li&gt;
&lt;li&gt;Output only system&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;why-everything-is-software&#34;&gt;Why everything is software&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Examples of everything is software&lt;/li&gt;
&lt;li&gt;Software is eating the world&lt;/li&gt;
&lt;li&gt;Even hardware is modeled as software&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;modeling-as-a-finite-state-machine-fsm&#34;&gt;Modeling as a Finite State Machine (FSM)&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;There&amp;rsquo;s memory in the feedback loop. See the &lt;a href=&#34;http://en.wikipedia.org/wiki/Finite-state_machine&#34; target=&#34;_blank&#34;&gt;finite state machine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;A lesson from &amp;ldquo;World War Z&amp;rdquo;: &amp;ldquo;When nine people agree on something, it&amp;rsquo;s the tenth man&amp;rsquo;s responsibility to disagree no matter how improbable the idea&amp;rdquo;. &amp;ldquo;You don&amp;rsquo;t believe your own [ideas]&amp;ldquo;. There&amp;rsquo;s an article &lt;a href=&#34;http://lifehacker.com/plan-more-effectively-with-the-tenth-man-rule-1689738373&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt; and &lt;a href=&#34;http://evidencemag.com/world-war-z/&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;, but they don&amp;rsquo;t cite any official source related to this. The second one cites World War Z again, so it might be &lt;a href=&#34;http://en.wikipedia.org/wiki/Confirmation_bias&#34; target=&#34;_blank&#34;&gt;confirmation bias&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Test in production (e.g., &lt;a href=&#34;https://github.com/Netflix/SimianArmy/wiki/Chaos-Monkey&#34; target=&#34;_blank&#34;&gt;chaos monkey&lt;/a&gt; from Netflix) rather than doing TDD&lt;/li&gt;
&lt;li&gt;No evidence of TDD as effective, he sees it as waste&lt;/li&gt;
&lt;li&gt;Move fast and break things&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;about-layered-organizations&#34;&gt;About layered organizations&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Layered architecture. Examples: OSI, Catholic Church, Army&lt;/li&gt;
&lt;li&gt;Analogy: Software development as a professional team structure (also cited from Netflix)&lt;/li&gt;
&lt;li&gt;Book: Creativity from Constraints: the psychology of breakthrough. Focus, constraint, creativity&lt;/li&gt;
&lt;li&gt;Presentation: &lt;a href=&#34;http://www.infoq.com/presentations/Developing-Expertise-Dave-Thomas&#34; target=&#34;_blank&#34;&gt;Developing Expertise: Herding Racehorses, Racing Sheep&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Analogy: Developers are like junkies, we want to be high all the time&lt;/li&gt;
&lt;li&gt;Answering a new proposal: instead of &amp;ldquo;no, but&amp;rdquo; (black hat), &amp;ldquo;yes and&amp;rdquo; (blue hat). Reference to &lt;a href=&#34;http://www.amazon.com/Bossypants-Tina-Fey-ebook/dp/B0047Y0FGY&#34; target=&#34;_blank&#34;&gt;Bossypants&lt;/a&gt; by Tina Fey&lt;/li&gt;
&lt;li&gt;Your knives, your tools. &amp;ldquo;How can we make millions if we don&amp;rsquo;t value our tools?&amp;rdquo;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;About software:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;software will take over the world, and developers are the ones who make it happen.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;About methodologies:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Programming, motherfucker. Do you speak it?&amp;rdquo; (&lt;a href=&#34;http://programming-motherfucker.com/&#34; target=&#34;_blank&#34;&gt;Source&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
  </channel>
</rss>