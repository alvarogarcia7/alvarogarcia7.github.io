<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>idea on The long way through Software Craftsmanship</title>
    <link>https://alvarogarcia7.github.io/categories/idea/</link>
    <description>Recent content in idea on The long way through Software Craftsmanship</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 01 Dec 2022 00:00:00 +0400</lastBuildDate><atom:link href="https://alvarogarcia7.github.io/categories/idea/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Self-Study in December 2022</title>
      <link>https://alvarogarcia7.github.io/blog/2022/12/01/self-study-december-2022/</link>
      <pubDate>Thu, 01 Dec 2022 00:00:00 +0400</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2022/12/01/self-study-december-2022/</guid>
      <description>CCache: a fast c/c++ compiler cache Related to 027d6f8a-714e-11ed-869a-0242ac110003
Tags: tool, cache, compilation-cache, optimization, speedup, c, cpp, c++, gcc, clang
Id: f2423a38-714d-11ed-92b4-0242ac110003 Read: Thu, 01 Dec 2022 07:58:30 +0000
CATS: OpenAPI fuzzing and test generation tool Tags: cats, tool, openapi, fuzz-testing, test-tool, java, endava, eoin-woods
Id: 08b0cdb0-714f-11ed-a45c-0242ac110003 Read: Thu, 01 Dec 2022 08:06:18 +0000
I&amp;rsquo;ve fuzzed a small part of the GitHub API. Here are my findings. Using CATS to fuzz part of the Github API.</description>
    </item>
    
    <item>
      <title>The value of worthless projects</title>
      <link>https://alvarogarcia7.github.io/articles/2021/09/11/worthless-projects/</link>
      <pubDate>Sat, 11 Sep 2021 10:35:28 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/articles/2021/09/11/worthless-projects/</guid>
      <description>Many people suggest pursuing personal projects in their free time 1. Some of these projects can be turned into businesses (but then you need to work on other parts, not only developing the project).
Among these projects, you can also find worthless (in the economic term) ones. These are useful, among other reasons, 1) for having fun 2) for getting away from a work-related mindset 3) for deliberate practice.
Practicing with these projects gives you the opportunity:</description>
    </item>
    
    <item>
      <title>Self-Study in June 2018</title>
      <link>https://alvarogarcia7.github.io/blog/2018/06/01/self-study-june-2018/</link>
      <pubDate>Fri, 01 Jun 2018 10:32:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2018/06/01/self-study-june-2018/</guid>
      <description>Don&amp;rsquo;t look, don&amp;rsquo;t tell I&amp;rsquo;ve read this bonilista by David Bonilla on what strategies companies use to deal with security and defects.
Explains full disclosure, responsible disclosure and bug bounties.
Tags: david-bonilla, bonilista, security, full-disclosure, responsible-disclosure, bug-bounty, reporting, hacker, cracker
Id: a1a6925a-7958-11e8-a87f-0242ac110002 Read: Tue, 26 Jun 2018 15:50:21 +0000
La vida de las ideas I&amp;rsquo;ve read this bonilista by David Bonilla about the value of the ideas and what differentiates a good idea from a good execution from a good outcome</description>
    </item>
    
    <item>
      <title>Self-Study in November 2015</title>
      <link>https://alvarogarcia7.github.io/blog/2015/11/02/self-study-in-november-2015/</link>
      <pubDate>Mon, 02 Nov 2015 15:25:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/11/02/self-study-in-november-2015/</guid>
      <description>Call me maybe: RabbitMQ I&amp;rsquo;ve read this article by Kyle Kingsbury on using RabbitMQ as a lock service. It investigates and gives a counterexample of using it for this purpose.
Uses Knossos to do the testing and surfaces a problem with it. Explains specific problems on locking: at-most-once and at-least-once message delivery
Note: References Jepsen (I guess an inside joke to the song &amp;ldquo;Call me maybe&amp;rdquo; by Carly Rae Jepsen) for at-most-once and at-least-once message delivery.</description>
    </item>
    
    <item>
      <title>Self-Study in September 2015</title>
      <link>https://alvarogarcia7.github.io/blog/2015/09/01/self-study-in-september-2015/</link>
      <pubDate>Tue, 01 Sep 2015 15:25:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/09/01/self-study-in-september-2015/</guid>
      <description>The 30 second habit with a lifelong impact I&amp;rsquo;ve read this article list of patterns, by Robyn Scott, in which it is explained why to compress information in a few ideas, investing 30 seconds to condense the article.
Tags: 30-second, habit, robyn-scott
The Strengths and Weaknesses of Extreme Programming I&amp;rsquo;ve watched this video explaining the strengths and weaknesses of extreme programming. By William Matheson
Tags: extreme-programming, xp, william-matheson, video, strength, weakness</description>
    </item>
    
    <item>
      <title>What versus How</title>
      <link>https://alvarogarcia7.github.io/blog/2015/05/06/what-versus-how/</link>
      <pubDate>Wed, 06 May 2015 07:15:08 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/05/06/what-versus-how/</guid>
      <description>After reading the GOOS1, the more and more I get this feeling of what vs how:
 Information hiding The total simpler than the sum of the parts Extracting a concept so you can think about this. Makes you find better names:  test name variable name method name interface / protocol name    I also got this feeling when reading Clean Code. But with this other book the smell is much harder, stronger.</description>
    </item>
    
    <item>
      <title>Demand for TDD and Refactor</title>
      <link>https://alvarogarcia7.github.io/blog/2015/04/25/demand-for-tdd-and-refactor/</link>
      <pubDate>Sat, 25 Apr 2015 13:28:20 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/04/25/demand-for-tdd-and-refactor/</guid>
      <description>When I went to the Jason Gorman&amp;rsquo;s TDD workshop (experience report here), he said something interesting regarding refactor and TDD:
 In job offers / advertisements, TDD is much more in demand than refactor. But the latter is included in the former as an integral part.
Jason Gorman
 I agree with the second thought: you cannot properly do TDD without refactoring, as it is an integral part; also the third phase.</description>
    </item>
    
    <item>
      <title>Code Snippets Stash</title>
      <link>https://alvarogarcia7.github.io/blog/2015/01/24/code-snippets-stash/</link>
      <pubDate>Sat, 24 Jan 2015 20:49:55 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/01/24/code-snippets-stash/</guid>
      <description>Following a team member&amp;rsquo;s recommendation, I recently started a repository to save all my useful snippets.
I&amp;rsquo;ve decided that the examples should be designed guided by tests or at least to have a working example exercised by tests. Also, that I should not reinvent the wheel and use as many open source libraries as possible, reducing the amount of code I have to write myself.
Ideally, every snippet should be a maven project (where applicable) and be imported as a small library, therefore being able to reuse the functionality incrementally across projects.</description>
    </item>
    
  </channel>
</rss>
