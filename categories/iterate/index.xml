<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>The long way through Software Craftsmanship</title>
    <link>https://alvarogarcia7.github.io/categories/iterate/index.xml</link>
    <description>Recent content on The long way through Software Craftsmanship</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="https://alvarogarcia7.github.io/categories/iterate/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Iterate with index in clojure</title>
      <link>https://alvarogarcia7.github.io/blog/2015/07/04/iterate-with-index-in-clojure/</link>
      <pubDate>Sat, 04 Jul 2015 14:34:37 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/07/04/iterate-with-index-in-clojure/</guid>
      <description>&lt;p&gt;Scenario: iterate a sequence (&lt;code&gt;seq&lt;/code&gt;) with its index&lt;/p&gt;

&lt;p&gt;The lines have an implicit line number (starting by 1, in most editors):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[1] line1
[2] line2
[3] hello
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;When you read it from file to a variable, it is converted to:&lt;/p&gt;
(&#34;line1&#34; &#34;line2&#34; &#34;hello&#34;)

&lt;p&gt;This implicit line number value is not present, therefore you need to assign them one.&lt;/p&gt;

&lt;p&gt;In ruby, you have this construct:&lt;/p&gt;
array = [&#34;A&#34;, &#34;B&#34;, &#34;C&#34;]
array.each_with_index {|val, index| puts &#34;#{val} =&gt; #{index}&#34; }

&lt;p&gt;&lt;a href=&#34;http://stackoverflow.com/questions/310634/what-is-the-right-way-to-iterate-through-an-array-in-ruby/310638#310638&#34; target=&#34;_blank&#34;&gt;Source&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In clojure, there is a similar function:&lt;/p&gt;
(map-indexed (fn [idx itm] [idx itm]) &#39;(:f :o))
; ([0 &#34;line1&#34;] [1 &#34;line2&#34;] [2 &#34;hello&#34;])

&lt;p&gt;If you want to shift the collection to the right so it starts with 1 (for the REPL):&lt;/p&gt;
(def lines &#39;(&#34;line1&#34; &#34;line2&#34; &#34;hello&#34;))
; (&#34;line1&#34; &#34;line2&#34; &#34;hello&#34;)

(defn shift-one [lines] 
  (cons &#34;&#34; lines))
(def lines (shift-one lines))
lines
; (&#34;&#34; &#34;line1&#34; &#34;line2&#34; &#34;hello&#34;)

(map-indexed (fn [idx itm] [idx itm])
  lines)  
; ([0 &#34;&#34;] [1 &#34;line1&#34;] [2 &#34;line2&#34;] [3 &#34;hello&#34;])

&lt;p&gt;&lt;a href=&#34;https://clojuredocs.org/clojure.core/map-indexed&#34; target=&#34;_blank&#34;&gt;Source&lt;/a&gt;, especially &lt;a href=&#34;https://clojuredocs.org/clojure.core/map-indexed#example-542692cdc026201cdc326d25&#34; target=&#34;_blank&#34;&gt;this one&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But if you only need to get the lines at certain indexes, it is also possible to get the values directly, using &lt;code&gt;map&lt;/code&gt; on the sequence of desired indexes:&lt;/p&gt;
lines
; (&#34;&#34; &#34;line1&#34; &#34;line2&#34; &#34;hello&#34;)

(defn get-all [lines indexes]
  (map #(nth lines %) indexes))
(get-all lines &#39;(1 2))
; (&#34;line1&#34; &#34;line2&#34;)

(get-all lines &#39;(1 1))
; (&#34;line1&#34; &#34;line1&#34;)

&lt;p&gt;Note: the original source code for this post is &lt;a href=&#34;https://github.com/alvarogarcia7/clojure-simple-sessions/blob/master/test/simple/iterate-with-index.clj&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>