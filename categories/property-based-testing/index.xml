<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>property-based-testing on The long way through Software Craftsmanship</title>
    <link>https://alvarogarcia7.github.io/categories/property-based-testing/</link>
    <description>Recent content in property-based-testing on The long way through Software Craftsmanship</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 01 Jan 2021 00:00:00 +0400</lastBuildDate><atom:link href="https://alvarogarcia7.github.io/categories/property-based-testing/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Self-Study in January 2021</title>
      <link>https://alvarogarcia7.github.io/blog/2021/01/01/self-study-january-2021/</link>
      <pubDate>Fri, 01 Jan 2021 00:00:00 +0400</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2021/01/01/self-study-january-2021/</guid>
      <description>Perfect Media Server Hacker News discussion on a media server, half open source (?).
Tags: hacker-news, media-server, perfect, tool, software
Id: c37b0f2a-4dc5-11eb-8048-0242ac110002 Read: Sun, 03 Jan 2021 13:15:34 +0000
How your startup can survive technical debt Mentions the paradox of success: you need debt to start quickly, yet too quickly leaves no time to pay debt. Hence your prototype turns into an MVP, and that is your first piecce of technical debt.</description>
    </item>
    
    <item>
      <title>Self-study in July 2015</title>
      <link>https://alvarogarcia7.github.io/blog/2015/07/01/self-study-in-july-2015/</link>
      <pubDate>Wed, 01 Jul 2015 01:08:10 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/07/01/self-study-in-july-2015/</guid>
      <description>I&amp;rsquo;ve grouped all small posts related to the self-study from July 2015 into a single post
Clojure made simple I&amp;rsquo;ve watched this talk by Rich Hickey at the Java One. It references the talk Easy made simple
 polymorphism without inheritance; single dispatch on the first parameter  Productive pair programming I&amp;rsquo;ve read this article about pair programming, using the driver &amp;amp; copilot technique, written by Carlos Bl√©
Building Automated REST APIs with Python Investigating QA automation for REST APIs, I&amp;rsquo;ve read these slides about it</description>
    </item>
    
  </channel>
</rss>
