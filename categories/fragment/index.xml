<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>fragment on The long way through Software Craftsmanship</title>
    <link>https://alvarogarcia7.github.io/categories/fragment/</link>
    <description>Recent content in fragment on The long way through Software Craftsmanship</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 13 Jul 2015 07:48:28 +0000</lastBuildDate><atom:link href="https://alvarogarcia7.github.io/categories/fragment/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>What defines a dependency</title>
      <link>https://alvarogarcia7.github.io/blog/2015/07/13/what-defines-a-dependency/</link>
      <pubDate>Mon, 13 Jul 2015 07:48:28 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/07/13/what-defines-a-dependency/</guid>
      <description>A friend and I were arguing about this code (fragment):
public void register (final String userName) { try { registeredUsers.add(new User(userName)); } catch (AlreadyRegisteredUserException e) { resultListener.alreadyRegistered(userName); } } I would have said that resultListener is a dependency as, first, it was injected by the constructor, second, it is necessary for the execution (negative case).
He suggested that:
 being injected through the constructor is usually what happens with dependencies, but does not make it one (i.</description>
    </item>
    
  </channel>
</rss>
