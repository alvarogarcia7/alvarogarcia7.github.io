<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>client on The long way through Software Craftsmanship</title>
    <link>https://alvarogarcia7.github.io/categories/client/</link>
    <description>Recent content in client on The long way through Software Craftsmanship</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 01 Mar 2019 10:32:19 +0000</lastBuildDate><atom:link href="https://alvarogarcia7.github.io/categories/client/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Self-Study in March 2019</title>
      <link>https://alvarogarcia7.github.io/blog/2019/03/01/self-study-march-2019/</link>
      <pubDate>Fri, 01 Mar 2019 10:32:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2019/03/01/self-study-march-2019/</guid>
      <description>NodeJS logging made right Explains logging and tracing in nodejs.
Usage of thread-local storage, trace id, continuation local storage.
Tags: nodejs, logging, tracing, thread-local, thread-local-storage, trace-id, continuation-local-storage, cls, tls, proxy, hook
Id: 5bed4596-3f5b-11e9-83e1-0242ac110005 Read: Tue, 05 Mar 2019 15:28:42 +0000
Web Design 3.0: When Your Web Design Really Matters  In Chapter 1, we will find out how Web Design is changing. Also, you will learn about the birth of the new generation of web designers, who are designing web pages in Web Design 3.</description>
    </item>
    
    <item>
      <title>Questioning the existing choices</title>
      <link>https://alvarogarcia7.github.io/blog/2018/07/04/questioning-existing-choices/</link>
      <pubDate>Wed, 04 Jul 2018 07:03:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2018/07/04/questioning-existing-choices/</guid>
      <description>Context For a client, we have worked on a service that works with files (containing sensitive data) that get corrupted very often.
The use case is generally:
 Two/Three file opens per day One modification per 10 file opens One corruption per 100 file opens  Initial solution The initial solution was just to copy the file (file.txt) before opening, after closing. This results in two files (YYY-MM-DDTHH-mm-ss_before_file.txt, YYY-MM-DDTHH-mm-ss_after_file.txt).
As this solution quickly became unmaintainable, the client developed a solution to hash the contents of the file and to remove the duplicated files.</description>
    </item>
    
    <item>
      <title>Self-Study in July 2018</title>
      <link>https://alvarogarcia7.github.io/blog/2018/07/01/self-study-july-2018/</link>
      <pubDate>Sun, 01 Jul 2018 10:32:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2018/07/01/self-study-july-2018/</guid>
      <description>The Haskell Pyramid I&amp;rsquo;ve read this article on how the productivity for Haskell is achieved: not using the topics discussed on social networks (monads, functors, laws, lenses, etc) but using more basic tools
Tags: haskell, productivity, lucas-di-cioccio, learning, development, tool, monad, hype, pyramid, productive-haskell-bar, bar
Id: 454f53fc-7dd6-11e8-8208-0242ac110003 Read: Mon, 02 Jul 2018 08:59:47 +0000
El verde m√°s verde I&amp;rsquo;ve read this article on how to structure creative projects (e.g., UX, programming) by professionals, as told by David Bonilla.</description>
    </item>
    
    <item>
      <title>On the Make, Buy or Rent decision: Stateful vs Stateless components</title>
      <link>https://alvarogarcia7.github.io/blog/2017/03/16/on-the-make-buy-or-rent-decision-stateful-vs-stateless-components/</link>
      <pubDate>Thu, 16 Mar 2017 07:39:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2017/03/16/on-the-make-buy-or-rent-decision-stateful-vs-stateless-components/</guid>
      <description>From the Make, Buy or Rent article:
 [&amp;hellip;] [T]he three main system options for organizations seeking to upgrade their systems [are :]
  Make Buy Rent  IT managers have different criteria for deciding which components to assign in each category.
Another criteria for deciding At a client, they have taken the decision to split their core IT systems in to the three options: make, buy, rent.
 The business logic to handle the core business is &amp;lsquo;make&amp;rsquo;.</description>
    </item>
    
    <item>
      <title>Self-Study in February 2016</title>
      <link>https://alvarogarcia7.github.io/blog/2016/02/01/self-study-in-february-2016/</link>
      <pubDate>Mon, 01 Feb 2016 02:55:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2016/02/01/self-study-in-february-2016/</guid>
      <description>Software and all that comes with it I&amp;rsquo;ve read these slides about creating software and asking questions to deliver value, by Alberto Brandolini
Tags: alberto-brandolini, software, slide, team-management, agile
Driving your DBA crazy in 3 easy steps I&amp;rsquo;ve read these slides about dealing with the knowledge that is present in the database, not expressed in ubiquitous language and cause of the low bus factor, by Alberto Brandolini
Analogy between the movie The Shining and a model / entities / aggregates.</description>
    </item>
    
    <item>
      <title>Self-Study in December 2015</title>
      <link>https://alvarogarcia7.github.io/blog/2015/12/02/self-study-in-december-2015/</link>
      <pubDate>Wed, 02 Dec 2015 09:50:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/12/02/self-study-in-december-2015/</guid>
      <description>Ruby Equality And Object Comparison I&amp;rsquo;ve read this article, written by Alan Skorkin, that explains equality comparisons in ruby:
 equal? is reference equality == is value equality eql? is value and type equality  Tags: ruby, comparison, equality, object, reference, alan-skorkin
Software Folklore I&amp;rsquo;ve watched this PechaKucha by Chris Ford on what are laws and how they relate to creating software. Also talks on what could be an analogy to software creation (says not science, not engineering)</description>
    </item>
    
    <item>
      <title>Brown Bag Session: Clojure&#39;s Data and Code</title>
      <link>https://alvarogarcia7.github.io/blog/2015/09/23/brown-bag-session-clojures-data-and-code/</link>
      <pubDate>Wed, 23 Sep 2015 21:24:58 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/09/23/brown-bag-session-clojures-data-and-code/</guid>
      <description>Today, at a client, I&amp;rsquo;ve facilitated the brown-bag session on Clojure, introducing Lisp&amp;rsquo;s homoiconicity.
Session Structure The session was designed as a kata, first introducing participants in the problem, letting some time to read the initial version and to think about possible solutions.
Then, I structured the rest of the time as a prepared kata, where I was explaining in the beamer our current problems (day-to-day tasks) and possible solutions in Clojure.</description>
    </item>
    
    <item>
      <title>Brown-bag session: eXtreme Programming</title>
      <link>https://alvarogarcia7.github.io/blog/2015/09/02/brownbag-session-xtreme-programming/</link>
      <pubDate>Wed, 02 Sep 2015 10:41:16 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/09/02/brownbag-session-xtreme-programming/</guid>
      <description>At a client, today I&amp;rsquo;ve introduced the eXtreme Programmig methodology, with its values, principles, practices in a brown-bag session.
It has been an informal session, without slides, but we have used this video by the Kleer guys (in Spanish).
The video gives a high-level overview of what XP is. We also needed to cover the daily practices (e.g., TDD, pair programming, whole team)
After that, we&amp;rsquo;ve done a questions&amp;amp;answers round to solve the teammates&#39; doubts</description>
    </item>
    
    <item>
      <title>Coding dojo: Palindromes</title>
      <link>https://alvarogarcia7.github.io/blog/2015/08/19/coding-dojo-palindromes/</link>
      <pubDate>Wed, 19 Aug 2015 11:37:16 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/08/19/coding-dojo-palindromes/</guid>
      <description>At a client, today I&amp;rsquo;ve facilitated a coding dojo on palindrome searching.
I&amp;rsquo;ve prepared a github repository for the java solutions. In this repository, the tag start-here has the prepared pom with dependencies.
We have paired to work on the kata but none of my teammate&amp;rsquo;s solutions are available (at the moment), but mine is at the master branch.</description>
    </item>
    
    <item>
      <title>Brown-bag session: Spring Boot</title>
      <link>https://alvarogarcia7.github.io/blog/2015/08/12/brownbag-session-spring-boot/</link>
      <pubDate>Wed, 12 Aug 2015 10:44:16 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/08/12/brownbag-session-spring-boot/</guid>
      <description>At a client, today we&amp;rsquo;ve done a brown-bag session on Spring Boot: we&amp;rsquo;ve gone through the basics with a sample maven project and its pom file.
We&amp;rsquo;ve seen the Spring Initializr and a live demo, using curl for REST client.</description>
    </item>
    
    <item>
      <title>Brown-bag session and Dojo: Beginning Clojure</title>
      <link>https://alvarogarcia7.github.io/blog/2015/08/05/brown-bag-session-and-dojo-beginning-clojure/</link>
      <pubDate>Wed, 05 Aug 2015 01:14:14 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/08/05/brown-bag-session-and-dojo-beginning-clojure/</guid>
      <description>At a client, today I&amp;rsquo;ve facilitated a brown-bag session introducing the Clojure language to a group of java programmers.
I&amp;rsquo;ve started hands-on, live coding on a REPL. To make things easier, I&amp;rsquo;ve created a maven project that imports the clojure jar and lets you obtain dependencies from clojars. The repo is here. This repo wouldn&amp;rsquo;t have been possible without the clojure maven plugin, written by Mark Derricutt.
I&amp;rsquo;ve more or less followed this guide</description>
    </item>
    
    <item>
      <title>Self-Study in August 2015</title>
      <link>https://alvarogarcia7.github.io/blog/2015/08/02/self-study-in-august-2015/</link>
      <pubDate>Sun, 02 Aug 2015 21:45:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/08/02/self-study-in-august-2015/</guid>
      <description>Humble Object I&amp;rsquo;ve read the Humble Object list of patterns, by Gerard Meszaros, including:
 humble dialog humble executable humble transaction controller humble container adapter  Tags: pattern, gerard-meszaros
How you know I&amp;rsquo;ve reread this small essay by Paul Graham on storing information in our heads, based on the context. On the importance of rereading, to add more contexts to the initial one.
Tags: paul-graham, reread, read
Protected Variation: The Importance of Being Closed I&amp;rsquo;ve read this article by Craig Larman in the magazine IEEE Software &amp;gt; Design.</description>
    </item>
    
    <item>
      <title>Exploring Testing with Java 8 Lambdas</title>
      <link>https://alvarogarcia7.github.io/blog/2015/07/30/exploring-testing-with-java-8-lambdas/</link>
      <pubDate>Thu, 30 Jul 2015 13:04:10 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/07/30/exploring-testing-with-java-8-lambdas/</guid>
      <description>At a client, we were testing a simple feature, but the resulting tests had much subtle repetition:
(source code is here)
@Test public void log_when_sending_greeting_letters() { sut.send(mock(GreetingLetter.class)); verify(logger).sentGreetingLetter(); } @Test public void log_when_sending_love_letters() { sut.send(mock(LoveLetter.class)); verify(logger).sentLoveLetter(); } and the production code:
public class MailSender { private final EventLogger eventLogger; public MailSender (final EventLogger eventLogger) { this.eventLogger = eventLogger; } public void send (final GreetingLetter letter) { // more business logic 	eventLogger.</description>
    </item>
    
    <item>
      <title>Brown-bag session: refactoring legacy code</title>
      <link>https://alvarogarcia7.github.io/blog/2015/07/01/brownbag-session-refactoring-legacy-code/</link>
      <pubDate>Wed, 01 Jul 2015 13:18:28 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/07/01/brownbag-session-refactoring-legacy-code/</guid>
      <description>Today I have done a brown bag session about refactoring legacy code. It includes:
 legacy code definition. There is no agreement about this in the team. the legacy code change algorithm (source is Feathers, Working effectively with legacy code). Plus an example about it. working with legacy code experience with it.  The slides are available here (PDF format)
We also did a practical session, whose experience report is here</description>
    </item>
    
    <item>
      <title>Brown-bag session: Refactoring legacy code</title>
      <link>https://alvarogarcia7.github.io/blog/2015/06/23/brown-bag-session-refactoring-legacy-code/</link>
      <pubDate>Tue, 23 Jun 2015 19:19:28 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/06/23/brown-bag-session-refactoring-legacy-code/</guid>
      <description>Today I have facilitated a brown bag session about refactoring legacy code applications, as this is the case with one of the applications we maintain and add new features to.
The contents of the session:
 Briefly exposing the problem to the team, me taking the role of the Product Owner (PO) Ask the dev team to add an easy feature Do it without tests, as it was so simple that they thought they could do it (using mob programming) Ask if they were satisfied by the patch / fix.</description>
    </item>
    
    <item>
      <title>Brown-bag session: docker</title>
      <link>https://alvarogarcia7.github.io/blog/2015/06/16/brown-bag-session-docker/</link>
      <pubDate>Tue, 16 Jun 2015 18:52:28 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/06/16/brown-bag-session-docker/</guid>
      <description>Today we have done a brown bag session about Docker. One of the team members explained to us the latest news, topics and how tos, including:
 the difference between a container and an image diffing image contents AUFS (Another Union FS) persistent vs non-persistent (volatile) filesystems running CMD and other commands on the instance problems of running with permission = root (or its group) downsides of it how to compare it with a virtual machine  </description>
    </item>
    
    <item>
      <title>Logging is a feature</title>
      <link>https://alvarogarcia7.github.io/blog/2015/04/19/logging-is-a-feature/</link>
      <pubDate>Sun, 19 Apr 2015 23:43:10 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/04/19/logging-is-a-feature/</guid>
      <description>At a client, we&amp;rsquo;re facing this challenge: we cannot access production logs, as we don&amp;rsquo;t have access to production environments. The solution we&amp;rsquo;ve chose is to implement the logging component as a layer on top of Splunk.
This formatter layer &amp;ndash;per component&amp;ndash; accesses a generic layer &amp;ndash;for the whole company&amp;ndash; that accesses splunk. In this manner, it is very easy to reuse the splunk connection and configuration and inject mocks. Also helps with the local environment: you always log to console (even if in production you don&amp;rsquo;t have access to it) and can disable this in local, not needing a local splunk installation.</description>
    </item>
    
    <item>
      <title>The Guardian of the Source</title>
      <link>https://alvarogarcia7.github.io/blog/2015/04/17/the-guardian-of-the-source/</link>
      <pubDate>Fri, 17 Apr 2015 22:01:48 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/04/17/the-guardian-of-the-source/</guid>
      <description>Overheard today at the office, while they were discussing the approval of a pull request:
 [Pull request reviewer] - I&amp;rsquo;m sorry, can&amp;rsquo;t approve this: I don&amp;rsquo;t really agree with this design. Isn&amp;rsquo;t there an alternative for this?
[Pull request author] - [redacted], of course you don&amp;rsquo;t, you&amp;rsquo;re the guardian of the source
[PR reviewer] - Well, sometimes I&amp;rsquo;m a bit picky about introducing bad code into our codebase.
 This has made me think about Gandalf blocking the path of Balrog Demon, shouting &amp;ldquo;[you shall not pass][you-shall-not-pass-meme]&amp;rdquo; while on top of the bridge.</description>
    </item>
    
    <item>
      <title>Brown-bag session: maven</title>
      <link>https://alvarogarcia7.github.io/blog/2015/03/06/brown-bag-session-maven/</link>
      <pubDate>Fri, 06 Mar 2015 22:18:28 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/03/06/brown-bag-session-maven/</guid>
      <description>Yesterday we did a training about the maven tool. One of the team members explained to us some topics including:
 lifecycles profiles and how to create one  slowTests for integration tests (this client only) downloadJavadoc downloadSources   convention over configuration scopes of the dependencies (test, runtime, compile, provided) tricks about the tool:  order of the dependencies (especially junit, hamcrest)   plugins and how to build one destination folders  target, classes, test-classes, etc    Note: this post was created a posteriori, with the original date</description>
    </item>
    
  </channel>
</rss>
