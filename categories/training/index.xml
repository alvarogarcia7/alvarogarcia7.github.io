<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>training on The long way through Software Craftsmanship</title>
    <link>https://alvarogarcia7.github.io/categories/training/</link>
    <description>Recent content in training on The long way through Software Craftsmanship</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 01 Jun 2018 10:32:19 +0000</lastBuildDate><atom:link href="https://alvarogarcia7.github.io/categories/training/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Self-Study in June 2018</title>
      <link>https://alvarogarcia7.github.io/blog/2018/06/01/self-study-june-2018/</link>
      <pubDate>Fri, 01 Jun 2018 10:32:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2018/06/01/self-study-june-2018/</guid>
      <description>Don&amp;rsquo;t look, don&amp;rsquo;t tell I&amp;rsquo;ve read this bonilista by David Bonilla on what strategies companies use to deal with security and defects.
Explains full disclosure, responsible disclosure and bug bounties.
Tags: david-bonilla, bonilista, security, full-disclosure, responsible-disclosure, bug-bounty, reporting, hacker, cracker
Id: a1a6925a-7958-11e8-a87f-0242ac110002 Read: Tue, 26 Jun 2018 15:50:21 +0000
La vida de las ideas I&amp;rsquo;ve read this bonilista by David Bonilla about the value of the ideas and what differentiates a good idea from a good execution from a good outcome</description>
    </item>
    
    <item>
      <title>Brown Bag Session: Clojure&#39;s Data and Code</title>
      <link>https://alvarogarcia7.github.io/blog/2015/09/23/brown-bag-session-clojures-data-and-code/</link>
      <pubDate>Wed, 23 Sep 2015 21:24:58 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/09/23/brown-bag-session-clojures-data-and-code/</guid>
      <description>Today, at a client, I&amp;rsquo;ve facilitated the brown-bag session on Clojure, introducing Lisp&amp;rsquo;s homoiconicity.
Session Structure The session was designed as a kata, first introducing participants in the problem, letting some time to read the initial version and to think about possible solutions.
Then, I structured the rest of the time as a prepared kata, where I was explaining in the beamer our current problems (day-to-day tasks) and possible solutions in Clojure.</description>
    </item>
    
    <item>
      <title>Brown-bag session: refactoring legacy code</title>
      <link>https://alvarogarcia7.github.io/blog/2015/07/01/brownbag-session-refactoring-legacy-code/</link>
      <pubDate>Wed, 01 Jul 2015 13:18:28 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/07/01/brownbag-session-refactoring-legacy-code/</guid>
      <description>Today I have done a brown bag session about refactoring legacy code. It includes:
 legacy code definition. There is no agreement about this in the team. the legacy code change algorithm (source is Feathers, Working effectively with legacy code). Plus an example about it. working with legacy code experience with it.  The slides are available here (PDF format)
We also did a practical session, whose experience report is here</description>
    </item>
    
    <item>
      <title>Brown-bag session: Refactoring legacy code</title>
      <link>https://alvarogarcia7.github.io/blog/2015/06/23/brown-bag-session-refactoring-legacy-code/</link>
      <pubDate>Tue, 23 Jun 2015 19:19:28 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/06/23/brown-bag-session-refactoring-legacy-code/</guid>
      <description>Today I have facilitated a brown bag session about refactoring legacy code applications, as this is the case with one of the applications we maintain and add new features to.
The contents of the session:
 Briefly exposing the problem to the team, me taking the role of the Product Owner (PO) Ask the dev team to add an easy feature Do it without tests, as it was so simple that they thought they could do it (using mob programming) Ask if they were satisfied by the patch / fix.</description>
    </item>
    
    <item>
      <title>Brown-bag session: docker</title>
      <link>https://alvarogarcia7.github.io/blog/2015/06/16/brown-bag-session-docker/</link>
      <pubDate>Tue, 16 Jun 2015 18:52:28 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/06/16/brown-bag-session-docker/</guid>
      <description>Today we have done a brown bag session about Docker. One of the team members explained to us the latest news, topics and how tos, including:
 the difference between a container and an image diffing image contents AUFS (Another Union FS) persistent vs non-persistent (volatile) filesystems running CMD and other commands on the instance problems of running with permission = root (or its group) downsides of it how to compare it with a virtual machine  </description>
    </item>
    
    <item>
      <title>Internal training: BPM: Process and tools for developers</title>
      <link>https://alvarogarcia7.github.io/blog/2015/06/02/internal-training-bpm-tool-and-process/</link>
      <pubDate>Tue, 02 Jun 2015 22:20:09 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/06/02/internal-training-bpm-tool-and-process/</guid>
      <description>At a client, I&amp;rsquo;ve presented today an internal training on &amp;ldquo;BPM: Process and tools for developers&amp;rdquo;
In it, we have introduced the BPM concept and the main ideas in Activiti BPM.
Also techniques for hotswapping processes, tips and how-tos.</description>
    </item>
    
    <item>
      <title>Internal training: QA &amp;amp; how to test</title>
      <link>https://alvarogarcia7.github.io/blog/2015/05/18/internal-training-qa-and-how-to-test/</link>
      <pubDate>Mon, 18 May 2015 22:20:09 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/05/18/internal-training-qa-and-how-to-test/</guid>
      <description>At a client, we&amp;rsquo;ve done today an internal training on &amp;ldquo;QA &amp;amp; how to test&amp;rdquo;. In it, the most skilled person with the QA role in the dev team has explained to us some techniques and concepts for testing
My notes Verification vs validation: building the product right vs building the right product.
Principles Extracted from ISTQB:
 testing shows presence of defects exhaustive testing is impossible early testing is better than later testing defect clustering: areas with bigger defect ratio or more critical, etc should be tested more thoroughly pesticide paradox testing is context-dependent absence of errors fallacy: the absence of defects does not imply perfect software.</description>
    </item>
    
    <item>
      <title>Internal training: Testing is hard - just do it</title>
      <link>https://alvarogarcia7.github.io/blog/2015/05/05/internal-training-testing-is-hard-just-do-it/</link>
      <pubDate>Tue, 05 May 2015 23:00:17 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/05/05/internal-training-testing-is-hard-just-do-it/</guid>
      <description>At a client, last week I&amp;rsquo;ve organized an internal training, in the form of a discussion about this article: Testing is hard - just do it
Our thoughts  When a bug is found, prove it exists with a test
 This immediately reduces defect rate: the same regression cannot be introduced again
 fix a bug a second time
 If fixing a bug (having defects in your code) was &amp;lsquo;waste&amp;rsquo;, as defined by lean methodologies, it also is wast fixing it for the following times</description>
    </item>
    
    <item>
      <title>Internal training: Introduction to AngularJs</title>
      <link>https://alvarogarcia7.github.io/blog/2015/04/30/internal-training-introduction-to-angularjs/</link>
      <pubDate>Thu, 30 Apr 2015 20:22:16 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/04/30/internal-training-introduction-to-angularjs/</guid>
      <description>At a client, today I&amp;rsquo;ve done an internal training on angular js: we&amp;rsquo;ve prepared some slides and a live demo.
The repository with all the information can be found here.
Apparently, the training has been a success, given that most of the talent in the team is backend focused (as opposed to full-stack) and changing from java to javascript is not straight-forward.
Note: this post has been created a posteriori, dated with the correct training timestamp.</description>
    </item>
    
    <item>
      <title>Experience report: Test-driven development intensive, by Jason Gorman</title>
      <link>https://alvarogarcia7.github.io/blog/2015/04/12/jason-gorman-tdd-intensive-workshop/</link>
      <pubDate>Sun, 12 Apr 2015 20:13:45 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/04/12/jason-gorman-tdd-intensive-workshop/</guid>
      <description>This is an experience report on Jason Gorman&amp;rsquo;s &amp;ldquo;Test-driven development intensive workshop&amp;rdquo; on the April 11th, 2015
I attended this training in the Greenfell housing &amp;amp; training in South Wimbledon, London SW19 1JZ. The training spanned from 10:00 to 17:00 with a half an hour for lunch plus three or four 10-15 minute pauses. (7 - ,5 - 4 * 12/60 = ~5.7hours = 5 hours 45 minutes)
Introduction There were 23 of us, including me.</description>
    </item>
    
    <item>
      <title>TDD Meetup Retrospective</title>
      <link>https://alvarogarcia7.github.io/blog/2015/03/16/tdd-meetup-retrospective/</link>
      <pubDate>Mon, 16 Mar 2015 05:42:44 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/03/16/tdd-meetup-retrospective/</guid>
      <description>Yesterday we organized a TDD meetup at the FIB - Barcelona School of Informatics UPC, within Barcelona Software Craftsmanship sponsored by the Junior Empresa d&amp;rsquo;Informàtica. The meetup started at 9:00 until 18:00, with a one-hour pause in the middle.
Where  Please make sure the meetup space (e.g., classroom, meeting room) is available and ready to be used at least 15 minutes before the meetup starts The organizer and the event host should be there in advance to prepare the physical environment (chairs, wifi, beamer, etc) as well as mentally: getting comfortable with the space, loading the presentation, prepare the speaker notes, etc.</description>
    </item>
    
    <item>
      <title>Brown-bag session: maven</title>
      <link>https://alvarogarcia7.github.io/blog/2015/03/06/brown-bag-session-maven/</link>
      <pubDate>Fri, 06 Mar 2015 22:18:28 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/03/06/brown-bag-session-maven/</guid>
      <description>Yesterday we did a training about the maven tool. One of the team members explained to us some topics including:
 lifecycles profiles and how to create one  slowTests for integration tests (this client only) downloadJavadoc downloadSources   convention over configuration scopes of the dependencies (test, runtime, compile, provided) tricks about the tool:  order of the dependencies (especially junit, hamcrest)   plugins and how to build one destination folders  target, classes, test-classes, etc    Note: this post was created a posteriori, with the original date</description>
    </item>
    
    <item>
      <title>Mob programming String calculator kata</title>
      <link>https://alvarogarcia7.github.io/blog/2015/03/03/mob-programming-string-calculator-kata/</link>
      <pubDate>Tue, 03 Mar 2015 04:46:48 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/03/03/mob-programming-string-calculator-kata/</guid>
      <description>Last Friday we did a kata1 using a projector the string calculator 2 using pair programming, TDD and some mob-programming for the last refactoring.
We used a projector (beamer) so everyone could see it. I tried to take really small baby steps but the adding part was done in ~6 cycles3
We&amp;rsquo;ve all learnt about shotcuts, live user templates for the IDE 4, TDD methodology, other ways of tackling the problem, how to refactor as a group, clean code, etc</description>
    </item>
    
    <item>
      <title>Open discussion: Behaviour-Driven Development</title>
      <link>https://alvarogarcia7.github.io/blog/2015/02/15/open-discussion-behaviour-driven-development/</link>
      <pubDate>Sun, 15 Feb 2015 02:30:38 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/02/15/open-discussion-behaviour-driven-development/</guid>
      <description>This week we had a great discussion about Behavior Driven Development (BDD). We have explained it as a way of developing software based on requirements, via automatically tested specifications. For more information, see the wikipedia&amp;rsquo;s article on the subject
I forgot to mention that this is the perfect start to TDD, as this is usually called the double-loop TDD. See a post on it on coding is like cooking
In this double-loop TDD, the first thing is to create a BDD scenario, run it (red-1), create a unit test that reflects this red (red-2), pass it, refactor; go to red-1 as many times as you need, doing TDD cycles.</description>
    </item>
    
    <item>
      <title>Open discussion: On code reviews</title>
      <link>https://alvarogarcia7.github.io/blog/2015/02/07/open-discussion-on-code-reviews/</link>
      <pubDate>Sat, 07 Feb 2015 18:54:54 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/02/07/open-discussion-on-code-reviews/</guid>
      <description>At a client, I organized an open discussion on code reviews. We had a great conversation.
The main idea was to discuss about it and share the ideas each one had. I didn&amp;rsquo;t want it to turn into a masterclass (see the white belt)
Benefits These are the main benefits we saw in it:
 Increased trust Learning from others, other approaches Less defects, more quality Increased bus factor, decreased information silos Also:  Getting out of your comfort zone Communicating more often (code style, edge cases, complaining, etc)    Pair programming Then we discussed about the topic of code reviews and pair programming:</description>
    </item>
    
  </channel>
</rss>
