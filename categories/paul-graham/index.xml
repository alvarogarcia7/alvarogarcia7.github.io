<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>The long way through Software Craftsmanship</title>
    <link>https://alvarogarcia7.github.io/categories/paul-graham/index.xml</link>
    <description>Recent content on The long way through Software Craftsmanship</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="https://alvarogarcia7.github.io/categories/paul-graham/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Self-Study in June 2018</title>
      <link>https://alvarogarcia7.github.io/blog/2018/06/01/self-study-june-2018/</link>
      <pubDate>Fri, 01 Jun 2018 10:32:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2018/06/01/self-study-june-2018/</guid>
      <description>

&lt;h2 id=&#34;don-t-look-don-t-tell&#34;&gt;[Don&amp;rsquo;t look, don&amp;rsquo;t tell]()&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this bonilista by David Bonilla on what strategies companies use to deal with security and defects.&lt;/p&gt;

&lt;p&gt;Explains full disclosure, responsible disclosure and bug bounties.&lt;/p&gt;

&lt;p&gt;Tags: david-bonilla, bonilista, security, full-disclosure, responsible-disclosure, bug-bounty, reporting, hacker, cracker&lt;/p&gt;

&lt;p&gt;Id: a1a6925a-7958-11e8-a87f-0242ac110002
Read: Tue, 26 Jun 2018 15:50:21 +0000&lt;/p&gt;

&lt;h2 id=&#34;la-vida-de-las-ideas&#34;&gt;[La vida de las ideas]()&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this bonilista by David Bonilla about the value of the ideas and what differentiates a good idea from a good execution from a good outcome&lt;/p&gt;

&lt;p&gt;Tags: david-bonilla, idea, startup, execution, value&lt;/p&gt;

&lt;p&gt;Id: c72f3522-7958-11e8-935c-0242ac110002
Read: Tue, 26 Jun 2018 15:51:24 +0000&lt;/p&gt;

&lt;h2 id=&#34;why-re-frame-instead-of-om-next-http-t-dripemail2-com-c-eyjhy2nvdw50x2lkijoimzy1mtcxnyisimrlbgl2zxj5x2lkijoimte1ntgzote5mcisinvybci6imh0dhbzoi8vchvyzwx5znvuy3rpb25hbc50di9hcnrpy2xll3does1yzs1mcmftzs1pbnn0zwfklw9mlw9tlw5lehqvp19fcz1moxa2dmrwc2n0ymluagjxyne2eij9&#34;&gt;&lt;a href=&#34;http://t.dripemail2.com/c/eyJhY2NvdW50X2lkIjoiMzY1MTcxNyIsImRlbGl2ZXJ5X2lkIjoiMTE1NTgzOTE5MCIsInVybCI6Imh0dHBzOi8vcHVyZWx5ZnVuY3Rpb25hbC50di9hcnRpY2xlL3doeS1yZS1mcmFtZS1pbnN0ZWFkLW9mLW9tLW5leHQvP19fcz1mOXA2dmRwc2N0YmluaGJxYnE2eiJ9&#34; target=&#34;_blank&#34;&gt;Why re-frame instead of om next&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Eric Normand on why he chose to write a course on clojure front-end framework&lt;/p&gt;

&lt;p&gt;Tags: eric-normand, clojure, david-nolen, frontend, framework, reframe, om-next, comparison, course, mooc&lt;/p&gt;

&lt;p&gt;Id: ea43a380-7959-11e8-bd3b-0242ac110002
Read: Tue, 26 Jun 2018 15:59:32 +0000&lt;/p&gt;

&lt;h2 id=&#34;lexnet-el-software-que-nunca-debió-existir&#34;&gt;[LexNET: el software que nunca debió existir]()&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this bonilista by David Bonilla on the software called LexNET and the scandal around it&lt;/p&gt;

&lt;p&gt;Tags: david-bonilla, lexnet, bonilista, software, scandal, spain&lt;/p&gt;

&lt;p&gt;Id: 1aa20256-795a-11e8-9b39-0242ac110002
Read: Tue, 26 Jun 2018 16:00:53 +0000&lt;/p&gt;

&lt;h2 id=&#34;40&#34;&gt;[40]()&lt;/h2&gt;

&lt;p&gt;I have read this bonilista by David Bonilla explaining some of the things he has learned from 40 years of experience in life. Explains some of his fears and how he has solved them.&lt;/p&gt;

&lt;p&gt;Tags: david-bonilla, bonilista, birthday, reflection, fear, money, money-management&lt;/p&gt;

&lt;p&gt;Id: 296a433e-795a-11e8-981e-0242ac110002
Read: Tue, 26 Jun 2018 16:01:18 +0000&lt;/p&gt;

&lt;h2 id=&#34;la-lucha-por-la-red&#34;&gt;[La lucha por la Red]()&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this bonilista by David Bonilla on the net neutrality in Spain and in the European union.&lt;/p&gt;

&lt;p&gt;Tags: david-bonilla, bonilista, net-neutrality, internet&lt;/p&gt;

&lt;p&gt;Id: 395a8984-795a-11e8-9102-0242ac110002
Read: Tue, 26 Jun 2018 16:01:45 +0000&lt;/p&gt;

&lt;h2 id=&#34;a-machine-has-figured-out-rubik-s-cube-all-by-itself-https-www-technologyreview-com-s-611281-a-machine-has-figured-out-rubiks-cube-all-by-itself&#34;&gt;&lt;a href=&#34;https://www.technologyreview.com/s/611281/a-machine-has-figured-out-rubiks-cube-all-by-itself/&#34; target=&#34;_blank&#34;&gt;A machine has figured out Rubik&amp;rsquo;s Cube all by itself&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article explaining how an AI has solved the rubik cube by itself. The team, including McAleer, has used a technique called &amp;ldquo;autodidactic iteration: a way for the machine to create its own system of rewards.&lt;/p&gt;

&lt;p&gt;Tags: rubik, rubik-cube, ai, autodidactic-iteration, autodidactic, reward, mcaleer, artificial-intelligence, deep-learning, monte-carlo, monte-carlo-tree-search&lt;/p&gt;

&lt;p&gt;Id: 0cb8305c-7a1d-11e8-9823-0242ac110002
Read: Wed, 27 Jun 2018 15:16:22 +0000&lt;/p&gt;

&lt;h2 id=&#34;la-tienda&#34;&gt;[La tienda]()&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this bonilista by David Bonilla on how more and more investors are deciding to do it only on profitable startups rather than a more global strategy&lt;/p&gt;

&lt;p&gt;Tags: david-bonilla, bonilista, investor, startup&lt;/p&gt;

&lt;p&gt;Id: 6735c620-7a1d-11e8-a2e9-0242ac110002
Read: Wed, 27 Jun 2018 15:18:53 +0000&lt;/p&gt;

&lt;h2 id=&#34;i-m-not-a-woman-in-tech-https-communequation-wordpress-com-2017-07-05-im-not-a-woman-in-tech&#34;&gt;&lt;a href=&#34;https://communequation.wordpress.com/2017/07/05/im-not-a-woman-in-tech/&#34; target=&#34;_blank&#34;&gt;I’m not a woman in tech&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Maria Scrivener on how she does not consider herself a woman in tech. She prefers to lose the labels and just be considered her, herself. Advocates for being inclusive rather than exclusive&lt;/p&gt;

&lt;p&gt;Tags: feminism, women-in-tech, maria-scrivener, women, label, equality&lt;/p&gt;

&lt;p&gt;Id: 7e2fbffc-7a1d-11e8-bbd2-0242ac110002
Read: Wed, 27 Jun 2018 15:19:32 +0000&lt;/p&gt;

&lt;h2 id=&#34;password-security-alert-https-blog-8tracks-com-2017-06-27-password-security-alert&#34;&gt;&lt;a href=&#34;https://blog.8tracks.com/2017/06/27/password-security-alert/&#34; target=&#34;_blank&#34;&gt;PASSWORD SECURITY ALERT&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by David Porter in which they alert their users that their database has been leaked, therefore some passwords are at risk.&lt;/p&gt;

&lt;p&gt;The passwords were hashed and salted, not stored in plain text, but those who share a password across services could be at risk.&lt;/p&gt;

&lt;p&gt;The attack has been successful given that a developer didn&amp;rsquo;t have two-factor authentication (2FA) on their github account and the company was using GitHub LFS (git large file system) to store database backups&lt;/p&gt;

&lt;p&gt;Tags: david-porter, backup, storage, configuration, github, 2fa, plain-text, password, security, security-alert, lfs, git-lfs, github-lfs&lt;/p&gt;

&lt;p&gt;Id: 97212f3c-7a1d-11e8-bdcd-0242ac110002
Read: Wed, 27 Jun 2018 15:20:14 +0000&lt;/p&gt;

&lt;h2 id=&#34;matthew-green-https-blog-cryptographyengineering-com-2017-07-02-beyond-public-key-encryption&#34;&gt;&lt;a href=&#34;https://blog.cryptographyengineering.com/2017/07/02/beyond-public-key-encryption/&#34; target=&#34;_blank&#34;&gt;Matthew Green&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Matthew Green on the ideas presented by Shamir in 1984: Identity Based Cryptography (IBE), Attribute Based Cryptography (ABE)&lt;/p&gt;

&lt;p&gt;Tags: rsa, matthew-green, cryptography, identity-based-cryptography, attribute-based-cryptography, shamir, public-key, encryption, private-key&lt;/p&gt;

&lt;p&gt;Id: a942bf96-7a1d-11e8-b122-0242ac110002
Read: Wed, 27 Jun 2018 15:20:44 +0000&lt;/p&gt;

&lt;h2 id=&#34;starbucks-should-really-make-their-apis-public-https-blog-tendigi-com-starbucks-should-really-make-their-apis-public-6b64a1c2e923&#34;&gt;&lt;a href=&#34;https://blog.tendigi.com/starbucks-should-really-make-their-apis-public-6b64a1c2e923&#34; target=&#34;_blank&#34;&gt;Starbucks should really make their APIs public&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Nick Lee in which he explains how he has reverse-engineered the Starbucks API so you can connect to it from another device (not only phones, with the app installed)&lt;/p&gt;

&lt;p&gt;Tags: certificate-pinning, tendigi, nick-lee, security, man-in-the-middle, proxy, api, attribute-fingerprinting, open-api, starbucks&lt;/p&gt;

&lt;p&gt;Id: b3ffb61e-7a1d-11e8-a08c-0242ac110002
Read: Wed, 27 Jun 2018 15:21:02 +0000&lt;/p&gt;

&lt;h2 id=&#34;feature-toggles-are-one-of-the-worst-kinds-of-technical-debt-https-dzone-com-articles-feature-toggles-are-one-worst&#34;&gt;&lt;a href=&#34;https://dzone.com/articles/feature-toggles-are-one-worst&#34; target=&#34;_blank&#34;&gt;Feature Toggles are one of the Worst kinds of Technical Debt&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article on the ups and downs of using feature toggles.&lt;/p&gt;

&lt;p&gt;Especially with long lived branches and feature by abstraction&lt;/p&gt;

&lt;p&gt;Tags: feature-by-abstraction, feature-toggle, canary-test, jim-bird, technical-debt&lt;/p&gt;

&lt;p&gt;Id: dbb1ff46-7a1d-11e8-b40e-0242ac110002
Read: Wed, 27 Jun 2018 15:22:09 +0000&lt;/p&gt;

&lt;h2 id=&#34;testcontainers-making-java-integration-tests-easy-https-zeroturnaround-com-rebellabs-java-integration-testing-with-testcontainers&#34;&gt;&lt;a href=&#34;https://zeroturnaround.com/rebellabs/java-integration-testing-with-testcontainers/&#34; target=&#34;_blank&#34;&gt;TestContainers: making Java integration tests easy&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article on how to start a new docker container from Java code (using a junit @rule).&lt;/p&gt;

&lt;p&gt;Using the library TestContainers&lt;/p&gt;

&lt;p&gt;Tags: testcontainers, rebel-labs, anton-arhipov, test, docker, image, integration-test, testing&lt;/p&gt;

&lt;p&gt;Id: f13f63bc-7a1d-11e8-a6a2-0242ac110002
Read: Wed, 27 Jun 2018 15:22:45 +0000&lt;/p&gt;

&lt;h2 id=&#34;code-health-to-comment-or-not-to-comment-http-testing-googleblog-com-2017-07-code-health-to-comment-or-not-to-comment-html&#34;&gt;&lt;a href=&#34;http://testing.googleblog.com/2017/07/code-health-to-comment-or-not-to-comment.html&#34; target=&#34;_blank&#34;&gt;Code Health: To Comment or Not to Comment?&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article about comments in code: where to use them and when not to&lt;/p&gt;

&lt;p&gt;Tags: dori-reuveni, kevin-bourrillion, comment, clean-code&lt;/p&gt;

&lt;p&gt;Id: 15740b0c-7a1e-11e8-9169-0242ac110002
Read: Wed, 27 Jun 2018 15:23:46 +0000&lt;/p&gt;

&lt;h2 id=&#34;saints-and-traders-the-john-henry-fable-reconsidered-https-www-ribbonfarm-com-2014-06-04-saints-and-traders-the-john-henry-fable-reconsidered&#34;&gt;&lt;a href=&#34;https://www.ribbonfarm.com/2014/06/04/saints-and-traders-the-john-henry-fable-reconsidered/&#34; target=&#34;_blank&#34;&gt;Saints and Traders: The John Henry Fable Reconsidered&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article on the guardian syndrome and the Saint syndrome.&lt;/p&gt;

&lt;p&gt;Explains the story of John Henry, who died right after winning a drilling contest with a machine.&lt;/p&gt;

&lt;p&gt;Explains the finite game and the infinite game.&lt;/p&gt;

&lt;p&gt;Tags: finite-game, infinite-game, saint-syndrome, guardian-syndrome, comparison, philosophy, venkatesh-rao, john-henry&lt;/p&gt;

&lt;p&gt;Id: 5228464e-7a1e-11e8-9125-0242ac110002
Read: Wed, 27 Jun 2018 15:25:28 +0000&lt;/p&gt;

&lt;h2 id=&#34;stacked-pull-requests-keeping-github-diffs-small-https-graysonkoonce-com-stacked-pull-requests-keeping-github-diffs-small&#34;&gt;&lt;a href=&#34;https://graysonkoonce.com/stacked-pull-requests-keeping-github-diffs-small/&#34; target=&#34;_blank&#34;&gt;Stacked Pull Requests: Keeping GitHub Diffs Small&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article on using a technique (stacked pull requests) to keep pull requests small and get more feedback, more comments from teammates, therefore reducing the code review fatigue. By Grayson Koonce&lt;/p&gt;

&lt;p&gt;Tags: grayson-koonce, fatigue, code-fatigue, pull-request, pull-request-fatigue, stacked-pull-request, technique, comment, feedback, teammate, team&lt;/p&gt;

&lt;p&gt;Id: 6e3df860-7a1e-11e8-ba6a-0242ac110002
Read: Wed, 27 Jun 2018 15:26:15 +0000&lt;/p&gt;

&lt;h2 id=&#34;i-hate-almost-all-software-http-tinyclouds-org-rant-html&#34;&gt;&lt;a href=&#34;http://tinyclouds.org/rant.html&#34; target=&#34;_blank&#34;&gt;I hate almost all software&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Ryan Dahl on the focus of the software and the inherent complexity of today&amp;rsquo;s software&lt;/p&gt;

&lt;p&gt;Tags: ryan-dahl, complexity, software, rant&lt;/p&gt;

&lt;p&gt;Id: 7ab3fcd4-7a1e-11e8-9590-0242ac110002
Read: Wed, 27 Jun 2018 15:26:36 +0000&lt;/p&gt;

&lt;h2 id=&#34;the-real-reason-for-developers-salaries-stagnation-https-simpleprogrammer-com-developers-salaries-stagnation&#34;&gt;&lt;a href=&#34;https://simpleprogrammer.com/developers-salaries-stagnation/&#34; target=&#34;_blank&#34;&gt;The Real Reason for Developers’ Salaries Stagnation&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Im this article, the author speaks of developer salaries related to their skills, proficiency, area of interest and role. Also about the real purchasing power stagnation.&lt;/p&gt;

&lt;p&gt;Tags: salary, skill, role, position, money, career, career-management, fiodar-sazanavets&lt;/p&gt;

&lt;p&gt;Id: a4e26bee-7a1e-11e8-ac68-0242ac110002
Read: Wed, 27 Jun 2018 15:27:46 +0000&lt;/p&gt;

&lt;h2 id=&#34;what-is-a-10x-programmer-https-dev-to-nathanepstein-what-is-a-10x-programmer&#34;&gt;&lt;a href=&#34;https://dev.to/nathanepstein/what-is-a-10x-programmer&#34; target=&#34;_blank&#34;&gt;What is a &amp;ldquo;10x&amp;rdquo; Programmer?&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article about makes a good programmer, under the label of the mythical 10x programmer.&lt;/p&gt;

&lt;p&gt;There are two different groups of things in the list: things you are/have (skills) and things you do (actitudes). On the former, writing code (good, business code that is correctly organized, architected, designed), to know a lot. On the latter, ownership for the project (implication, care), teaching and learning from others.&lt;/p&gt;

&lt;p&gt;Tags: 10x, author, productivity, skill, attitude, aptitude, attitude-vs-aptitude, nathan-epstein&lt;/p&gt;

&lt;p&gt;Id: e5d53f46-7a1e-11e8-9097-0242ac110002
Read: Wed, 27 Jun 2018 15:29:35 +0000&lt;/p&gt;

&lt;h2 id=&#34;why-podcasts-have-become-popular-http-www-donnfelker-com-why-podcasts-have-become-popular&#34;&gt;&lt;a href=&#34;http://www.donnfelker.com/why-podcasts-have-become-popular/&#34; target=&#34;_blank&#34;&gt;Why Podcasts Have Become Popular&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Donn Felker on the effect that the Internet is having on consumers: they now decide when to consume the resources, instead of passively waiting for the resources to appear.&lt;/p&gt;

&lt;p&gt;This is the suggested explanation for on-demand video vs television, podcasts vs radio&lt;/p&gt;

&lt;p&gt;Tags: podcast, on-demand, consumer, internet, donn-felker&lt;/p&gt;

&lt;p&gt;Id: f7f8a73a-7a1e-11e8-836d-0242ac110002
Read: Wed, 27 Jun 2018 15:30:06 +0000&lt;/p&gt;

&lt;h2 id=&#34;don-t-know-what-you-want-improve-these-7-universal-skills-self-discipline-get-better-at-ignoring-the-negative-voice-in-your-head-get-out-of-your-bed-go-to-the-gym-don-t-listen-to-i-don-t-want-to&#34;&gt;&lt;a href=&#34;Self-Discipline: Get better at ignoring the negative voice in your head. Get out of your bed. Go to the gym. Don’t listen to “I don’t want to.”&#34; target=&#34;_blank&#34;&gt;Don’t Know What You Want? Improve These 7 Universal Skills&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Personal Effectiveness: Learn how to maximize the results you can get during the 16–18 hours you’re awake. Get more done — effectively.
Communication: We think we’re all master communicators. But the truth is that we suck. Communication is both art and science. And our ability to work with others depends on it.
Negotiation: You negotiate all the time. With your spouse, kids, parents, teachers, friends, co-workers, managers, etc. Learn to get the best deal for all parties.
Persuasion: Learn how to get what you want in an ethical way.
Physical Strength &amp;amp; Stamina: Getting stronger is a skill. Pull your own weight. It’s something every human should be able to do.
Flexibility: Sitting all day long behind your computer or in your car turns you into a stiff being. Learn how to stretch your hips, lower back, hamstrings, and calves — the most common weak points of desk workers.&lt;/p&gt;

&lt;p&gt;Tags:&lt;/p&gt;

&lt;p&gt;Id: 0862fbca-7a1f-11e8-83fb-0242ac110002
Read: Wed, 27 Jun 2018 15:30:33 +0000&lt;/p&gt;

&lt;h2 id=&#34;your-concentration-training-program-11-exercises-that-will-strengthen-your-attention-https-www-artofmanliness-com-2014-01-30-your-concentration-training-program-11-exercises-that-will-strengthen-your-attention&#34;&gt;&lt;a href=&#34;https://www.artofmanliness.com/2014/01/30/your-concentration-training-program-11-exercises-that-will-strengthen-your-attention/&#34; target=&#34;_blank&#34;&gt;Your Concentration Training Program: 11 Exercises That Will Strengthen Your Attention&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Brett &amp;amp; Kate McKay on exercises for training the attention&lt;/p&gt;

&lt;p&gt;Tags: brett-mckay, kate-mckay, training, concentration, exercise, focus, attention&lt;/p&gt;

&lt;p&gt;Id: 14f5e064-7a1f-11e8-be86-0242ac110002
Read: Wed, 27 Jun 2018 15:30:54 +0000&lt;/p&gt;

&lt;h2 id=&#34;the-great-attention-heist-https-lareviewofbooks-org-article-the-great-attention-heist&#34;&gt;&lt;a href=&#34;https://lareviewofbooks.org/article/the-great-attention-heist/&#34; target=&#34;_blank&#34;&gt;The Great Attention Heist&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by John Bell, John Zada on the current war for attention, what they call the &amp;lsquo;attention heist&amp;rsquo;: publishers fight for your attention, selling it to third parties. The more they can lure you to spend your (finite) attention with them, the higher the profits.&lt;/p&gt;

&lt;p&gt;They talk about two kinds of attention: short span and long span. Reading news is the first while reading a book or a long article is the second one.&lt;/p&gt;

&lt;p&gt;They mention unplugging (i.e., a &amp;ldquo;digital sabbath&amp;rdquo;) to help improving the level of concentration&lt;/p&gt;

&lt;p&gt;(this was a book review, of &amp;lsquo;The attention merchants&amp;rsquo;, by Tim Wu)&lt;/p&gt;

&lt;p&gt;Tags: john-bell, john-zada, attention-heist, attention, app, smartphone, book-review, tim-wu, book, sabbath, digital-sabbath, long-article&lt;/p&gt;

&lt;p&gt;Id: 3f41e6ec-7a1f-11e8-85fc-0242ac110002
Read: Wed, 27 Jun 2018 15:32:05 +0000&lt;/p&gt;

&lt;h2 id=&#34;how-to-read-more-books-http-verraes-net-2012-12-2012-12-23-how-to-read-more-books&#34;&gt;&lt;a href=&#34;http://verraes.net/2012/12/2012-12-23-how-to-read-more-books/&#34; target=&#34;_blank&#34;&gt;How to read more books&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Tags: mathias-verraes, reading, tips-and-tricks, self-study, training&lt;/p&gt;

&lt;p&gt;Id: c451a048-7a1f-11e8-82f7-0242ac110002
Read: Wed, 27 Jun 2018 15:35:49 +0000&lt;/p&gt;

&lt;h2 id=&#34;serving-100-gbps-from-an-open-connect-appliance-https-medium-com-netflix-techblog-serving-100-gbps-from-an-open-connect-appliance-cdb51dda3b99&#34;&gt;&lt;a href=&#34;https://medium.com/netflix-techblog/serving-100-gbps-from-an-open-connect-appliance-cdb51dda3b99&#34; target=&#34;_blank&#34;&gt;Serving 100 Gbps from an Open Connect Appliance&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article on how Netflix has optimized their servers to be able to send TLS content at 100 Gbps, using openbsd.&lt;/p&gt;

&lt;p&gt;Tags: netflix, openbsd, performance, optimization, drew-gallatin&lt;/p&gt;

&lt;p&gt;Id: dc8f92dc-7a1f-11e8-818a-0242ac110002
Read: Wed, 27 Jun 2018 15:36:29 +0000&lt;/p&gt;

&lt;h2 id=&#34;rebellabs-developer-productivity-report-2017-why-do-you-use-the-java-tools-you-use-https-zeroturnaround-com-rebellabs-developer-productivity-report-2017-why-do-you-use-java-tools-you-use&#34;&gt;&lt;a href=&#34;https://zeroturnaround.com/rebellabs/developer-productivity-report-2017-why-do-you-use-java-tools-you-use/&#34; target=&#34;_blank&#34;&gt;RebelLabs Developer Productivity Report 2017: Why do you use the Java tools you use?&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Tags: java-ee, spring, kotlin, java, jvm, scala, clojure, productivity, rebel-labs, oleg-shelajev, zero-turnaround, 2017, report, comparison&lt;/p&gt;

&lt;p&gt;Id: 1c603222-7a20-11e8-8f75-0242ac110002
Read: Wed, 27 Jun 2018 15:38:16 +0000&lt;/p&gt;

&lt;h2 id=&#34;why-paper-is-the-real-killer-app-http-www-bbc-com-capital-story-20170120-why-paper-is-the-real-killer-app&#34;&gt;&lt;a href=&#34;http://www.bbc.com/capital/story/20170120-why-paper-is-the-real-killer-app&#34; target=&#34;_blank&#34;&gt;Why paper is the real &amp;lsquo;killer app&amp;rsquo;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Alison Birrane on how working on a low-tech device is different than on a high-tech device (e.g., taking notes on a paper sheet vs on a laptop). On how it stimulates different parts of the brain. The multiple uses of the paper as compared to the narrowness of the apps.&lt;/p&gt;

&lt;p&gt;Tags: alison-birrane, killer-app, comparison, media, social-media, gadget, low-tech, technology, smartphone&lt;/p&gt;

&lt;p&gt;Id: 2ac58bdc-7a20-11e8-a82d-0242ac110002
Read: Wed, 27 Jun 2018 15:38:40 +0000&lt;/p&gt;

&lt;h2 id=&#34;self-study-guide-to-machine-learning-https-machinelearningmastery-com-self-study-guide-to-machine-learning&#34;&gt;&lt;a href=&#34;https://machinelearningmastery.com/self-study-guide-to-machine-learning/&#34; target=&#34;_blank&#34;&gt;Self-Study Guide to Machine Learning&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Tags: self-study, machine-learning, jason-brownlee&lt;/p&gt;

&lt;p&gt;Id: 388125f6-7a20-11e8-aae6-0242ac110002
Read: Wed, 27 Jun 2018 15:39:04 +0000&lt;/p&gt;

&lt;h2 id=&#34;breaking-up-the-behemoth&#34;&gt;[Breaking Up the Behemoth]()&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Sandi Metz explaining how applications evolve, and what we might do if we&amp;rsquo;re unhappy with the results using:  Design Stamina Hypothesis (Fowler), Procedural vs Object-Oriented Code and X.&lt;/p&gt;

&lt;p&gt;Tags: ood, object-orientation, sandi-metz, martin-fowler, design-stamina, quality, behemoth, monolith&lt;/p&gt;

&lt;p&gt;Id: 457003ea-7a20-11e8-a3ff-0242ac110002
Read: Wed, 27 Jun 2018 15:39:25 +0000&lt;/p&gt;

&lt;h2 id=&#34;10-hard-things-to-start-doing-for-yourself-http-www-marcandangel-com-2017-09-24-10-hard-things-to-start-doing-for-yourself&#34;&gt;&lt;a href=&#34;http://www.marcandangel.com/2017/09/24/10-hard-things-to-start-doing-for-yourself/&#34; target=&#34;_blank&#34;&gt;10 Hard Things to Start Doing for Yourself&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this self-help article on how to help yourself by doing hard things:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Start letting go of unnecessary ideals
Start putting your heart and soul into the things you do
Start stretching yourself just beyond the edge of comfort
Start taking more deep breaths, so you can mindfully collect more lessons for the long run
Start side-stepping senseless drama
Start staying true to your values and convictions
Start looking for silver linings
Start focusing inward more often
Start embracing your humanness and giving yourself more credit
Start taking the next small, insignificant step (one at a time, every day).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;By Marc Chernoff&lt;/p&gt;

&lt;p&gt;Tags: marc-chernoff, self-help, meditation, breathing, comfort-zone, help&lt;/p&gt;

&lt;p&gt;Id: 53a89846-7a20-11e8-abd1-0242ac110002
Read: Wed, 27 Jun 2018 15:39:49 +0000&lt;/p&gt;

&lt;h2 id=&#34;happiness-is-overrated-finding-deep-meaning-in-life-comes-down-to-4-pillars-http-www-businessinsider-com-emily-esfehani-smith-finding-meaning-life-4-pillars-2017-9&#34;&gt;&lt;a href=&#34;http://www.businessinsider.com/emily-esfehani-smith-finding-meaning-life-4-pillars-2017-9&#34; target=&#34;_blank&#34;&gt;Happiness is overrated — finding deep meaning in life comes down to 4 &amp;lsquo;pillars&amp;rsquo;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article about what life is about: not happiness but four pillars: belonging and purpose, transcendence and storytelling
storytelling helps people create meaning because it allows people to create, edit, and transform the story of their lives&lt;/p&gt;

&lt;p&gt;Tags: happiness, life, fulfillment, pillar, belonging, purpose, flow, transcendence, storytelling,, chris-weller&lt;/p&gt;

&lt;p&gt;Id: 9737002a-7a20-11e8-a864-0242ac110002
Read: Wed, 27 Jun 2018 15:41:42 +0000&lt;/p&gt;

&lt;h2 id=&#34;it-s-time-to-kill-the-web-https-blog-plan99-net-its-time-to-kill-the-web-974a9fe80c89&#34;&gt;&lt;a href=&#34;https://blog.plan99.net/its-time-to-kill-the-web-974a9fe80c89&#34; target=&#34;_blank&#34;&gt;It’s time to kill the web&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article that explains the background of the web and how it wasn&amp;rsquo;t designed to support applications but documents. Explains the downsides and security profile of a webapp as compared to a desktop/native application. By Mike Hearn&lt;/p&gt;

&lt;p&gt;Tags: comparison, web-app, application, app, desktop-app, native-app, mike-hearn, security, html, html5, javascript, web&lt;/p&gt;

&lt;p&gt;Id: a3e1c936-7a20-11e8-8fbe-0242ac110002
Read: Wed, 27 Jun 2018 15:42:04 +0000&lt;/p&gt;

&lt;h2 id=&#34;how-to-stay-focused-when-you-re-working-from-home-https-hbr-org-2017-09-how-to-stay-focused-when-youre-working-from-home-formcheck-bc3e82f422e9567c25d37e403ee877e6&#34;&gt;&lt;a href=&#34;https://hbr.org/2017/09/how-to-stay-focused-when-youre-working-from-home&amp;amp;formCheck=bc3e82f422e9567c25d37e403ee877e6&#34; target=&#34;_blank&#34;&gt;How to Stay Focused When You’re Working from Home&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article on structuring your workday while being at home (remote work).&lt;/p&gt;

&lt;p&gt;Some tips:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Structure for success&lt;/li&gt;
&lt;li&gt;Schedule your day: when it&amp;rsquo;s work-related time and when not&lt;/li&gt;
&lt;li&gt;Set boundaries&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;By Elizabeth Grace Saunders&lt;/p&gt;

&lt;p&gt;Tags: remote, remote-work, hbr, harvard-business-review, elizabeth-saunders&lt;/p&gt;

&lt;p&gt;Id: b2ddd326-7a20-11e8-9af5-0242ac110002
Read: Wed, 27 Jun 2018 15:42:29 +0000&lt;/p&gt;

&lt;h2 id=&#34;cognitive-biases-in-programming-https-hackernoon-com-cognitive-biases-in-programming-5e937707c27b&#34;&gt;&lt;a href=&#34;https://hackernoon.com/cognitive-biases-in-programming-5e937707c27b&#34; target=&#34;_blank&#34;&gt;Cognitive Biases in Programming&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article that explains some cognitive biases (prejudices of our mind) while programming:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Hyperbolic Discounting: Going for an immediate payoff instead of a delayed larger one&lt;/li&gt;
&lt;li&gt;IKEA Effect:Overvaluing your own solutions to a problem, and thus in contrast undervalue other solutions. Also called the &amp;ldquo;Not-Invented-Here (NIH) Syndrome&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Premature Optimization: Optimizing before you know that you need to.&lt;/li&gt;
&lt;li&gt;Planning Fallacy: Optimistically underestimating the time required to complete a task&lt;/li&gt;
&lt;li&gt;Recency Bias: Placing higher value on recent events than ones that occurred further in the past&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;We can never completely eliminate our biases, by being aware of how it is affecting us, we can somewhat mitigate the problems it causes.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;By Yash Ranadive&lt;/p&gt;

&lt;p&gt;Tags: yash-ranadive, bias, programming, mind&lt;/p&gt;

&lt;p&gt;Id: c8742b18-7a20-11e8-b36f-0242ac110002
Read: Wed, 27 Jun 2018 15:43:05 +0000&lt;/p&gt;

&lt;h2 id=&#34;keybase-launches-encrypted-git-https-keybase-io-blog-encrypted-git-for-everyone&#34;&gt;&lt;a href=&#34;https://keybase.io/blog/encrypted-git-for-everyone&#34; target=&#34;_blank&#34;&gt;Keybase launches encrypted git&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read how to encrypt git repositories using keybase&lt;/p&gt;

&lt;p&gt;Tags: keybase, git, encryption, security, private-key, public-key, storage, archive&lt;/p&gt;

&lt;p&gt;Id: dcd43756-7a20-11e8-b0ee-0242ac110002
Read: Wed, 27 Jun 2018 15:43:39 +0000&lt;/p&gt;

&lt;h2 id=&#34;general-and-surprising-http-paulgraham-com-sun-html&#34;&gt;&lt;a href=&#34;http://paulgraham.com/sun.html&#34; target=&#34;_blank&#34;&gt;General and Surprising&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article about how information can be classified as general vs specific and surprising vs unsurprising. How it&amp;rsquo;s best to find a small surprising general thing.&lt;/p&gt;

&lt;p&gt;Tags: paul-graham, surprising, general, information, classification&lt;/p&gt;

&lt;p&gt;Id: f611b626-7a20-11e8-8172-0242ac110002
Read: Wed, 27 Jun 2018 15:44:22 +0000&lt;/p&gt;

&lt;h2 id=&#34;i-built-a-server-less-telegram-bot-over-a-weekend-and-here-s-what-i-learned-https-medium-com-moses-soh-how-to-build-a-server-less-telegram-bot-227f842f4706&#34;&gt;&lt;a href=&#34;https://medium.com/@moses.soh/how-to-build-a-server-less-telegram-bot-227f842f4706&#34; target=&#34;_blank&#34;&gt;I built a server-less Telegram bot over a weekend and here’s what I learned&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article on creating a telegram chatbot for a specific purpose. Connects two people (first one subscribes, then the other asks for help and the first is contacted) so the first helps the second. By Moses Soh&lt;/p&gt;

&lt;p&gt;Tags: telegram, chatbot, app, moses-soh, side-project, pet-project, project&lt;/p&gt;

&lt;p&gt;Id: 25b1e5d6-7a21-11e8-a838-0242ac110002
Read: Wed, 27 Jun 2018 15:45:41 +0000&lt;/p&gt;

&lt;h2 id=&#34;reviewing-ethereum-smart-contracts-https-blog-gdssecurity-com-labs-2017-9-27-reviewing-ethereum-smart-contracts-html&#34;&gt;&lt;a href=&#34;https://blog.gdssecurity.com/labs/2017/9/27/reviewing-ethereum-smart-contracts.html&#34; target=&#34;_blank&#34;&gt;Reviewing Ethereum Smart Contracts&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article about how to review ethereum contracts and a concrete example of an attack to a smart contract&lt;/p&gt;

&lt;p&gt;Tags: ethereum, smart-contract, crypto-currency, ico, trustless, security, code-review&lt;/p&gt;

&lt;p&gt;Id: 5d73322c-7a21-11e8-8e1a-0242ac110002
Read: Wed, 27 Jun 2018 15:47:15 +0000&lt;/p&gt;

&lt;h2 id=&#34;keep-calm-and-carry-on-scaling-your-org-with-microservices-https-bridgetkromhout-com-speaking-2017-srecon&#34;&gt;&lt;a href=&#34;https://bridgetkromhout.com/speaking/2017/srecon/&#34; target=&#34;_blank&#34;&gt;Keep Calm and Carry On - Scaling Your Org with Microservices&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read the slides of this presentation by Bridget Kromhout and Charity Majors about organizations and microservices: the main problem is the communication&lt;/p&gt;

&lt;p&gt;Tags: charity-majors, bridget-kromhout, microservice, organization, communication, devops&lt;/p&gt;

&lt;p&gt;Id: ea81381c-7a21-11e8-b418-0242ac110002
Read: Wed, 27 Jun 2018 15:51:12 +0000&lt;/p&gt;

&lt;h2 id=&#34;guía-al-movimiento-noestimates-https-jeronimopalacios-com-2016-09-guia-al-movimiento-noestimates&#34;&gt;&lt;a href=&#34;https://jeronimopalacios.com/2016/09/guia-al-movimiento-noestimates/&#34; target=&#34;_blank&#34;&gt;Guía al movimiento #NoEstimates&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Jeronimo Palacios, giving an overview of the no estimates movement.&lt;/p&gt;

&lt;p&gt;Tags: no-estimates, jeronimo-palacios, agile, scrum, estimate, forecast, management&lt;/p&gt;

&lt;p&gt;Id: f6c70a98-7a21-11e8-a896-0242ac110002
Read: Wed, 27 Jun 2018 15:51:32 +0000&lt;/p&gt;

&lt;h2 id=&#34;core-competence-http-www-economist-com-node-12231124&#34;&gt;&lt;a href=&#34;http://www.economist.com/node/12231124&#34; target=&#34;_blank&#34;&gt;Core competence&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article describing what a core competence is and how can we find out if a competence is considered core or not.&lt;/p&gt;

&lt;p&gt;Tags: economy, definition, core-competence, core-business, management, prahalad, gary-hamel&lt;/p&gt;

&lt;p&gt;Id: 01a58660-7a22-11e8-b4f8-0242ac110002
Read: Wed, 27 Jun 2018 15:51:50 +0000&lt;/p&gt;

&lt;h2 id=&#34;how-i-stopped-procrastinating-learned-to-code-and-launched-my-first-product-https-dev-to-lynnetye-how-i-stopped-procrastinating-learned-to-code-and-launched-my-first-product-2i1&#34;&gt;&lt;a href=&#34;https://dev.to/lynnetye/how-i-stopped-procrastinating-learned-to-code-and-launched-my-first-product-2i1&#34; target=&#34;_blank&#34;&gt;How I stopped procrastinating, learned to code, and launched my first product&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article explaining some tips and tricks to launch a side project. By Lynne Tye&lt;/p&gt;

&lt;p&gt;Tags: lynne-tye, tips-and-tricks, product, side-project, launch, business, lean, startup, product-management&lt;/p&gt;

&lt;p&gt;Id: 0e85e3f2-7a22-11e8-b818-0242ac110002
Read: Wed, 27 Jun 2018 15:52:12 +0000&lt;/p&gt;

&lt;h2 id=&#34;when-are-citi-bikes-faster-than-taxis-in-new-york-city-http-toddwschneider-com-posts-taxi-vs-citi-bike-nyc&#34;&gt;&lt;a href=&#34;http://toddwschneider.com/posts/taxi-vs-citi-bike-nyc/&#34; target=&#34;_blank&#34;&gt;When are Citi Bikes Faster than Taxis in New York City?&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Todd Schneider analysing how city bikes compare to taxis in New York city.&lt;/p&gt;

&lt;p&gt;Good analysis, using a Monte Carlo simulation, written in R. Good data visualization.&lt;/p&gt;

&lt;p&gt;Tags: todd-schneider, data-visualization, map, city-bike, taxi, cab, new-york, new-york-city, comparison, data, data-analytics, monte-carlo, simulation, r&lt;/p&gt;

&lt;p&gt;Id: 18bc20c0-7a22-11e8-9209-0242ac110002
Read: Wed, 27 Jun 2018 15:52:29 +0000&lt;/p&gt;

&lt;h2 id=&#34;java-9-and-intellij-idea-https-blog-jetbrains-com-idea-2017-09-java-9-and-intellij-idea&#34;&gt;&lt;a href=&#34;https://blog.jetbrains.com/idea/2017/09/java-9-and-intellij-idea/&#34; target=&#34;_blank&#34;&gt;Java 9 and IntelliJ IDEA&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Trisha Gee about upcoming features to IntelliJ Idea 2017.3, centered around java 9 features&lt;/p&gt;

&lt;p&gt;Tags: trisha-gee, java-9, jdk-9, java, jdk, intellij-idea, ide, ide-support, jetbrains&lt;/p&gt;

&lt;p&gt;Id: 23b8350e-7a22-11e8-a9f3-0242ac110002
Read: Wed, 27 Jun 2018 15:52:48 +0000&lt;/p&gt;

&lt;h2 id=&#34;learn-from-your-attackers-ssh-honeypot-https-www-robertputt-co-uk-learn-from-your-attackers-ssh-honeypot-html&#34;&gt;&lt;a href=&#34;https://www.robertputt.co.uk/learn-from-your-attackers-ssh-honeypot.html&#34; target=&#34;_blank&#34;&gt;Learn from your attackers - SSH HoneyPot&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article on how to setup a honey pot machine using honssh. By Robert Putt&lt;/p&gt;

&lt;p&gt;Tags: robert-putt, honey-pot, security, honeypot, honssh, attacker&lt;/p&gt;

&lt;p&gt;Id: 2e36336e-7a22-11e8-9424-0242ac110002
Read: Wed, 27 Jun 2018 15:53:05 +0000&lt;/p&gt;

&lt;h2 id=&#34;to-type-or-not-to-type-quantifying-detectable-bugs-in-javascript-https-blog-acolyer-org-2017-09-19-to-type-or-not-to-type-quantifying-detectable-bugs-in-javascript&#34;&gt;&lt;a href=&#34;https://blog.acolyer.org/2017/09/19/to-type-or-not-to-type-quantifying-detectable-bugs-in-javascript/&#34; target=&#34;_blank&#34;&gt;To type or not to type: quantifying detectable bugs in JavaScript&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this paper commentary by Adrian Colyer (on a paper by Zheng Gao, Christian Bird, Earl T. Barr) on a study that tries to reproduce fixes for defects based on the dynamic to static typing system.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;both Flow and TypeScript are pretty good, and conservatively either of them can prevent about 15% of the bugs that end up in committed code.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It&amp;rsquo;s interesting to see these effects quantified:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Running the binomial test on the results shows that, at the confidence level of 95%, the true percentage of detectable bugs for Flow and TypeScript falls into [11.5%, 18.5%] with mean 15%.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Also, some recommendations for the future: for typescript and flow to be compatible for more gains.&lt;/p&gt;

&lt;p&gt;Original paper: &lt;a href=&#34;http://ttendency.cs.ucl.ac.uk/projects/type_study/documents/type_study.pdf&#34; target=&#34;_blank&#34;&gt;http://ttendency.cs.ucl.ac.uk/projects/type_study/documents/type_study.pdf&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tags: zheng-gao, christian-bird, earl-barr, typescript, javascript, flow, bug, defect, type-system, dynamic-typing, static-typing&lt;/p&gt;

&lt;p&gt;Id: 398cc606-7a22-11e8-b33c-0242ac110002
Read: Wed, 27 Jun 2018 15:53:24 +0000&lt;/p&gt;

&lt;h2 id=&#34;how-artificial-intelligence-can-be-used-for-password-guessing-https-medium-com-heyfebin-how-artificial-intelligence-can-be-used-for-password-guessing-cf4fd4184a46&#34;&gt;&lt;a href=&#34;https://medium.com/@heyfebin/how-artificial-intelligence-can-be-used-for-password-guessing-cf4fd4184a46&#34; target=&#34;_blank&#34;&gt;How Artificial Intelligence Can Be Used For Password Guessing&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Febin John James on how neural networks can learn from the leaked passwords and try to guess passwords for existing users&lt;/p&gt;

&lt;p&gt;Tags: febin-james, ai, artificial-intelligence, generative-adversarial-neural-network, gann, gan, nn, neural-network, guessing, password&lt;/p&gt;

&lt;p&gt;Id: 44fe19ae-7a22-11e8-8e06-0242ac110002
Read: Wed, 27 Jun 2018 15:53:43 +0000&lt;/p&gt;

&lt;h2 id=&#34;chrome-to-force-dev-domains-to-https-via-preloaded-hsts-https-ma-ttias-be-chrome-force-dev-domains-https-via-preloaded-hsts&#34;&gt;&lt;a href=&#34;https://ma.ttias.be/chrome-force-dev-domains-https-via-preloaded-hsts/&#34; target=&#34;_blank&#34;&gt;Chrome to force .dev domains to HTTPS via preloaded HSTS&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Mattias Geniar explaining the having the new Chrome redirecting .dev domains to https means that people using said .dev for local development will have to either provide a https server on their machines or change to another domain&lt;/p&gt;

&lt;p&gt;Tags: mattias-geniar, chrome, http, https, server, development, test, machine&lt;/p&gt;

&lt;p&gt;Id: 509c472c-7a22-11e8-81d7-0242ac110002
Read: Wed, 27 Jun 2018 15:54:03 +0000&lt;/p&gt;

&lt;h2 id=&#34;six-ways-to-functional-fizzbuzz-with-vavr-https-www-sitepoint-com-functional-fizzbuzz-with-vavr&#34;&gt;&lt;a href=&#34;https://www.sitepoint.com/functional-fizzbuzz-with-vavr/&#34; target=&#34;_blank&#34;&gt;Six Ways to Functional FizzBuzz with Vavr&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Gregor Trefs about solving the fizzbuzz kata using vavr, importing some concepts from functional programming&lt;/p&gt;

&lt;p&gt;Tags: functional-programming, gregor-trefs, vavr, case-statement, pattern-matching, functional, kata, fizzbuzz&lt;/p&gt;

&lt;p&gt;Id: 6866497a-7a22-11e8-af91-0242ac110002
Read: Wed, 27 Jun 2018 15:54:43 +0000&lt;/p&gt;

&lt;h2 id=&#34;more-women-take-on-role-of-cfo-at-home-https-paidpost-nytimes-com-northern-trust-more-women-take-on-role-of-cfo-at-home-html&#34;&gt;&lt;a href=&#34;https://paidpost.nytimes.com/northern-trust/more-women-take-on-role-of-cfo-at-home.html&#34; target=&#34;_blank&#34;&gt;More Women Take on Role of CFO — at Home&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article on how women act as CFO of their houses (managing 30% of the world&amp;rsquo;s wealth), how they teach money and meaning to their children.&lt;/p&gt;

&lt;p&gt;Tags: money-management, cfo, women, gender, home, house&lt;/p&gt;

&lt;p&gt;Id: 74f60720-7a22-11e8-a9a3-0242ac110002
Read: Wed, 27 Jun 2018 15:55:04 +0000&lt;/p&gt;

&lt;h2 id=&#34;the-internet-of-things-is-sending-us-back-to-the-middle-ages-https-thenextweb-com-lifestyle-2017-09-13-internet-things-sending-us-back-middle-ages&#34;&gt;&lt;a href=&#34;https://thenextweb.com/lifestyle/2017/09/13/internet-things-sending-us-back-middle-ages/&#34; target=&#34;_blank&#34;&gt;The Internet of Things is sending us back to the Middle Ages&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by JOSHUA A.T. FAIRFIELD on the right-to-own, right-to-repair and property.&lt;/p&gt;

&lt;p&gt;On the difference in the real property of a smartphone vs a car. On the imaginary, they are the same, but in contractual terms, there is a big difference.&lt;/p&gt;

&lt;p&gt;Tags: joshua-fairfield, right-to-repair, bill, law, property, smartphone, eula, license, clause, imaginary&lt;/p&gt;

&lt;p&gt;Id: 80c233ee-7a22-11e8-8743-0242ac110002
Read: Wed, 27 Jun 2018 15:55:24 +0000&lt;/p&gt;

&lt;h2 id=&#34;an-in-depth-guide-to-personal-cybersecurity-https-medium-com-nickrosener-an-in-depth-guide-to-personal-cybersecurity-be98ba47c968&#34;&gt;&lt;a href=&#34;https://medium.com/@nickrosener/an-in-depth-guide-to-personal-cybersecurity-be98ba47c968&#34; target=&#34;_blank&#34;&gt;An In-Depth Guide to Personal Cybersecurity&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this guide to personal security in the net, by Nick Rosener. Examples include 2fa, password management, app security, phone security, etc&lt;/p&gt;

&lt;p&gt;Tags: nick-rosener, 2fa, mfa, password, security, phone&lt;/p&gt;

&lt;p&gt;Id: 92c637d4-7a22-11e8-baba-0242ac110002
Read: Wed, 27 Jun 2018 15:55:54 +0000&lt;/p&gt;

&lt;h2 id=&#34;como-generar-fake-data-en-nuestros-tests-de-aceptación-http-programmeratwork-com-2017-09-06-como-generar-fake-data-en-nuestros-tests-de-aceptacion&#34;&gt;&lt;a href=&#34;http://programmeratwork.com/2017/09/06/Como-generar-fake-data-en-nuestros-tests-de-aceptacion/&#34; target=&#34;_blank&#34;&gt;Como generar &amp;ldquo;fake data&amp;rdquo; en nuestros tests de aceptación&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article (in Spanish) by Ricardo Borillo on using and generating fake data for our tests&lt;/p&gt;

&lt;p&gt;Tags: ricardo-borillo, borillo, fake-data, npm, npm-module, acceptance-testing, test, test-data, spanish&lt;/p&gt;

&lt;p&gt;Id: a0be3cd8-7a22-11e8-a5aa-0242ac110002
Read: Wed, 27 Jun 2018 15:56:17 +0000&lt;/p&gt;

&lt;h2 id=&#34;making-crash-bandicoot-gool-part-9-http-all-things-andy-gavin-com-2011-03-12-making-crash-bandicoot-gool-part-9&#34;&gt;&lt;a href=&#34;http://all-things-andy-gavin.com/2011/03/12/making-crash-bandicoot-gool-part-9/&#34; target=&#34;_blank&#34;&gt;Making Crash Bandicoot – GOOL – part 9&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Andy Gavin on making a lisp for games, an embedded language inside another language.&lt;/p&gt;

&lt;p&gt;GOOL prefers the power and maintainability of a lisp rather than the raw power of a lower-level programming language&lt;/p&gt;

&lt;p&gt;Tags: andy-gavin, lisp, gool, crash-bandicoot, game, game-development&lt;/p&gt;

&lt;p&gt;Id: 46ffc936-7a23-11e8-882f-0242ac110002
Read: Wed, 27 Jun 2018 16:00:56 +0000&lt;/p&gt;

&lt;h2 id=&#34;history-of-symbolics-lisp-machines-rebuttal-to-stallman-s-story-about-the-formation-of-symbolics-and-lmi-https-danluu-com-symbolics-lisp-machines&#34;&gt;&lt;a href=&#34;https://danluu.com/symbolics-lisp-machines/&#34; target=&#34;_blank&#34;&gt;History of Symbolics lisp machines - Rebuttal to Stallman’s Story About The Formation of Symbolics and LMI&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Dan Weinreb on the history of lisp machines, the AI winter and the rebuttal of some stories by Richard M. Stallman&lt;/p&gt;

&lt;p&gt;Tags: dan-weinreb, lisp, symbolics, rms, richard-stallman, lisp-machine, lmi, dan-luu, ai-winter, ai&lt;/p&gt;

&lt;p&gt;Id: 5174beda-7a23-11e8-bf1e-0242ac110002
Read: Wed, 27 Jun 2018 16:01:14 +0000&lt;/p&gt;

&lt;h2 id=&#34;free-for-dev-https-github-com-ripienaar-free-for-dev-blob-master-readme-md&#34;&gt;&lt;a href=&#34;https://github.com/ripienaar/free-for-dev/blob/master/README.md&#34; target=&#34;_blank&#34;&gt;free-for-dev&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this list of (free) resources for programmers&lt;/p&gt;

&lt;p&gt;Tags: free-resource, resource, service, amazon, aws, free-tier, free-trial, github&lt;/p&gt;

&lt;p&gt;Id: 5bd0ece6-7a23-11e8-8014-0242ac110002
Read: Wed, 27 Jun 2018 16:01:31 +0000&lt;/p&gt;

&lt;h2 id=&#34;every-programmer-should-know-https-github-com-mr-mig-every-programmer-should-know&#34;&gt;&lt;a href=&#34;https://github.com/mr-mig/every-programmer-should-know&#34; target=&#34;_blank&#34;&gt;Every Programmer Should Know&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this page on things a programmer should know&lt;/p&gt;

&lt;p&gt;Tags: github, programmer, knowledge&lt;/p&gt;

&lt;p&gt;Id: 67c8032c-7a23-11e8-9ab7-0242ac110002
Read: Wed, 27 Jun 2018 16:01:51 +0000&lt;/p&gt;

&lt;h2 id=&#34;haste-makes-waste-when-you-over-staff-to-achieve-schedule-compression-http-www-qsm-com-risk-02-html&#34;&gt;&lt;a href=&#34;http://www.qsm.com/risk_02.html&#34; target=&#34;_blank&#34;&gt;Haste Makes Waste When You Over-Staff to Achieve Schedule Compression&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Quantitative Software Management (QSM) on how software projects are affected by the size of the team producing it, with charts and based on previous investigation&lt;/p&gt;

&lt;p&gt;Tags: research, meta-research, quality, software, software-quality, qsm, quantitative-software-management&lt;/p&gt;

&lt;p&gt;Id: 72b999a8-7a23-11e8-b831-0242ac110002
Read: Wed, 27 Jun 2018 16:02:10 +0000&lt;/p&gt;

&lt;h2 id=&#34;hacking-back-considered-harmful-https-blog-0day-rocks-hacking-back-considered-harmful-1ea38f882e8f&#34;&gt;&lt;a href=&#34;https://blog.0day.rocks/hacking-back-considered-harmful-1ea38f882e8f&#34; target=&#34;_blank&#34;&gt;Hacking back considered harmful?&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by x0rz, a security researcher, on hacking back&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;active countermeasure that result in limiting the attacker capabilities&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And whether it is ethical to do it, even if it were illegal&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Ethics is knowing the difference between what you have a right to do and what is right to do. — Potter Stewart&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tags: x0rz, security, hacking, hacking-back, ethic, legality, law, quote, potter-stewart, countermeasure, attacker&lt;/p&gt;

&lt;p&gt;Id: 7d3d216a-7a23-11e8-8d31-0242ac110002
Read: Wed, 27 Jun 2018 16:02:27 +0000&lt;/p&gt;

&lt;h2 id=&#34;kurt-gödel-separating-truth-from-proof-in-mathematics-http-science-sciencemag-org-content-sci-298-5600-1899-full-pdf-sid-c031062c-8030-4e2c-8716-04409d7abefb&#34;&gt;&lt;a href=&#34;http://science.sciencemag.org/content/sci/298/5600/1899.full.pdf?sid=c031062c-8030-4e2c-8716-04409d7abefb&#34; target=&#34;_blank&#34;&gt;Kurt Gödel—Separating Truth from Proof in Mathematics&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Keith Devlin on Goedel&amp;rsquo;s work, especially on the Incompleteness theorem&lt;/p&gt;

&lt;p&gt;Tags: kurt-godel, kurt-goedel, incompleteness-theorem, bertrand-russell, alfred-north, principia-mathematica, david-hilbert, mathematics, theorem, computability, philosophy&lt;/p&gt;

&lt;p&gt;Id: 8bda1c3c-7a23-11e8-b1cb-0242ac110002
Read: Wed, 27 Jun 2018 16:02:52 +0000&lt;/p&gt;

&lt;h2 id=&#34;ml-for-the-working-programmer-2nd-edition-chapter-5-https-www-cl-cam-ac-uk-lp15-mlbook-pdf-chapter5-pdf&#34;&gt;&lt;a href=&#34;https://www.cl.cam.ac.uk/~lp15/MLbook/PDF/chapter5.pdf&#34; target=&#34;_blank&#34;&gt;ML for the working programmer, 2nd edition - chapter 5&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this chapter, to better understand finite and infinite data structures. Talks about streams (called sequences in ML), HOFs, lambda calculus. The book is by Lawrence Paulson&lt;/p&gt;

&lt;p&gt;Some of my examples are in&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/alvarogarcia7/haskell-simple-sessions/blob/master/trees/src/Trees.hs&#34; target=&#34;_blank&#34;&gt;https://github.com/alvarogarcia7/haskell-simple-sessions/blob/master/trees/src/Trees.hs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/alvarogarcia7/javascript-simple-sessions/tree/master/streams&#34; target=&#34;_blank&#34;&gt;https://github.com/alvarogarcia7/javascript-simple-sessions/tree/master/streams&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tags: book, chapter, lawrence-paulson, ml, sequence, hof, lambda-calculus, combinator, stream, lazy-list, data-structure, infinite-list, higher-order-function, function-composition&lt;/p&gt;

&lt;p&gt;Id: 97e67a7a-7a23-11e8-bc72-0242ac110002
Read: Wed, 27 Jun 2018 16:03:12 +0000&lt;/p&gt;

&lt;h2 id=&#34;how-to-hack-the-uk-tax-system-i-guess-https-medium-com-zemnmez-how-to-hack-the-uk-tax-system-i-guess-3e84b70f8b&#34;&gt;&lt;a href=&#34;https://medium.com/@Zemnmez/how-to-hack-the-uk-tax-system-i-guess-3e84b70f8b&#34; target=&#34;_blank&#34;&gt;how to hack the uk tax system, i guess&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this investigation of how a security investigator found a security defect in the UK tax system page and the process of reporting it and seeing it fixed&lt;/p&gt;

&lt;p&gt;Tags: zemnmez, open-source, uk, hmrc, responsible-disclosure&lt;/p&gt;

&lt;p&gt;Id: a4263c08-7a23-11e8-86c0-0242ac110002
Read: Wed, 27 Jun 2018 16:03:33 +0000&lt;/p&gt;

&lt;h2 id=&#34;indirect-sale-value-models-http-www-catb-org-esr-writings-magic-cauldron-magic-cauldron-9-html&#34;&gt;&lt;a href=&#34;http://www.catb.org/esr/writings/magic-cauldron/magic-cauldron-9.html&#34; target=&#34;_blank&#34;&gt;Indirect Sale-Value Models&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article on models for selling/monetising open source. By Eric S. Raymond&lt;/p&gt;

&lt;p&gt;Tags: eric-raymond, open-source, monetization&lt;/p&gt;

&lt;p&gt;Id: b0788d3a-7a23-11e8-82df-0242ac110002
Read: Wed, 27 Jun 2018 16:03:53 +0000&lt;/p&gt;

&lt;h2 id=&#34;i-ll-never-bring-my-phone-on-an-international-flight-again-neither-should-you-https-medium-freecodecamp-org-ill-never-bring-my-phone-on-an-international-flight-again-neither-should-you-e9289cde0e5f&#34;&gt;&lt;a href=&#34;https://medium.freecodecamp.org/ill-never-bring-my-phone-on-an-international-flight-again-neither-should-you-e9289cde0e5f&#34; target=&#34;_blank&#34;&gt;I’ll never bring my phone on an international flight again. Neither should you&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Quincy Larson on what happens when you bring your phone over to the US&lt;/p&gt;

&lt;p&gt;Tags: us, phone, privacy, quincy-larson, international-flight, cross-border-flight, flight, device, laptop, burner-phone&lt;/p&gt;

&lt;p&gt;Id: bc93aaf0-7a23-11e8-8ffe-0242ac110002
Read: Wed, 27 Jun 2018 16:04:14 +0000&lt;/p&gt;

&lt;h2 id=&#34;remote-starter-kit-http-www-remotestarterkit-com&#34;&gt;&lt;a href=&#34;http://www.remotestarterkit.com&#34; target=&#34;_blank&#34;&gt; Remote Starter Kit&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this page detailing some tools for a remote position&lt;/p&gt;

&lt;p&gt;Tags: remote, remote-work, remote-tool, tool, starter-kit&lt;/p&gt;

&lt;p&gt;Id: cfe1bdfe-7a23-11e8-b024-0242ac110002
Read: Wed, 27 Jun 2018 16:04:46 +0000&lt;/p&gt;

&lt;h2 id=&#34;moving-java-forward-faster-https-mreinhold-org-blog-forward-faster&#34;&gt;&lt;a href=&#34;https://mreinhold.org/blog/forward-faster&#34; target=&#34;_blank&#34;&gt;Moving Java Forward Faster&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Mark Reinhold, explaining his proposal for a faster java release train, changing from every two years to every six months.&lt;/p&gt;

&lt;p&gt;Tags: release, mark-reinhold, release-management, release-train, java, sun, oracle, brian-goetz, jre, jdk&lt;/p&gt;

&lt;p&gt;Id: dc842498-7a23-11e8-8b35-0242ac110002
Read: Wed, 27 Jun 2018 16:05:07 +0000&lt;/p&gt;

&lt;h2 id=&#34;keeping-a-tidy-life-https-medium-com-ctrlaltjustine-keeping-a-tidy-life-f01bbe2a9b3e&#34;&gt;&lt;a href=&#34;https://medium.com/@ctrlaltjustine/keeping-a-tidy-life-f01bbe2a9b3e&#34; target=&#34;_blank&#34;&gt;Keeping a tidy life&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Justine Arreche on how she manages her productivity tools: calendar, todo list; for all the activities in her life&lt;/p&gt;

&lt;p&gt;Tags: justine-arreche, productivity, management, calendar, todo-list, activity, time-management&lt;/p&gt;

&lt;p&gt;Id: e799c860-7a23-11e8-9f75-0242ac110002
Read: Wed, 27 Jun 2018 16:05:26 +0000&lt;/p&gt;

&lt;h2 id=&#34;to-understand-rising-inequality-consider-the-janitors-at-two-top-companies-then-and-now-https-www-nytimes-com-2017-09-03-upshot-to-understand-rising-inequality-consider-the-janitors-at-two-top-companies-then-and-now-html&#34;&gt;&lt;a href=&#34;https://www.nytimes.com/2017/09/03/upshot/to-understand-rising-inequality-consider-the-janitors-at-two-top-companies-then-and-now.html&#34; target=&#34;_blank&#34;&gt;To Understand Rising Inequality, Consider the Janitors at Two Top Companies, Then and Now&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Neil Irwin on inequality, explaining the professional career of two janitors at two different companies, in a different period of time.&lt;/p&gt;

&lt;p&gt;Tags: neil-irwin, inequality, kodak, apple, janitor, mercer, drucker, management, career-management, career, cto, cio&lt;/p&gt;

&lt;p&gt;Id: f66efafe-7a23-11e8-ae3d-0242ac110002
Read: Wed, 27 Jun 2018 16:05:51 +0000&lt;/p&gt;

&lt;h2 id=&#34;episode-8-interview-with-ryan-dahl-creator-of-node-js-https-www-mappingthejourney-com-single-post-2017-08-31-episode-8-interview-with-ryan-dahl-creator-of-nodejs&#34;&gt;&lt;a href=&#34;https://www.mappingthejourney.com/single-post/2017/08/31/Episode-8-Interview-with-Ryan-Dahl-Creator-of-Nodejs&#34; target=&#34;_blank&#34;&gt;Episode 8: Interview with Ryan Dahl, Creator of Node.js&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read [the transcription of] this interview, to Ryan Dahl.&lt;/p&gt;

&lt;p&gt;In it, he describes his view of Node.js and how it is not well-suited for building massive web servers, but could be appropriate for web applications&lt;/p&gt;

&lt;p&gt;Tags: ryan-dahl, go, microservice, web-app, interview, podcast, web-server, go, golang&lt;/p&gt;

&lt;p&gt;Id: 03cbbfca-7a24-11e8-927a-0242ac110002
Read: Wed, 27 Jun 2018 16:06:13 +0000&lt;/p&gt;

&lt;h2 id=&#34;the-recovering-programmer-http-prog21-dadgum-com-56-html&#34;&gt;&lt;a href=&#34;http://prog21.dadgum.com/56.html&#34; target=&#34;_blank&#34;&gt;The Recovering Programmer&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by James Hague on the user-centric vision and how he faces the problems related to programming&lt;/p&gt;

&lt;p&gt;Tags: programming, user-centric, vision, game, assembler, james-hague, recovering-programmer&lt;/p&gt;

&lt;p&gt;Id: 0db84e2c-7a24-11e8-ac3c-0242ac110002
Read: Wed, 27 Jun 2018 16:06:30 +0000&lt;/p&gt;

&lt;h2 id=&#34;we-who-value-simplicity-have-built-incomprehensible-machines-http-prog21-dadgum-com-139-html&#34;&gt;&lt;a href=&#34;http://prog21.dadgum.com/139.html&#34; target=&#34;_blank&#34;&gt;We Who Value Simplicity Have Built Incomprehensible Machines&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by  James Hague on examples of libraries that went wrong. How we should have said &amp;lsquo;no&amp;rsquo; early on instead of accepting it. A blog post about simplicity&lt;/p&gt;

&lt;p&gt;Tags: james-hague, simplicity, library, complexity, example&lt;/p&gt;

&lt;p&gt;Id: 192eae72-7a24-11e8-bc6c-0242ac110002
Read: Wed, 27 Jun 2018 16:06:49 +0000&lt;/p&gt;

&lt;h2 id=&#34;rapid-release-at-massive-scale-https-code-facebook-com-posts-270314900139291-rapid-release-at-massive-scale&#34;&gt;&lt;a href=&#34;https://code.facebook.com/posts/270314900139291/rapid-release-at-massive-scale/&#34; target=&#34;_blank&#34;&gt;Rapid release at massive scale&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Tags:&lt;/p&gt;

&lt;p&gt;Id: 24c02266-7a24-11e8-bddd-0242ac110002
Read: Wed, 27 Jun 2018 16:07:08 +0000&lt;/p&gt;

&lt;h2 id=&#34;having-a-work-wife-or-work-husband-is-good-for-your-career-https-www-linkedin-com-pulse-having-work-wife-husband-good-your-career-rebecca-holman&#34;&gt;&lt;a href=&#34;https://www.linkedin.com/pulse/having-work-wife-husband-good-your-career-rebecca-holman&#34; target=&#34;_blank&#34;&gt;Having a &amp;ldquo;work wife&amp;rdquo; or &amp;ldquo;work husband&amp;rdquo; is good for your career&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Rebecca Holman explaining what is a work spouse (i.e., a trusted equal to bounce off ideas, discuss, advance together). Not a mentor, not a trusted boss, not someone reporting to you.&lt;/p&gt;

&lt;p&gt;Explains some of the benefits of finding that role.&lt;/p&gt;

&lt;p&gt;Tags: rebecca-holman, work-wife, work-husband, work-spouse, team-management, work, job, pairing, mentor&lt;/p&gt;

&lt;p&gt;Id: 3136db02-7a24-11e8-b84e-0242ac110002
Read: Wed, 27 Jun 2018 16:07:29 +0000&lt;/p&gt;

&lt;h2 id=&#34;rest-apis-are-rest-in-peace-apis-long-live-graphql-https-medium-freecodecamp-org-rest-apis-are-rest-in-peace-apis-long-live-graphql-d412e559d8e4&#34;&gt;&lt;a href=&#34;https://medium.freecodecamp.org/rest-apis-are-rest-in-peace-apis-long-live-graphql-d412e559d8e4&#34; target=&#34;_blank&#34;&gt;REST APIs are REST-in-Peace APIs. Long Live GraphQL.&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article about GraphQL and its comparison to REST APIs&lt;/p&gt;

&lt;p&gt;Tags: graphql, rest, api, data, comparison, samer-buna&lt;/p&gt;

&lt;p&gt;Id: 3df70628-7a24-11e8-9c3c-0242ac110002
Read: Wed, 27 Jun 2018 16:07:51 +0000&lt;/p&gt;

&lt;h2 id=&#34;history-of-lisp-http-www-formal-stanford-edu-jmc-history-lisp-lisp-html&#34;&gt;&lt;a href=&#34;http://www-formal.stanford.edu/jmc/history/lisp/lisp.html&#34; target=&#34;_blank&#34;&gt;History of Lisp&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this paper by John McCarthy explaining the history of lisp&lt;/p&gt;

&lt;p&gt;Tags: john-mccarthy, lisp, invention, language, list-processing, s-expression, m-expression, data, code, lisp-dialect, fortran, ibm&lt;/p&gt;

&lt;p&gt;Id: 492eebb4-7a24-11e8-bcec-0242ac110002
Read: Wed, 27 Jun 2018 16:08:10 +0000&lt;/p&gt;

&lt;h2 id=&#34;software-development-450-words-per-minute-https-www-vincit-fi-en-blog-software-development-450-words-per-minute&#34;&gt;&lt;a href=&#34;https://www.vincit.fi/en/blog/software-development-450-words-per-minute/&#34; target=&#34;_blank&#34;&gt;Software development 450 words per minute&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article in which Tuukka Ojala explains how his tools for a (blind) software developer: the screen reader, the browser, the braille reader&lt;/p&gt;

&lt;p&gt;Tags: tuukka-ojala, blindness, accesibility, browser, screen-reader, braille-reader, braille, disability&lt;/p&gt;

&lt;p&gt;Id: 54e4e076-7a24-11e8-abd6-0242ac110002
Read: Wed, 27 Jun 2018 16:08:29 +0000&lt;/p&gt;

&lt;h2 id=&#34;compare-your-efforts-30-vs-3000-loc-for-very-simple-mean-app-http-blog-allcountjs-com-post-128771961651-compare-efforts&#34;&gt;&lt;a href=&#34;http://blog.allcountjs.com/post/128771961651/compare-efforts&#34; target=&#34;_blank&#34;&gt;Compare your efforts: 30 vs 3000 LOC for very simple MEAN app&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article that explains the difference between business value and technical value: a feature for the business could be very valuable but technically costly; also the other way around: they are independent variables.&lt;/p&gt;

&lt;p&gt;Also explains that some value in development can be obtained quicker by using a framework, such as the tool that allcountjs provides: 30 lines to generate the equivalent business features to 3000 lines&lt;/p&gt;

&lt;p&gt;Tags: allcountjs, mean, comparison, crud, framework, javascript, frontend, productivity, business-value, technical-value, cost&lt;/p&gt;

&lt;p&gt;Id: 5eea69ce-7a24-11e8-8842-0242ac110002
Read: Wed, 27 Jun 2018 16:08:46 +0000&lt;/p&gt;

&lt;h2 id=&#34;github-integration-https-medium-com-leanpub-github-integration-6f6d81847230&#34;&gt;&lt;a href=&#34;https://medium.com/@leanpub/github-integration-6f6d81847230&#34; target=&#34;_blank&#34;&gt;GitHub Integration&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article explaining how to integrate leanpub with github: write your book (e.g., in markdown) and store it in git, then publish automatically to leanpub&lt;/p&gt;

&lt;p&gt;Tags: leanpub, github, integration, self-publishing, publishing, book, tool, toolchain&lt;/p&gt;

&lt;p&gt;Id: 699d067e-7a24-11e8-9962-0242ac110002
Read: Wed, 27 Jun 2018 16:09:04 +0000&lt;/p&gt;

&lt;h2 id=&#34;wysiwtf-https-alistapart-com-column-wysiwtf&#34;&gt;&lt;a href=&#34;https://alistapart.com/column/wysiwtf&#34; target=&#34;_blank&#34;&gt;WYSIWTF&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Karen McGrane explaining the desktop publishing and the difference between writing and formatting for the web. Also, inline editing&lt;/p&gt;

&lt;p&gt;Tags: karen-mcgrane, editing, formatting, desktop-publishing, medium, wysiwyg&lt;/p&gt;

&lt;p&gt;Id: 7b5f342c-7a24-11e8-b858-0242ac110002
Read: Wed, 27 Jun 2018 16:09:34 +0000&lt;/p&gt;

&lt;h2 id=&#34;what-i-m-talking-about-when-i-talk-about-tdd-https-medium-com-ramtop-what-im-talking-about-when-i-talk-about-tdd-546a383468be&#34;&gt;&lt;a href=&#34;https://medium.com/@ramtop/what-im-talking-about-when-i-talk-about-tdd-546a383468be&#34; target=&#34;_blank&#34;&gt;What I’m talking about when I talk about TDD&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Uberto Barbini in which he describes his re-discovery of TDD as a tool to design&lt;/p&gt;

&lt;p&gt;Tags: uberto-barbini, tdd, rediscovery, kent-beck, test-driven-development&lt;/p&gt;

&lt;p&gt;Id: 866b41b2-7a24-11e8-9c54-0242ac110002
Read: Wed, 27 Jun 2018 16:09:52 +0000&lt;/p&gt;

&lt;h2 id=&#34;se-radio-episode-273-steve-mcconnell-on-software-estimation-http-www-se-radio-net-2016-11-se-radio-episode-273-steve-mcconnell-on-software-estimation&#34;&gt;&lt;a href=&#34;http://www.se-radio.net/2016/11/se-radio-episode-273-steve-mcconnell-on-software-estimation/&#34; target=&#34;_blank&#34;&gt;SE-Radio Episode 273: Steve McConnell on Software Estimation&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Sven Johann interviews Steve McConnell about software estimation and planning.&lt;/p&gt;

&lt;p&gt;Talks about intrinsic risk management and extrinsic risk management&lt;/p&gt;

&lt;p&gt;Explains that you should manage the risk so the most uncertain is tackled in the beginning. At the retro (following the demo), you get risk identification (as root cause analysis based on not delivering as expected)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The goal of Agile was not to be able to change all the time, but to adapt to change&lt;/p&gt;

&lt;p&gt;Embrace change&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tags: cone-of-uncertainty, agile, project-management, risk, sven-johann, steve-mcconnell, iteration, scrum, risk-identification&lt;/p&gt;

&lt;p&gt;Id: 9c543506-7a24-11e8-8c9b-0242ac110002
Read: Wed, 27 Jun 2018 16:10:29 +0000&lt;/p&gt;

&lt;h2 id=&#34;software-psychology-with-bjorn-freeman-benson-https-softwareengineeringdaily-com-2017-03-28-software-psychology-with-bjorn-freeman-benson&#34;&gt;&lt;a href=&#34;https://softwareengineeringdaily.com/2017/03/28/software-psychology-with-bjorn-freeman-benson/&#34; target=&#34;_blank&#34;&gt;Software Psychology with Bjorn Freeman Benson&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve listened to this podcast on psychology&lt;/p&gt;

&lt;p&gt;Tags: software-engineering-daily, bjorn-benson, psychology, walled-garden&lt;/p&gt;

&lt;p&gt;Id: a90cf1ac-7a24-11e8-a69e-0242ac110002
Read: Wed, 27 Jun 2018 16:10:50 +0000&lt;/p&gt;

&lt;h2 id=&#34;using-cqrs-to-make-controllers-lean-with-derek-comartin-https-softwareengineeringdaily-com-2017-03-10-using-cqrs-to-make-controllers-lean-with-derek-comartin&#34;&gt;&lt;a href=&#34;https://softwareengineeringdaily.com/2017/03/10/using-cqrs-to-make-controllers-lean-with-derek-comartin/&#34; target=&#34;_blank&#34;&gt;Using CQRS to Make Controllers Lean with Derek Comartin&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve listened to this podcast on CQRS&lt;/p&gt;

&lt;p&gt;Tags: cqrs, derek-comartin, command-query-responsibility-segregation, greg-young, udi-dahan, red-book, ddd, domain-driven-design, podcast, software-engineering-daily&lt;/p&gt;

&lt;p&gt;Id: b2056db6-7a24-11e8-97d3-0242ac110002
Read: Wed, 27 Jun 2018 16:11:05 +0000&lt;/p&gt;

&lt;h2 id=&#34;elm-in-production-25-000-lines-later-https-functional-works-hub-com-blog-elm-in-production-25-000-lines-later&#34;&gt;&lt;a href=&#34;https://functional.works-hub.com/blog/Elm-In-Production-25-000-Lines-Later&#34; target=&#34;_blank&#34;&gt;Elm In Production: 25,000 Lines Later&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Christian Charukiewicz explaining how he started a new project and a new feature in Elm. How he explained this new technology to his teammates and how it is going now.&lt;/p&gt;

&lt;p&gt;Explains the pros and cons for the language.&lt;/p&gt;

&lt;p&gt;Tags: christian-charukiewicz, elm, compiler, experience-report, frontend, functional-language, functional-programming&lt;/p&gt;

&lt;p&gt;Id: bc6e1190-7a24-11e8-b19a-0242ac110002
Read: Wed, 27 Jun 2018 16:11:23 +0000&lt;/p&gt;

&lt;h2 id=&#34;growing-up-with-alexa-https-www-technologyreview-com-s-608430-growing-up-with-alexa&#34;&gt;&lt;a href=&#34;https://www.technologyreview.com/s/608430/growing-up-with-alexa/&#34; target=&#34;_blank&#34;&gt;Growing Up with Alexa&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Tags:&lt;/p&gt;

&lt;p&gt;Id: c2416c52-7a24-11e8-b692-0242ac110002
Read: Wed, 27 Jun 2018 16:11:33 +0000&lt;/p&gt;

&lt;h2 id=&#34;jony-s-patience-https-medium-com-mkruz-jony-s-patience-670d5a3dc128&#34;&gt;&lt;a href=&#34;https://medium.com/@mkruz/jony-s-patience-670d5a3dc128&#34; target=&#34;_blank&#34;&gt;Jony’s Patience&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Mike Kruzeniski explaining part of John Ive career at Apple and explaining part of the design process the Apple Watch had.&lt;/p&gt;

&lt;p&gt;Tags: ux, design, apple, watch, john-ive, mike-kruzeniski, career, career-management&lt;/p&gt;

&lt;p&gt;Id: cb789e76-7a24-11e8-bdb2-0242ac110002
Read: Wed, 27 Jun 2018 16:11:48 +0000&lt;/p&gt;

&lt;h2 id=&#34;the-four-month-bug-jvm-statistics-cause-garbage-collection-pauses-http-www-evanjones-ca-jvm-mmap-pause-html&#34;&gt;&lt;a href=&#34;http://www.evanjones.ca/jvm-mmap-pause.html&#34; target=&#34;_blank&#34;&gt;The Four Month Bug: JVM statistics cause garbage collection pauses&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this blog post by Evan Jones as an example of unknown unknown&lt;/p&gt;

&lt;p&gt;Tags: evan-jones, unknown-unknown, java, mmap, garbage-collector, pause, unknown&lt;/p&gt;

&lt;p&gt;Id: d4b6a596-7a24-11e8-b245-0242ac110002
Read: Wed, 27 Jun 2018 16:12:04 +0000&lt;/p&gt;

&lt;h2 id=&#34;the-pleasure-of-building-big-things-http-rc3-org-2015-03-24-the-pleasure-of-building-big-things&#34;&gt;&lt;a href=&#34;http://rc3.org/2015/03/24/the-pleasure-of-building-big-things/&#34; target=&#34;_blank&#34;&gt;The pleasure of building big things&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article explaining that big projects take time to be created.&lt;/p&gt;

&lt;p&gt;The temptation is all around us, to accelerate feedback loops, create products more quickly, release earlier. That has the tension of being &amp;lsquo;half-baked&amp;rsquo; products, that have not achieved the minimum level of loveable feature and, thus, not used.&lt;/p&gt;

&lt;p&gt;Tags: time, focus, rafe-colburn, product, lean&lt;/p&gt;

&lt;p&gt;Id: dddee4c6-7a24-11e8-b11f-0242ac110002
Read: Wed, 27 Jun 2018 16:12:19 +0000&lt;/p&gt;

&lt;h2 id=&#34;choose-boring-technology-http-mcfunley-com-choose-boring-technology&#34;&gt;&lt;a href=&#34;http://mcfunley.com/choose-boring-technology/&#34; target=&#34;_blank&#34;&gt;Choose Boring Technology&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Dan McKinley about how choosing boring (i.e., well-proven) technology can help you focus on your company goals and how &amp;lsquo;the best tool for the job&amp;rsquo; is not always the case, as the job depends on who you ask: developers, ops, business.&lt;/p&gt;

&lt;p&gt;Tags: dan-mckinley, boring, technology, proven, production-ready, development, operations, focus, business, goal, best-tool-for-the-job&lt;/p&gt;

&lt;p&gt;Id: e91565cc-7a24-11e8-8849-0242ac110002
Read: Wed, 27 Jun 2018 16:12:38 +0000&lt;/p&gt;

&lt;h2 id=&#34;exclusive-here-s-the-full-10-page-anti-diversity-screed-circulating-internally-at-google-updated-https-gizmodo-com-exclusive-heres-the-full-10-page-anti-diversity-screed-1797564320&#34;&gt;&lt;a href=&#34;https://gizmodo.com/exclusive-heres-the-full-10-page-anti-diversity-screed-1797564320&#34; target=&#34;_blank&#34;&gt;Exclusive: Here&amp;rsquo;s The Full 10-Page Anti-Diversity Screed Circulating Internally at Google [Updated]&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I have read this document&lt;/p&gt;

&lt;p&gt;Tags: google, scandal, sexism&lt;/p&gt;

&lt;p&gt;Id: fe723d14-7a24-11e8-ab5c-0242ac110002
Read: Wed, 27 Jun 2018 16:13:14 +0000&lt;/p&gt;

&lt;h2 id=&#34;check-your-work-https-8thlight-com-blog-connor-mendenhall-2013-10-31-check-your-work-html&#34;&gt;&lt;a href=&#34;https://8thlight.com/blog/connor-mendenhall/2013/10/31/check-your-work.html&#34; target=&#34;_blank&#34;&gt;Check Your Work&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Tags:&lt;/p&gt;

&lt;p&gt;Id: 172e94e2-7a25-11e8-86cc-0242ac110002
Read: Wed, 27 Jun 2018 16:13:55 +0000&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Self-Study in March 2016</title>
      <link>https://alvarogarcia7.github.io/blog/2016/03/02/self-study-in-march-2016/</link>
      <pubDate>Wed, 02 Mar 2016 12:58:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2016/03/02/self-study-in-march-2016/</guid>
      <description>

&lt;h2 id=&#34;learning-programming-isn-t-that-hard-deep-work-is-hard&#34;&gt;Learning Programming Isn’t That Hard, Deep Work Is Hard&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@benedictfritz/learning-programming-isn-t-that-hard-deep-work-is-hard-40a4cf3104f4&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Benedict Fritz on two types of work (i.e., deep and shallow) and how programming is of the deep type. He links the difficulty of learning to program to the difficulty of practicing deep work.&lt;/p&gt;

&lt;p&gt;Tags: analogy, benedict-fritz, deep-work, shallow-work, learn-to-program, psychology&lt;/p&gt;

&lt;h2 id=&#34;becodeweek-by-yeray-darias&#34;&gt;BeCodeWeek by Yeray Darias&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://developerscookbook.blogspot.com.es/search/label/desk-surfing&#34; target=&#34;_blank&#34;&gt;this category of posts&lt;/a&gt; by Yeray Darias about his BeCodeWeek, a desk-surfing experience at BeCode.&lt;/p&gt;

&lt;p&gt;Publishes one entry per day detailing his activities: working for an open-source library, discussions, etc&lt;/p&gt;

&lt;p&gt;Tags: becodeweek, yeray-darias, desk-surfing, experience, experience-report, analysis&lt;/p&gt;

&lt;h2 id=&#34;becodeweek-by-yeray-darias-1&#34;&gt;BeCodeWeek by Yeray Darias&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://developerscookbook.blogspot.com.es/search/label/desk-surfing&#34; target=&#34;_blank&#34;&gt;this category of posts&lt;/a&gt; by Yeray Darias about his BeCodeWeek, a desk-surfing experience at BeCode.&lt;/p&gt;

&lt;p&gt;Publishes one entry per day detailing his activities: working for an open-source library, discussions, etc&lt;/p&gt;

&lt;p&gt;Tags: becodeweek, yeray-darias, desk-surfing, experience, experience-report, analysis&lt;/p&gt;

&lt;h2 id=&#34;tracer-bullets&#34;&gt;Tracer Bullets&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://c2.com/cgi/wiki?TracerBullets&#34; target=&#34;_blank&#34;&gt;this page&lt;/a&gt; about tracer bullets, an analogy from the military warfare to a software project.&lt;/p&gt;

&lt;p&gt;Serves the purpose of adjusting the aim of the cannon to better reach the target.&lt;/p&gt;

&lt;p&gt;Tags: analogy, metaphor, warfare, management&lt;/p&gt;

&lt;h2 id=&#34;cohesion-the-cornerstone-of-software-design&#34;&gt;Cohesion - the cornerstone of software design&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://codurance.com/2016/03/03/cohesion-cornerstone-software-design/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Sandro Mancuso on the topic of cohesion. Describes the 7 types of cohesion, as described in Structured Design&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;, from worst to best:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Coincidental cohesion&lt;/li&gt;
&lt;li&gt;Logical cohesion&lt;/li&gt;
&lt;li&gt;Temporal cohesion&lt;/li&gt;
&lt;li&gt;Procedural cohesion&lt;/li&gt;
&lt;li&gt;Communicational/informational cohesion&lt;/li&gt;
&lt;li&gt;Sequential cohesion&lt;/li&gt;
&lt;li&gt;Functional cohesion&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;and about Design-Level Cohesion:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Coincidental relation (R1)&lt;/li&gt;
&lt;li&gt;Conditional relation (R2)&lt;/li&gt;
&lt;li&gt;Iterative relation (R3)&lt;/li&gt;
&lt;li&gt;Communication relation (R4)&lt;/li&gt;
&lt;li&gt;Sequential relation (R5)&lt;/li&gt;
&lt;li&gt;Functional (R6)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tags: cohesion, codurance, edward-yourdon, larry-constantine, list, sandro-mancuso, software-design, design-level-cohesion, smc-cohesion, dlc-cohesion&lt;/p&gt;

&lt;h2 id=&#34;etsy-cto-q-a-we-need-software-engineers-not-developers&#34;&gt;Etsy CTO Q&amp;amp;A: We Need Software Engineers, Not Developers&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://thenewstack.io/etsy-cto-qa-need-software-engineers-not-developers/&#34; target=&#34;_blank&#34;&gt;this interview&lt;/a&gt; with John Allspaw, where they explain the onboarding experience for new hires at Etsy, the DevOps philosophy and the need for engineering skills, more than developer skills. This can be exemplified in the need to know more, defining the boundaries of your job and finding the right tool for the job.&lt;/p&gt;

&lt;p&gt;Tags: devops, interview, q-and-a, john-allspaw, etsy, onboarding, hire, team-management, deploy&lt;/p&gt;

&lt;h2 id=&#34;frequency-reduces-difficulty&#34;&gt;Frequency Reduces Difficulty&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://martinfowler.com/bliki/FrequencyReducesDifficulty.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Martin Fowler on why we should repeat things that are difficult for us:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Perfectioning the technique&lt;/li&gt;
&lt;li&gt;Internalizing the details&lt;/li&gt;
&lt;li&gt;Easing its automation&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tags: martin-fowler, automation, process, perfection, internalizing, technique, detail, process-theory, agile&lt;/p&gt;

&lt;h2 id=&#34;lambdas-are-confusing&#34;&gt;Lambdas are confusing&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched this video where Coman Hamilton from JAXenter interviews Dr. Heinz Kabutz about Java&amp;rsquo;s lambda syntax. Cites the problem with exceptions, generics, method overloading.&lt;/p&gt;

&lt;p&gt;Tags: java, lambda, coman-hamilton, jaxenter, heinz-kabutz, problem&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=WcHom1eVhi4&amp;amp;feature=youtu.be&#34; target=&#34;_blank&#34;&gt;https://www.youtube.com/watch?v=WcHom1eVhi4&amp;amp;feature=youtu.be&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;el-full-stack-developer-en-2016&#34;&gt;El full-stack developer en 2016&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.developerdepueblo.com/development/full-stack-developer-2016/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Jose Ignacio Andrés about the job descriptions of 2016.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;El principal valor de un full-stack es poder simplificar el trabajo a los demás miembros del equipo.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;My translation:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The main value of a full-stack developer is to be able to simplify other teammates&amp;rsquo; work&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tags: teamwork, teammate, fullstack, simplification, work, team-management, jose andres&lt;/p&gt;

&lt;h2 id=&#34;i-am-a-software-craftsman&#34;&gt;I am a software craftsman&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.dirv.me/i-am-a-software-craftsman/index.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Daniel Irvine about calling yourself a craftsman or not. He says that if you adhere to their values, you should.&lt;/p&gt;

&lt;p&gt;Tags: craftsmanship, label, daniel-irvine, craftsman, group-belonging&lt;/p&gt;

&lt;h2 id=&#34;teaching-programming-languages-in-a-post-linnaean-age&#34;&gt;Teaching Programming Languages in a Post-Linnaean Age&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://cs.brown.edu/~sk/Publications/Papers/Published/sk-teach-pl-post-linnaean/paper.pdf&#34; target=&#34;_blank&#34;&gt;this paper&lt;/a&gt; by Shriram Krishnamurthi where he explains the need for books like &lt;a href=&#34;http://www.plai.org/&#34; target=&#34;_blank&#34;&gt;PLAI&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;lack of paradigms in new languages, and its separation (or lack of)&lt;/li&gt;
&lt;li&gt;design of languages cheaper and cheaper these days&lt;/li&gt;
&lt;li&gt;rigor level in publications&lt;/li&gt;
&lt;li&gt;inductive and deductive learning
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;notes&#34;&gt;Notes&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;post-Linnaean&lt;/code&gt; refers to the &lt;a href=&#34;https://en.wikipedia.org/wiki/Carl_Linnaeus&#34; target=&#34;_blank&#34;&gt;Carl Linnaeus&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;He is known as the father of modern taxonomy&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tags: inductive-learning, deductive-learning, dsl, domain-specific-language, type-soundness, continuation-style, garbage-collection, reactive-programming, scheme, plai, teaching, programming-language, shriram-krishnamurthi&lt;/p&gt;

&lt;h2 id=&#34;lazy-ruby&#34;&gt;Lazy Ruby&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://sonnym.github.io/2014/04/05/lazy-ruby/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by sonnym about using ruby&amp;rsquo;s lazy (non-strict) features, detailing an example with Fibonacci&amp;rsquo;s sequence.&lt;/p&gt;

&lt;p&gt;Tags: laziness, strictness, non-strictness, ruby, fibonacci, comparison&lt;/p&gt;

&lt;h2 id=&#34;jessica-livingston&#34;&gt;Jessica Livingston&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://paulgraham.com/jessica.html&#34; target=&#34;_blank&#34;&gt;this essay&lt;/a&gt; by Paul Graham about his co-founder at the Y-combinator: Jessica Livingston. She was considered the Social Radar at YC&lt;/p&gt;

&lt;p&gt;The essay also talks about the non-existent separation between working hours and not and about her implication and personality.&lt;/p&gt;

&lt;p&gt;Tags: jessica-livingston, paul-graham, y-combinator, feminism, yc, essay&lt;/p&gt;

&lt;h2 id=&#34;four-laws-of-software-economics-part-1&#34;&gt;Four Laws Of Software Economics (Part 1)&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@RichMironov/four-laws-of-software-economics-part-1-e162aa0ea9e5&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Rich Mironov on why the development team will never be big enough (because of economics, because there are more things to be done than time to do them, so we have to prioritize them) and about the communication problems between the dev team and the client(s).&lt;/p&gt;

&lt;p&gt;Also talks about the general personality of clients and devs and task prioritization&lt;/p&gt;

&lt;p&gt;Tags: exclusive-or, magical-thinking, tnstaafl, management, agile, team, capacity, death-march, estj, intp, software-economics, product-strategy, law-of-ruthless-prioritization, law, rich-mironov, slack, myers-briggs-type&lt;/p&gt;

&lt;h2 id=&#34;you-should-take-a-codecation&#34;&gt;You Should Take A Codecation&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://robots.thoughtbot.com/you-should-take-a-codecation&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Ben Orenstein explaining what is a codecation and what he&amp;rsquo;s done in the two codecations he&amp;rsquo;s taken.&lt;/p&gt;

&lt;p&gt;Tags: codecation, ben-orenstein, vacation, holiday, coding, shipping, in-company&lt;/p&gt;

&lt;h2 id=&#34;giving-up-on-tdd&#34;&gt;Giving Up on TDD&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://iansommerville.com/systems-software-and-technology/giving-up-on-test-first-development/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Ian Sommerville about the problems he&amp;rsquo;s found while doing TDD, mainly about design, but also about being conservative in the amount of tests you allow yourself to break while refactoring.&lt;/p&gt;

&lt;p&gt;Tags: tdd, ian-sommerville, refactoring, problem, design-problem, design, giving-up-tdd&lt;/p&gt;

&lt;h2 id=&#34;giving-up-on-tdd-answer&#34;&gt;Giving Up on TDD - answer&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.cleancoder.com/uncle-bob/2016/03/19/GivingUpOnTDD.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Robert C. Martin on the common issues for people adopting TDD:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The Fragile Test Problem&lt;/li&gt;
&lt;li&gt;The Design Problem&lt;/li&gt;
&lt;li&gt;The Testable Design Problem&lt;/li&gt;
&lt;li&gt;The Magic Bullet Problem&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This article is an answer to another by Ian Sommerville.&lt;/p&gt;

&lt;p&gt;Tags: tdd, uncle-bob, robert-martin, adoption, ian-sommerville, fragile-test-problem, giving-up-tdd, design-problem, testable-design-problem, magic-bullet-problem&lt;/p&gt;

&lt;h2 id=&#34;seek-out-jobs-with-fast-learning-cycles&#34;&gt;Seek out jobs with fast learning cycles&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@sarahtavel/seek-out-jobs-with-fast-learning-cycles-f923c8d8a4be#.7bxx65a4x&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Sarah Tavel on learning on the job and how fast these learning cycles can happen at companies at different stages of maturity.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;So if you’re thinking of changing jobs, or taking your first, my advice: find a place with a fast learning cycle, and a steep learning curve.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tags: learning, job, hypothesis, sarah-tavel, learning-cycle, maturity-level, learning-process, product-management&lt;/p&gt;

&lt;h2 id=&#34;clean-code-vs-implementation-patterns&#34;&gt;Clean Code Vs. Implementation Patterns&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.xebia.com/clean-code-vs-implementation-patterns/&#34; target=&#34;_blank&#34;&gt;this comparison&lt;/a&gt; of Clean Code vs Implementation Pattern books, by Vincent Partington.&lt;/p&gt;

&lt;p&gt;In it, the author explains the differences in style in both books, and how they compare to others.&lt;/p&gt;

&lt;p&gt;Tags: clean-code, implementation-patterns, comparison, book-review, book-comparison, vincent-partington&lt;/p&gt;

&lt;h2 id=&#34;stuck-in-traffic-vlog-103-new-spammer-techniques&#34;&gt;Stuck in Traffic vlog #103 - New Spammer Techniques&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve seen &lt;a href=&#34;https://www.peerlyst.com/posts/stuck-in-traffic-vlog-103-new-spammer-techniques-j-wolfgang-goerlich&#34; target=&#34;_blank&#34;&gt;this vlog entry&lt;/a&gt; on machines fighting machines (exemplified with the spam producing and filtering) and how some spammers are trying more direct techniques focusing on higher-value targets, sometimes even handcrafting messages and modifying them every few units.&lt;/p&gt;

&lt;p&gt;Tags: wolfgang-goerlich, spam, vlog, spammer, machine-learning&lt;/p&gt;

&lt;h2 id=&#34;becoming-a-finisher&#34;&gt;Becoming A Finisher&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://christopherdbui.com/becoming-a-finisher/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Christopher Bui where he explains that projects that are too ambitious stall your productivity and make you lose your focus.&lt;/p&gt;

&lt;p&gt;Tags: christopher-bui, pomodoro, time-management, productivity, motivation, ambition, paul-graham, quote&lt;/p&gt;

&lt;h2 id=&#34;hanging-around-with-red-black-tree-implementations-the-beginnings&#34;&gt;Hanging around with red-black tree implementations: the beginnings&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.fraixed.es/post/hanging-around-red-black-trees-implementations/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Ivan Fraixedes where he details the progress of implementing a red-black tree, and also his motivation for doing it.&lt;/p&gt;

&lt;p&gt;Tags: ivan-fraixedes, red-black-tree, abstract-data-structure, adt, deliberate-practice, pet-project&lt;/p&gt;

&lt;h2 id=&#34;some-tools-for-faster-blogging-in-octopress&#34;&gt;Some Tools for Faster Blogging in Octopress&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://dgmstuart.github.io/blog/2015/03/27/some-tools-for-faster-blogging-in-octopress/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; for tips and tricks on how to blog faster with octopress. Written by Duncan Stuart.&lt;/p&gt;

&lt;p&gt;Tags: duncan-stuart, blog, improvement, meta, octopress, tip-and-trick&lt;/p&gt;

&lt;h2 id=&#34;the-veil-of-ignorance&#34;&gt;The veil of ignorance&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://mrmrs.io/writing/2016/03/23/the-veil-of-ignorance/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Adam Morse on how not being on the top of the skills performance can affect your design and your user experience. Also, references the concept of &amp;ldquo;The Veil of Ignorance&amp;rdquo;, a concept by John Rawls.&lt;/p&gt;

&lt;p&gt;Tags: john-rawls, veil-of-ignorance, user-experience, design&lt;/p&gt;

&lt;h2 id=&#34;to-smile-again-recovering-from-the-paralysis-of-burnout&#34;&gt;To Smile Again &amp;ndash; Recovering from the paralysis of burnout&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://m.signalvnoise.com/to-smile-again-ae0ba9f2198c&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Jamis Buck on his story of burnout, what symptoms had on him and how he got out of it.&lt;/p&gt;

&lt;p&gt;Tags: burnout, jamis-buck, psychology, productivity, personal, story, analogy&lt;/p&gt;

&lt;h2 id=&#34;beyond-email-could-startup-slack-change-the-way-you-work&#34;&gt;Beyond email: could startup Slack change the way you work?&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.theguardian.com/technology/2016/mar/25/slack-butterfield-emoji-chat-nasa-harvard-silicon-valley&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; on Slack&amp;rsquo;s office culture, with their diversity, policies and values after a high people growth in a short period of time. By Jemima Kiss&lt;/p&gt;

&lt;p&gt;Tags: culture, office-culture, slack, jemima-kiss&lt;/p&gt;

&lt;h2 id=&#34;slack-work-this-way&#34;&gt;Slack: Work This Way&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@iaintait/slack-work-this-way-9221284472dd&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt;, a response to my above read, about the office culture at Slack.&lt;/p&gt;

&lt;p&gt;Tags: iain-tait, response, slack, office-culture&lt;/p&gt;

&lt;h2 id=&#34;bem-101&#34;&gt;BEM 101&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://css-tricks.com/bem-101/&#34; target=&#34;_blank&#34;&gt;this introduction&lt;/a&gt; to a CSS style called Block, Element, Modifier methodology (BEM).&lt;/p&gt;

&lt;p&gt;In it,&lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;a block is a top-level abstraction of a new component&lt;/li&gt;
&lt;li&gt;Child items, or elements, can be placed inside and these are denoted by two underscores following the name of the block [&amp;hellip;].
modifiers can manipulate the block so that we can theme or style that particular component without inflicting changes on a completely unrelated module. This is done by appending two hyphens to the name of the block [&amp;hellip;].&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;By Joe Richardson, Robin Rendle et al.&lt;/p&gt;

&lt;p&gt;Tags: joe-richardson, robin-rendle, bem, css, css-methodology, introduction, css-architecture, sass&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;Structured Design: Fundamentals of a Discipline of Computer Program and Systems Design by Yourdon and Constantine.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Self-Study in September 2015</title>
      <link>https://alvarogarcia7.github.io/blog/2015/09/01/self-study-in-september-2015/</link>
      <pubDate>Tue, 01 Sep 2015 15:25:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/09/01/self-study-in-september-2015/</guid>
      <description>

&lt;h2 id=&#34;the-30-second-habit-with-a-lifelong-impact&#34;&gt;The 30 second habit with a lifelong impact&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://blog.growth.supply/the-30-second-habit-with-a-lifelong-impact-2c3f948ead98&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; list of patterns, by Robyn Scott, in which it is explained why to compress information in a few ideas, investing 30 seconds to condense the article.&lt;/p&gt;

&lt;p&gt;Tags: 30-second, habit, robyn-scott&lt;/p&gt;

&lt;h2 id=&#34;the-strengths-and-weaknesses-of-extreme-programming&#34;&gt;The Strengths and Weaknesses of Extreme Programming&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched &lt;a href=&#34;https://www.youtube.com/watch?v=LkhLZ7_KZ5w&#34; target=&#34;_blank&#34;&gt;this video&lt;/a&gt; explaining the strengths and weaknesses of extreme programming. By William Matheson&lt;/p&gt;

&lt;p&gt;Tags: extreme-programming, xp, william-matheson, video, strength, weakness&lt;/p&gt;

&lt;h2 id=&#34;poster-de-extreme-programming&#34;&gt;Poster de Extreme Programming&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched &lt;a href=&#34;https://www.youtube.com/watch?v=4nN6Gh79Yg8&#34; target=&#34;_blank&#34;&gt;this video&lt;/a&gt; introducing eXtreme Programming. By Martín Salías&lt;/p&gt;

&lt;p&gt;Tags: martin-salias, kleer, extreme-programming, xp&lt;/p&gt;

&lt;h2 id=&#34;good-tech-lead-bad-tech-lead&#34;&gt;Good Tech Lead, Bad Tech Lead&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://blog.growth.supply/good-tech-lead-bad-tech-lead-948b2b806d86&#34; target=&#34;_blank&#34;&gt;this comparison&lt;/a&gt; of good and bad traits in tech leads. By Jason Liszka.&lt;/p&gt;

&lt;p&gt;Explains the differences between good and bad tech leads, even though many of these qualities are shared by plain team members&lt;/p&gt;

&lt;p&gt;Tags: jason-liszka, tech-lead, comparison&lt;/p&gt;

&lt;h2 id=&#34;why-procrastinators-procrastinate&#34;&gt;Why Procrastinators Procrastinate&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://waitbutwhy.com/2013/10/why-procrastinators-procrastinate.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Tim Urban on procrastination: this article compares the procrastinator and the non-procrastinator brain with pictures, introducing the Rational part, the Instant Gratification Monkey and the Panic Monster. Shows some reasons why.&lt;/p&gt;

&lt;p&gt;There is more on part 2: &lt;a href=&#34;http://waitbutwhy.com/2013/11/how-to-beat-procrastination.html&#34; target=&#34;_blank&#34;&gt;How to beat procrastination&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tags: tim-urban, procrastination, rational-part, instant-gratification-monkey, panic-monster, brain, comparison&lt;/p&gt;

&lt;h2 id=&#34;algebraic-data-type&#34;&gt;Algebraic data type&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://en.wikipedia.org/wiki/Algebraic_data_type&#34; target=&#34;_blank&#34;&gt;this wikipedia page&lt;/a&gt;, that explains what this is, a few examples and the theory behind it.&lt;/p&gt;

&lt;p&gt;Tags: wikipedia, data-type, algebraic-data-type&lt;/p&gt;

&lt;h2 id=&#34;recursion&#34;&gt;Recursion&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://en.wikipedia.org/wiki/Recursion_(computer_science)&#34; target=&#34;_blank&#34;&gt;this wikipedia page&lt;/a&gt;, that explains the recursion basic concepts, such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;induction, coinduction&lt;/li&gt;
&lt;li&gt;recursion, corecursion&lt;/li&gt;
&lt;li&gt;implementation details in iterative vs recursive programs:

&lt;ul&gt;
&lt;li&gt;shortcutting recursion (i.e., arm-length&amp;rsquo;s recursion)&lt;/li&gt;
&lt;li&gt;wrapper function&lt;/li&gt;
&lt;li&gt;tail-call optimization, related to tail-recursive functions&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;recursion and its relation to data structures&lt;/li&gt;
&lt;li&gt;base case / recursive case and removing the need of the base one in corecursion or in non-strict languages&lt;/li&gt;
&lt;li&gt;types of recursion:

&lt;ul&gt;
&lt;li&gt;direct, indirect, mutual&lt;/li&gt;
&lt;li&gt;generative, structural&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tags: recursion, corecursion, induction, coinduction, tail-call-optimization, tail-recursion, direct-recursion, indirect-recursion, mutual-recursion, generative-recursion, structural-recursion, arm-length-recursion, iterative-function, recursive-function, base-case, recursive-case, wikipedia, data-structure&lt;/p&gt;

&lt;h2 id=&#34;anonymous-function&#34;&gt;Anonymous function&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://en.wikipedia.org/wiki/Anonymous_function&#34; target=&#34;_blank&#34;&gt;this wikipedia page&lt;/a&gt;, that describes what is a lambda expression or an anonymous function. How it can be used (e.g., currying, higher-order function, closures) and gives examples in many languages.&lt;/p&gt;

&lt;p&gt;Cites its invention (Church, 1936, lambda-calculus) and its first implementation (Lisp, 1958)&lt;/p&gt;

&lt;p&gt;Tags: alonzo-church, anonymous-function, lambda-expression, closure, lambda-calculus, lisp, currying, higher-order-function, wikipedia&lt;/p&gt;

&lt;h2 id=&#34;closure&#34;&gt;Closure&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://en.wikipedia.org/wiki/Closure_(computer_programming)&#34; target=&#34;_blank&#34;&gt;this wikipedia page&lt;/a&gt;, that explains the concept of closures and the usual confusion between closure and lambda. Also some applications.&lt;/p&gt;

&lt;p&gt;Discusses closures as a way of deferring execution and implementing object-oriented (OO) systems&lt;/p&gt;

&lt;p&gt;Tags: wikipedia, closure, object-orientation, lambda-expression&lt;/p&gt;

&lt;h2 id=&#34;zen-story-the-master-archer&#34;&gt;Zen Story: The Master Archer&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.thedailyzen.org/2015/06/23/zen-story-the-master-archer/&#34; target=&#34;_blank&#34;&gt;this story&lt;/a&gt; by Charlie Ambler about perfectionism and deep study, exemplified by the general that retires to study archery and the child who draws targets around the arrows.&lt;/p&gt;

&lt;p&gt;Tags: charlie-amber, master, student, zen, story&lt;/p&gt;

&lt;h2 id=&#34;loosely-coupled&#34;&gt;Loosely Coupled&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.bwhaley.com/loosely-coupled&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Ben Whaley about how to loosely couple services introducing a queue and the difference in patterns between push and pull communication.&lt;/p&gt;

&lt;p&gt;Tags: ben-whaley, push, pull, coupling, loose-coupling, service, queue, aws&lt;/p&gt;

&lt;h2 id=&#34;being-good-at-programming-competitions-correlates-negatively-with-being-good-on-the-job&#34;&gt;Being good at programming competitions correlates negatively with being good on the job&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched the small video and the discussion about programmers&amp;rsquo; talent at &lt;a href=&#34;http://www.catonmat.net/blog/programming-competitions-work-performance/&#34; target=&#34;_blank&#34;&gt;this page&lt;/a&gt;. By Peteris Krumins.&lt;/p&gt;

&lt;p&gt;The original video explains that being good at a programming contest correlates negatively with skill at a programming job, even if the company hires them.&lt;/p&gt;

&lt;p&gt;The discussion explains the analogy with height and the NBA and concludes that this parameter should be preponderated with less importance than others.&lt;/p&gt;

&lt;p&gt;Tags: google, peter-norvig, nba, analogy, programming-contest, programming-skill, peteris-krumins&lt;/p&gt;

&lt;h2 id=&#34;on-functors&#34;&gt;On Functors&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.catonmat.net/blog/on-functors/&#34; target=&#34;_blank&#34;&gt;this comparison&lt;/a&gt; by Peteris Krumins of what the functors are in different languages:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;C++: function objects&lt;/li&gt;
&lt;li&gt;Standard ML: generic implementation of interfaces. They allow to compose structures&lt;/li&gt;
&lt;li&gt;Haskell: structure containing zero or more objects that can be converted to another structure containing the other objects. It&amp;rsquo;s an homomorphism between two categories.&lt;/li&gt;
&lt;li&gt;Prolog: built-in predicate for self-inspection and the atom at the start of the structure&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tags: peteris-krumins, comparison, haskell, c-plus-plus, standard-ml, prolog, functor&lt;/p&gt;

&lt;h2 id=&#34;recursive-regular-expressions&#34;&gt;Recursive Regular Expressions&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.catonmat.net/blog/recursive-regular-expressions/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; on recursive regular expressions by Peteris Krumins.&lt;/p&gt;

&lt;p&gt;In it, he lightly describes how a regular expression relates to a &lt;a href=&#34;https://en.wikipedia.org/wiki/Context-free_grammar&#34; target=&#34;_blank&#34;&gt;Context-Free Grammar&lt;/a&gt; and the language support for Perl to include recursive regular expressions. Based on the examples (e.g., &lt;code&gt;0^n1^n&lt;/code&gt;), it really clicked to me that this could be expressed as a recursive function, with its base case and the recursive one. Also that it &amp;ldquo;depends on solutions to smaller instances of the same problem&amp;rdquo; (&lt;a href=&#34;https://en.wikipedia.org/wiki/Recursion_(computer_science)&#34; target=&#34;_blank&#34;&gt;wikipedia&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;Tags: peteris-krumins, regular-expression, recursion, recursive-regular-expression, perl, context-free-grammar, formal-language-theory&lt;/p&gt;

&lt;h2 id=&#34;in-functional-programming-what-is-a-functor&#34;&gt;In Functional Programming, what is a functor?&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://stackoverflow.com/questions/2030863/in-functional-programming-what-is-a-functor/2031421#2031421&#34; target=&#34;_blank&#34;&gt;this answer&lt;/a&gt;, by Norman Ramsey, on what is a functor.&lt;/p&gt;

&lt;p&gt;He explains in simple words what the concept is and how a type can belong to the class functor. Examples in haskell.&lt;/p&gt;

&lt;p&gt;Tags: norman-ramsey, functor, stack-overflow, haskell, type-class, class, map, fmap&lt;/p&gt;

&lt;h2 id=&#34;functors&#34;&gt;Functors&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.clojure.net/2013/01/19/Functors/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Jim Duey explaining functors in Clojure. He introduces a couple of notes of Haskell but all of the examples are in Clojure. Explains functors, a subset of it called applicatives, and the two libraries he has created.&lt;/p&gt;

&lt;p&gt;Tags: jim-duey, functor, clojure, haskell&lt;/p&gt;

&lt;h2 id=&#34;10-tips-for-proper-application-logging&#34;&gt;10 Tips for Proper Application Logging&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.javacodegeeks.com/2011/01/10-tips-proper-application-logging.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Tomasz Nurkiewicz about tips on logging:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;reduce side effects&lt;/li&gt;
&lt;li&gt;use categories and levels&lt;/li&gt;
&lt;li&gt;connection with external systems&lt;/li&gt;
&lt;li&gt;handling exceptions&lt;/li&gt;
&lt;li&gt;automatically / manually reading logging files&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tags: tomasz-nurkiewicz, logging, sl4j, log4j, tip&lt;/p&gt;

&lt;h2 id=&#34;what-is-duck-typing&#34;&gt;What is &amp;ldquo;duck typing&amp;rdquo;?&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://ericlippert.com/2014/01/02/what-is-duck-typing/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Eric Lippert about duck typing&lt;/p&gt;

&lt;p&gt;Tags: duck-typing, eric-lippert, type-system, c-sharp&lt;/p&gt;

&lt;h2 id=&#34;yagni&#34;&gt;Yagni&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve reread &lt;a href=&#34;http://martinfowler.com/bliki/Yagni.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Martin Fowler on the cost of developing features that are not needed&lt;/p&gt;

&lt;p&gt;Tags: martin-fowler, yagni, article, misunderstanding&lt;/p&gt;

&lt;h2 id=&#34;learn-haskell&#34;&gt;Learn Haskell&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve seen &lt;a href=&#34;https://www.youtube.com/watch?v=JJlI5FPTbgE&#34; target=&#34;_blank&#34;&gt;this video&lt;/a&gt; by Jordan Medlock on learning haskell, explaining the basics and how to use the REPL&lt;/p&gt;

&lt;p&gt;Tags: haskell, repl, jordan-medlock, beginner, video&lt;/p&gt;

&lt;h2 id=&#34;learn-haskell-1&#34;&gt;Learn Haskell&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve seen &lt;a href=&#34;https://www.youtube.com/watch?v=JJlI5FPTbgE&#34; target=&#34;_blank&#34;&gt;this video&lt;/a&gt; by Jordan Medlock on learning haskell, explaining the basics and how to use the REPL&lt;/p&gt;

&lt;p&gt;Tags: haskell, repl, jordan-medlock, beginner, video&lt;/p&gt;

&lt;h2 id=&#34;tmux-the-terminal-multiplexer&#34;&gt;TMUX - The Terminal Multiplexer&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read these two parts: (&lt;a href=&#34;http://blog.hawkhost.com/2010/06/28/tmux-the-terminal-multiplexer/&#34; target=&#34;_blank&#34;&gt;one&lt;/a&gt;, &lt;a href=&#34;http://blog.hawkhost.com/2010/07/02/tmux-%E2%80%93-the-terminal-multiplexer-part-2&#34; target=&#34;_blank&#34;&gt;two&lt;/a&gt;) of an introduction guide to &lt;code&gt;tmux&lt;/code&gt; (the unix terminal multiplexer) by Cody from Hawk Host.&lt;/p&gt;

&lt;p&gt;In it, he explains the basics of tmux and the main differences with &lt;code&gt;screen&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Tags: cody, hawk-host, tmux, how-to&lt;/p&gt;

&lt;h2 id=&#34;thermodynamics-and-garbage-collection&#34;&gt;Thermodynamics and Garbage Collection&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.pipeline.com/~hbaker1/ThermoGC.html&#34; target=&#34;_blank&#34;&gt;this paper&lt;/a&gt; by Henry G. Baker that explains the analogy of the garbage collection (&amp;ldquo;a freezer&amp;rdquo;) and thermodynamics, where the state mutator (th program, also an oven) modifies the garbage heap and introduces / extracts entropy into the system.&lt;/p&gt;

&lt;p&gt;Comparison between entropy and lack of information, using the theories from Shannon, Maxwell-Boltzmann. There&amp;rsquo;s a reference to the knapsack problem and to simulated annealing.&lt;/p&gt;

&lt;p&gt;There&amp;rsquo;s also a gentle introduction to thermodynamics in layman terms: heat, temperature, microstates, macrostates, reversability, etc.&lt;/p&gt;

&lt;p&gt;In this paper it is also reflected (in macro vs micro states) that the sum all parts is simpler than the single ones (i.e., Information Hiding)&lt;/p&gt;

&lt;p&gt;Tags: henry-baker, thermodynamics, microstate, macrostate, analogy, simulated-annealing, garbage-collection, shannon, information, maxwell-boltzmann, freezer, oven, entropy&lt;/p&gt;

&lt;h2 id=&#34;how-we-ended-up-with-microservices&#34;&gt;How we ended up with microservices&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://philcalcado.com/2015/09/08/how_we_ended_up_with_microservices.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt;, by Phil Calçado, where he talks about his stay at SoundCloud:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the value stream map: from X days to Y&lt;/li&gt;
&lt;li&gt;reorganizing teams into service teams&lt;/li&gt;
&lt;li&gt;conway&amp;rsquo;s law and teams being responsible for support. Also, being given full authority&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tags: phil-calcado, soundcloud, microservice, team-split, value-stream-mapping, conversion, reorganization&lt;/p&gt;

&lt;h2 id=&#34;lisp-is-still-a-secret-weapon&#34;&gt;Lisp is still a secret weapon&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://kep.io/is-lisp-still-a-secret-weapon/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Judd Keppel where he explains it is a good idea that Clojure / ClojureScript continues to be a secret, not known among developers. Cites the article &amp;lsquo;Beating the averages&amp;rsquo; by Paul Graham and the amount of available packages in npm, maven central, etc&lt;/p&gt;

&lt;p&gt;Tags: paul-graham, judd-keppel, clojure, clojurescript, weapon, developer&lt;/p&gt;

&lt;h2 id=&#34;perceptron&#34;&gt;Perceptron&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://en.wikipedia.org/wiki/Perceptron&#34; target=&#34;_blank&#34;&gt;this wikipedia&lt;/a&gt; article that explains the single-layer and multi-layer perceptron. First designed to be a machine (hardware), but later an algorithm for supervised machine learning. Worked by Minsky &amp;amp; Papert and invented by Frank Rosenblatt in 1958.&lt;/p&gt;

&lt;p&gt;Tags: peceptron, artificial-intelligence, machine-learning, frank-rosenblatt, 1958, marvin-minsky, seymour-papert&lt;/p&gt;

&lt;h2 id=&#34;is-c-a-strongly-typed-or-a-weakly-typed-language&#34;&gt;Is C# a strongly typed or a weakly typed language?&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://ericlippert.com/2012/10/15/is-c-a-strongly-typed-or-a-weakly-typed-language/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt;, in the form of a dialogue between Eric Lippert and himself about the C# language and its type system.&lt;/p&gt;

&lt;p&gt;Tags: type-system, c-sharp, eric-lippert, dialogue, strongly-typed, weakly-typed, language&lt;/p&gt;

&lt;h2 id=&#34;diseño-por-contratos-construyendo-software-confiable&#34;&gt;Diseño por contratos: construyendo software confiable&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.revista.unam.mx/vol.4/num5/art11/sep_art11.pdf&#34; target=&#34;_blank&#34;&gt;this paper&lt;/a&gt; that explains design by contract, based on the Hoare triplet, pre-post condition, method and class invariant. With examples in Eiffel, Java about a package sender company. Also explains pre/post with inheritance. By Gerardo Rossel and Andrea Manna. In Spanish.&lt;/p&gt;

&lt;p&gt;Tags: gerardo-rossel, andrea-manna, design-by-contract, unam-mx, eiffel, java, precondition, postcondition, trust, quality, hoare-triplet, method-invariant, class-invariant&lt;/p&gt;

&lt;h2 id=&#34;the-inevitable-return-of-cobol&#34;&gt;The Inevitable Return of COBOL&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.hackerrank.com/the-inevitable-return-of-cobol/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; that explains the current state of COBOL in programming and systems. Written by Ritika Trikha&lt;/p&gt;

&lt;p&gt;Tags: ritika-trikha, cobol, programming-language, retirement, median-age&lt;/p&gt;

&lt;h2 id=&#34;the-risky-eclipse-of-statisticians&#34;&gt;The Risky Eclipse of Statisticians&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.hackerrank.com/the-risky-eclipse-of-statisticians/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; where Ritika Trikha explains the current situation regarding Big Data and the statiscian jobs. How Big Data is in demand but the latter are not and what effects this might have.&lt;/p&gt;

&lt;p&gt;Tags: ritika-trikha, bootcamp, programming, hiring, big-data, analysis, statistics&lt;/p&gt;

&lt;h2 id=&#34;give-it-five-minutes&#34;&gt;Give it five minutes&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://signalvnoise.com/posts/3124-give-it-five-minutes&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Jason Fried where he explains why we should give ideas time to sink in and marinate, before dismissing them. Ideas are so fragile that it is better to let them live for a while before dismissing them. This also applies for thoughts (other people&amp;rsquo;s or your own).&lt;/p&gt;

&lt;p&gt;Tags: jason-fried, idea, think, startup, blue-hat, thinking-hat,  six-thinking-hats, red-hat&lt;/p&gt;

&lt;h2 id=&#34;reading-clojure-stacktraces&#34;&gt;Reading Clojure Stacktraces&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.jayfields.com/2012/06/reading-clojure-stacktraces.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Jay Fields on reading clojure stacktraces. Very similar to &amp;ldquo;Clojure Stack Traces for the Uninitiated&amp;rdquo;&lt;/p&gt;

&lt;p&gt;Tags: jay-fields, clojure, stacktrace&lt;/p&gt;

&lt;h2 id=&#34;clojure-stack-traces-for-the-uninitiated&#34;&gt;Clojure Stack Traces for the Uninitiated&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://blog.8thlight.com/connor-mendenhall/2014/09/12/clojure-stacktraces.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; on how to interpret clojure stacktraces. Written by Connor Mendenhall&lt;/p&gt;

&lt;p&gt;Tags: connor-mendenhall, clojure, stacktrace&lt;/p&gt;

&lt;h2 id=&#34;javascript-type-inference&#34;&gt;JavaScript type inference&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve found (and played) with &lt;a href=&#34;http://www.ccs.neu.edu/home/dimvar/jstypes.html&#34; target=&#34;_blank&#34;&gt;this JavaScript type inference engine&lt;/a&gt;. Written in Javascript (and available online). Written by Dimitrios Vardoulakis.&lt;/p&gt;

&lt;p&gt;Tags: javascript-type-inference, type-inference, type-inference-algorithm, dimitrios-vardoulakis, cfa2&lt;/p&gt;

&lt;h2 id=&#34;alternatives-to-boolean-parameters&#34;&gt;Alternatives to boolean parameters&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://blog.8thlight.com/dariusz-pasciak/2015/05/28/alternatives-to-boolean-parameters.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; explaining alternatives to sending a boolean parameter to decide on the contents of the function. Written by Dariusz Pasciak&lt;/p&gt;

&lt;p&gt;As I heard some time ago, if a function receives a boolean to decide on what to do, it will for sure have more than one responsibility: one for the false value and one for the true value.&lt;/p&gt;

&lt;p&gt;Tags: dariusz-pasciak, boolean, srp, boolean-parameter&lt;/p&gt;

&lt;h2 id=&#34;why-are-web-uploads-so-painful&#34;&gt;Why Are Web Uploads So Painful?&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.codinghorror.com/why-are-web-uploads-so-painful/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; on web uploads being painful. By Jeff Atwood. The screenshots feel old (2007) and some of the problems have already been solved.&lt;/p&gt;

&lt;p&gt;Tags: jeff-atwood, article, upload, browser&lt;/p&gt;

&lt;h2 id=&#34;can-your-team-pass-the-elevator-test&#34;&gt;Can Your Team Pass The Elevator Test?&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.codinghorror.com/can-your-team-pass-the-elevator-test/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; on the elevator test by Jeff Atwood.&lt;/p&gt;

&lt;p&gt;Tags: jeff-atwood, article, elevator-test, assumption, microsoft-bob, vision, product, feature&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Self-Study in August 2015</title>
      <link>https://alvarogarcia7.github.io/blog/2015/08/02/self-study-in-august-2015/</link>
      <pubDate>Sun, 02 Aug 2015 21:45:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/08/02/self-study-in-august-2015/</guid>
      <description>

&lt;h2 id=&#34;humble-object&#34;&gt;Humble Object&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read the &lt;a href=&#34;http://xunitpatterns.com/Humble%20Object.html&#34; target=&#34;_blank&#34;&gt;Humble Object&lt;/a&gt; list of patterns, by Gerard Meszaros, including:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;humble dialog&lt;/li&gt;
&lt;li&gt;humble executable&lt;/li&gt;
&lt;li&gt;humble transaction controller&lt;/li&gt;
&lt;li&gt;humble container adapter&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tags: pattern, gerard-meszaros&lt;/p&gt;

&lt;h2 id=&#34;how-you-know&#34;&gt;How you know&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve reread &lt;a href=&#34;http://www.paulgraham.com/know.html&#34; target=&#34;_blank&#34;&gt;this small essay&lt;/a&gt; by Paul Graham on storing information in our heads, based on the context. On the importance of rereading, to add more contexts to the initial one.&lt;/p&gt;

&lt;p&gt;Tags: paul-graham, reread, read&lt;/p&gt;

&lt;h2 id=&#34;protected-variation-the-importance-of-being-closed&#34;&gt;Protected Variation: The Importance of Being Closed&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.martinfowler.com/ieeeSoftware/protectedVariation.pdf&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Craig Larman in the magazine IEEE Software &amp;gt; Design.&lt;/p&gt;

&lt;p&gt;Discusses Information Hiding, Protected Variation and the Open-Closed Principle.&lt;/p&gt;

&lt;p&gt;Tags: craig-larman, ocp, open-closed principle, design, information-hiding, ih, protected-variation, pv,&lt;/p&gt;

&lt;h2 id=&#34;lambda-javascript-micro-services-on-aws&#34;&gt;Lambda, Javascript Micro-Services on AWS&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.jayway.com/2014/12/18/lambda-javascript-micro-services-aws/&#34; target=&#34;_blank&#34;&gt;this post&lt;/a&gt; explaining how to deploy a microservice on AWS on top of Lambda. Written by Anders Janmyr&lt;/p&gt;

&lt;p&gt;The cool thing is that you get billed by milliseconds!&lt;/p&gt;

&lt;p&gt;Tags: anders-janmyr, devops, microservice, lambda, aws&lt;/p&gt;

&lt;h2 id=&#34;migrating-to-clojure-so-much-fn&#34;&gt;Migrating To Clojure. So Much Fn&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched &lt;a href=&#34;https://www.youtube.com/watch?v=Hv4slaRydRM&#34; target=&#34;_blank&#34;&gt;this talk&lt;/a&gt; by Jan Stępień where he talks about his experience on migrating part of an application to clojure from ruby on rails&lt;/p&gt;

&lt;p&gt;Tags: jan-stepien, clojure, migration, ruby-on-rails, talk, wrocloverb&lt;/p&gt;

&lt;h2 id=&#34;te-recomiendo-escribir-en-un-blog&#34;&gt;Te recomiendo escribir en un blog&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.carlosble.com/2015/07/te-recomiendo-escribir-en-un-blog/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; from Carlos Blé in which he recommends writing a blog, on things we discover along the way. (Spanish)&lt;/p&gt;

&lt;p&gt;Tags: carlos-ble, meta, blog, long-way&lt;/p&gt;

&lt;h2 id=&#34;we-need-enough-technical-debt&#34;&gt;We need enough technical debt&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://blog.svpino.com/2015/08/05/we-need-enough-technical-debt&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; on why we need to accumulate a bit of technical debt, as a way of being less perfectionist and deliver more features / value to our stakeholders. Written by Santiago L. Valdarrama.&lt;/p&gt;

&lt;p&gt;Tags: santiago-valdarrama, technical-debt, perfectionism&lt;/p&gt;

&lt;h2 id=&#34;escribe-mejores-tests-en-javascript&#34;&gt;Escribe mejores tests en Javascript&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://carlosvillu.com/escribe-mejores-tests-en-javascript/&#34; target=&#34;_blank&#34;&gt;this list&lt;/a&gt; of tips to write better javascript tests (Spanish). By Carlos Villuendas&lt;/p&gt;

&lt;p&gt;Tags: carlos-villuendas, javascript, test&lt;/p&gt;

&lt;h2 id=&#34;down-the-rabbit-hole&#34;&gt;Down the Rabbit Hole&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://github.com/brettwooldridge/HikariCP/wiki/Down-the-Rabbit-Hole&#34; target=&#34;_blank&#34;&gt;this wiki&lt;/a&gt; page on how to tune some aspects of the server hotspot JVM, by Brett Wooldridge&lt;/p&gt;

&lt;p&gt;Tags: performance, jvm, hotspot, inline, bytecode, brett-wooldridge&lt;/p&gt;

&lt;h2 id=&#34;xp-manchester-lightning-talks-2015-live-broadcast&#34;&gt;XP Manchester Lightning Talks 2015 Live broadcast&lt;/h2&gt;

&lt;p&gt;I have watched the first two &lt;a href=&#34;https://www.youtube.com/watch?v=VD4UEW2i7hU&#34; target=&#34;_blank&#34;&gt;lightning talks&lt;/a&gt; from XP Manchester, edition number 61.&lt;/p&gt;

&lt;p&gt;Tags: lightning-talk, broadcast, simplicity, manchester, 2015&lt;/p&gt;

&lt;h2 id=&#34;counting-hash-collisions-with-the-birthday-paradox&#34;&gt;Counting hash collisions with the birthday paradox&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://matt.might.net/articles/counting-hash-collisions/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; on the birthday paradox, or the percentage of chance of people sharing the same birthday. This could be applied to hash function, as the title says, but is not included in the article. Written by Matt Might&lt;/p&gt;

&lt;h2 id=&#34;why-i-m-the-best-programmer-in-the-world&#34;&gt;Why I&amp;rsquo;m The Best Programmer In The World*&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.codinghorror.com/why-im-the-best-programmer-in-the-world/&#34; target=&#34;_blank&#34;&gt;this ironically-titled article&lt;/a&gt; by Jeff Atwood on humility and how to improve as a programmer.&lt;/p&gt;

&lt;p&gt;Tags: jeff-atwood&lt;/p&gt;

&lt;h2 id=&#34;the-key-to-giving-and-receiving-negative-feedback&#34;&gt;The Key to Giving and Receiving Negative Feedback&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://hbr.org/2015/08/the-key-to-giving-and-receiving-negative-feedback?&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Joseph Grenny about how to give and receive negative feedback. It is exemplified by the plant manager who was expecting another kind of feedback from his subordinates and was surprised by their negative feedback.&lt;/p&gt;

&lt;p&gt;Tags: joseph-grenny, negative-feedback, feedback, by-example&lt;/p&gt;

&lt;h2 id=&#34;testing-clojure-web-applications-with-kerodon&#34;&gt;Testing Clojure web applications with Kerodon&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://semaphoreci.com/community/tutorials/testing-clojure-web-applications-with-kerodon&#34; target=&#34;_blank&#34;&gt;this guide&lt;/a&gt; on how to test compojure-based applications with kerodon. Written by Nebojša Stričević&lt;/p&gt;

&lt;p&gt;Tags: nebojsa-stricevic, compojure, kerodon, clojure, testing, guide&lt;/p&gt;

&lt;h2 id=&#34;using-the-option-type-effectively&#34;&gt;Using The Option Type Effectively&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://blog.8thlight.com/uku-taht/2015/04/29/using-the-option-type-effectively.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; on how to use the &lt;code&gt;Option&lt;/code&gt; type (in rust), similar to &lt;code&gt;Optional&lt;/code&gt; in java or &lt;code&gt;Maybe&lt;/code&gt; in haskell. Written by Uku Taht.&lt;/p&gt;

&lt;p&gt;Tags: uku-taht, option, maybe, optional, rust&lt;/p&gt;

&lt;h2 id=&#34;when-should-you-think&#34;&gt;When Should You Think?&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://blog.8thlight.com/uncle-bob/2014/03/11/when-to-think.html&#34; target=&#34;_blank&#34;&gt;this post&lt;/a&gt; by Robert C Martin on when to think and the hypothesis that TDD does not allow you to think before coding.&lt;/p&gt;

&lt;p&gt;Tags: tdd, robert-c-martin, design, hypothesis&lt;/p&gt;

&lt;h2 id=&#34;orthogonal-latin-squares-an-application-of-experiment-design-to-compiler-testing&#34;&gt;Orthogonal latin squares: an application of experiment design to compiler testing&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://barbie.uta.edu/~mehra/20_an%20application%20of%20experiment%20design%20to%20compiler%20testing.pdf&#34; target=&#34;_blank&#34;&gt;this paper&lt;/a&gt; by Robert Mandl on techniques that can be applied to reduce the burden of exhaustive testing to compilers. Preferring &amp;ldquo;surely all relevant distinct combinations&amp;rdquo; we can reduce the amount of testing. This paper tries to formalize the concept of &amp;ldquo;near-exhaustive testing&amp;rdquo;&lt;/p&gt;

&lt;p&gt;Tags: latin-square, robert-mandl, compiler, testing, near-exhaustive-testing, optimization, exhaustive-testing&lt;/p&gt;

&lt;p&gt;##  Practical Type System Benefits&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://themonadreader.files.wordpress.com/2014/04/nccb.pdf&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Neil Brown on benefits of the type system, with examples in haskell. He goes on to explore the benefits of involving the type-checker at compile time to remove type errors and ease the programming effort:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I find that several problems in Haskell can be solved by involving the type system
further: The trick is to involve the type system in ways that provide a big benefit
for the cost, but not going so far that the type system gets in the way of code
that you know &amp;ndash;but can’t easily prove to the compiler&amp;ndash; is safe&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I&amp;rsquo;ve also learned the concept of the quasi-quoter: similar to a preprocessor, executed at compile time and type-checked&lt;/p&gt;

&lt;p&gt;Tags: neil-brown, quote, quasi-quoter, preprocessor, haskell, monad-reader&lt;/p&gt;

&lt;h2 id=&#34;clojurescript-and-the-blub-paradox&#34;&gt;ClojureScript and the Blub Paradox&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article comparing javascript and clojurescript using the fizzbuzz kata. There is a nice example of the pattern matching for the cases (i.e. &amp;ldquo;switch&amp;rdquo;) of the fizz, buzz. Written by Nate Wildermuth&lt;/p&gt;

&lt;p&gt;Tags: clojurescript, javascript, fizzbuzz, kata, nate-wildermuth&lt;/p&gt;

&lt;h2 id=&#34;no-malinterpretes-tu-carrera&#34;&gt;No malinterpretes tu carrera&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.carlosble.com/2011/02/no-malinterpretes-tu-carrera/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; on (not) changing careers from programmer to designer, analyst, team manager. About the programmer&amp;rsquo;s passion and why not to misinterpret your career. Written by Carlos Blé. In Spanish.&lt;/p&gt;

&lt;p&gt;Tags: carlos-ble, career, programming, management, career-change&lt;/p&gt;

&lt;h2 id=&#34;just-haskell-or-nothing&#34;&gt;Just Haskell or Nothing&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://cheecheeo.github.io/just_haskell_or_nothing.html&#34; target=&#34;_blank&#34;&gt;these slides&lt;/a&gt; on packaging values in (Just a) or Nothing for possibly failed computations in haskell. Written by John Chee&lt;/p&gt;

&lt;p&gt;Tags: john-chee, haskell, just, nothing, maybe, functor&lt;/p&gt;

&lt;h2 id=&#34;tracking-joy-at-work&#34;&gt;Tracking Joy at Work&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://begriffs.com/posts/2015-03-15-tracking-joy-at-work.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; about quantifying happiness at the office (or at work). Joe Nelson, the author of the article, uses the quantifying method described int the book &lt;a href=&#34;http://www.amazon.com/Experience-Sampling-Method-Measuring-Everyday/dp/1412925576/&#34; target=&#34;_blank&#34;&gt;Experience Sampling Method&lt;/a&gt; (&lt;a href=&#34;https://en.wikipedia.org/wiki/Experience_sampling_method&#34; target=&#34;_blank&#34;&gt;wikipedia page&lt;/a&gt;) by Hektner, Schmidt, Csikszentmihalyi.&lt;/p&gt;

&lt;p&gt;The last one, not coincidentally is the author of &lt;a href=&#34;http://www.amazon.com/Flow-The-Psychology-Optimal-Experience/dp/0061339202&#34; target=&#34;_blank&#34;&gt;Flow: The Psychology of Optimal Experience&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Tags: mihaly-csikszentmihalyi, flow, quantification, data, experience-sampling, article, joe-nelson&lt;/p&gt;

&lt;h2 id=&#34;going-write-only&#34;&gt;Going &amp;ldquo;Write-Only&amp;rdquo;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://begriffs.com/posts/2015-04-20-going-write-only.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Joe Nelson on going &amp;ldquo;write-only&amp;rdquo; on social media, blogs, news, etc, as opposed to read-only (only consuming media) or read-write (consuming and producing). He cites another programmer, &lt;a href=&#34;http://joey.hess.usesthis.com/&#34; target=&#34;_blank&#34;&gt;Joey Hess&lt;/a&gt; and about the quality and durability of your work.&lt;/p&gt;

&lt;p&gt;Tags: article, joe-nelson, write-only, social-media, reading, philosophy, thoreau, nietzsche, joey-hess&lt;/p&gt;

&lt;h2 id=&#34;create-a-static-site-with-hakyll-github-and-travis-ci&#34;&gt;Create a static site with Hakyll, Github and Travis CI&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://begriffs.com/posts/2014-08-12-create-static-site-with-hakyll-github.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; on how to create your blog with hakyll and travis ci. Written by Joe Nelson&lt;/p&gt;

&lt;p&gt;Travis ci is used to do continuous integration and automatically deploy each commit to production (github pages).&lt;/p&gt;

&lt;p&gt;Tags: hakyll, haskell, joe-nelson, meta, blog, continuous-deployment, github, github-pages, travis-ci&lt;/p&gt;

&lt;h2 id=&#34;falling-in-love-with-computer-science&#34;&gt;Falling in Love with Computer Science&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched &lt;a href=&#34;https://www.youtube.com/watch?v=haxusGuUyt4&#34; target=&#34;_blank&#34;&gt;this video&lt;/a&gt; by Kathy Pham, an American that discovered her passion, her love to computer science a few years ago. She tells the events around computer science from the beginning of college to the current moment.&lt;/p&gt;

&lt;p&gt;Tags: kathy-pham, passion, love, computer-science, autobiography, time-lapse, google-developers&lt;/p&gt;

&lt;h2 id=&#34;duck-typing&#34;&gt;Duck Typing&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched &lt;a href=&#34;https://www.youtube.com/watch?v=h0rTF__RNo4&#34; target=&#34;_blank&#34;&gt;this video&lt;/a&gt; by Dan Grossman, part of the &lt;a href=&#34;https://www.coursera.org/course/proglang&#34; target=&#34;_blank&#34;&gt;&amp;ldquo;Programming Languages&amp;rdquo; MOOC&lt;/a&gt;, in which he explains what is a Duck Type and how to use (and abuse) them in ruby.&lt;/p&gt;

&lt;p&gt;Tags: ruby, dan-grossman, mooc, mooc-programming-languages&lt;/p&gt;

&lt;h2 id=&#34;not-so-private-clojure-functions&#34;&gt;Not-So-Private Clojure Functions&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://christophermaier.name/blog/2011/04/30/not-so-private-clojure-functions&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; explaining how to bypass private functions in clojure: either create a lambda or create a different namespace. Written by Christopher Maier&lt;/p&gt;

&lt;p&gt;Tags: private-variable, clojure, testing, joy-of-clojure, christopher-maier, private-function, namespace&lt;/p&gt;

&lt;h2 id=&#34;frege-and-clojure&#34;&gt;Frege (and Clojure)&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://seancorfield.github.io/blog/2015/02/13/frege-and-clojure/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; that tells the Pragmatic Programmer&amp;rsquo;s advice to learn a new language every year and the author (Sean Corfield) explains his trajectory learning them. He also cites the Lein plugin he&amp;rsquo;s built: &lt;code&gt;lein-fregec&lt;/code&gt; and how to connect clojure and frege (a.k.a JVM&amp;rsquo;s haskell).&lt;/p&gt;

&lt;p&gt;Tags: haskell, frege, jvm, clojure, ffi, pragmatic-programmer, advice, lein-fregec,  sean-corfield, comparison&lt;/p&gt;

&lt;h2 id=&#34;two-months-early-300k-under-budget&#34;&gt;Two months early. 300k under budget&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://thoughtworks.github.io/p2/issue09/two-months-early/&#34; target=&#34;_blank&#34;&gt;the tale&lt;/a&gt; of a Thoughtworks Project Manager who convinced his client to start using clojure to deliver a custom-made CMS. Written by Dave Elliman.&lt;/p&gt;

&lt;p&gt;Tags: dave-elliman, thoughtworks, project-manager, clojure, cms, microservice&lt;/p&gt;

&lt;h2 id=&#34;convince-your-boss-to-use-clojure&#34;&gt;Convince your boss to use Clojure&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.lispcast.com/convince-your-boss-to-use-clojure&#34; target=&#34;_blank&#34;&gt;this guide&lt;/a&gt; by Eric Normand on how to convince your boss or your company to start using clojure.&lt;/p&gt;

&lt;p&gt;Tags: company, clojure, eric-normand, how-to, guide&lt;/p&gt;

&lt;h2 id=&#34;a-brief-introduction-to-prolog&#34;&gt;A brief introduction to Prolog&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://docs.google.com/presentation/d/1NAUo8nWLfNvvW3Wb7HJMunljjDJbzu7mo-5twKeGDvc/edit#slide=id.g63daf4745_0_56&#34; target=&#34;_blank&#34;&gt;these slides&lt;/a&gt; about a brief introduction to prolog and how to do web development in it. By Jaelle Scheuerman&lt;/p&gt;

&lt;p&gt;Tags: jaelle-scheuerman, prolog, web-development, rest, slide&lt;/p&gt;

&lt;h2 id=&#34;arrayzing-the-javascript-array-cheatsheet&#34;&gt;Arrayzing - The JavaScript array cheatsheet&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://gist.github.com/ourmaninamsterdam/1be9a5590c9cf4a0ab42&#34; target=&#34;_blank&#34;&gt;this cheatsheet&lt;/a&gt; for javascript arrays. Written by Justin Perry&lt;/p&gt;

&lt;p&gt;Tags: cheatsheet, array, javascript, gist, justin-perry&lt;/p&gt;

&lt;h2 id=&#34;some-words-on-lazy-evaluation-and-sharing&#34;&gt;Some words on lazy evaluation and sharing&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://pseudo.fixme.fi/~opqdonut/blog/Some_words_on_lazy_evaluation_and_sharing.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; comparing the &lt;code&gt;fix&lt;/code&gt; definition with a hand-made one and its &amp;ldquo;sharing&amp;rdquo; problems. Written by Joel E. Kaasinen&lt;/p&gt;

&lt;p&gt;Tags: joel-kaasinen, haskell, fix, sharing, non-strictness, lazy-evaluation&lt;/p&gt;

&lt;h2 id=&#34;hammock-driven-development&#34;&gt;Hammock Driven Development&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched &lt;a href=&#34;https://www.youtube.com/watch?v=f84n5oFoZBc&#34; target=&#34;_blank&#34;&gt;this video&lt;/a&gt; by Rich Hickey. A few notes:&lt;/p&gt;

&lt;p&gt;A: identifying a problem that we&amp;rsquo;re trying to solve&lt;/p&gt;

&lt;p&gt;D: assessing if the proposed solution solves the problem&lt;/p&gt;

&lt;p&gt;the union of the features is not the purpose of the product / is not the product&lt;/p&gt;

&lt;p&gt;proramming is not completing features&lt;/p&gt;

&lt;p&gt;avoiding problems /= solving problems&lt;/p&gt;

&lt;p&gt;book: how to solve it - G. Polya. Practices &amp;amp; techniques for solving mathematic problems&lt;/p&gt;

&lt;p&gt;How to solve the problem&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;state the problem&lt;/li&gt;
&lt;li&gt;understand the problem:

&lt;ul&gt;
&lt;li&gt;what do you know: facts, context, constraints.&lt;/li&gt;
&lt;li&gt;what do you don&amp;rsquo;t know&lt;/li&gt;
&lt;li&gt;are there related problems? solutions to related problems. find an analogy: starting from scratch vs incremental step&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;be discerning&lt;/li&gt;
&lt;li&gt;more input, better output:

&lt;ul&gt;
&lt;li&gt;read about your domain problem, research papers (maybe ACM)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;tradeoffs:

&lt;ul&gt;
&lt;li&gt;find at least two options (ups and downs) to compare before taking a decision&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Focus time for programmers like alone time for kids. Hammock time is important mind&amp;rsquo;s eye time&lt;/p&gt;

&lt;p&gt;Waking mind:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;critical thinking&lt;/li&gt;
&lt;li&gt;analysis&lt;/li&gt;
&lt;li&gt;tactics&lt;/li&gt;
&lt;li&gt;prone to local maxima&lt;/li&gt;
&lt;li&gt;feed work to background mind&lt;/li&gt;
&lt;li&gt;analyze its products&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Background mind:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;making connections&lt;/li&gt;
&lt;li&gt;synthesis&lt;/li&gt;
&lt;li&gt;strategy&lt;/li&gt;
&lt;li&gt;abstracts, analogies&lt;/li&gt;
&lt;li&gt;solves most non-trivial problems&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;loading it: work it hard in the waking mind to be included in the background mind&lt;/p&gt;

&lt;p&gt;abstraction = software strategy&lt;/p&gt;

&lt;p&gt;tip: small answer is better than big answer (occam&amp;rsquo;s razor?)​&lt;/p&gt;

&lt;p&gt;Tags: rich-hickey, hammock-driven-development, background-mind, waking-mind, solve-problem, george-polya, book, analysis, design, talk&lt;/p&gt;

&lt;h2 id=&#34;parallelism-concurrency&#34;&gt;Parallelism /= Concurrency&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://ghcmutterings.wordpress.com/2009/10/06/parallelism-concurrency/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; on the differences between parallelism and concurrency, with examples in the haskell compiler GHC. Written by &lt;a href=&#34;https://ghcmutterings.wordpress.com/author/simonmar/&#34; target=&#34;_blank&#34;&gt;simonmar&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tags: haskell, concurrency, parallelism, ghc, simonmar, comparison&lt;/p&gt;

&lt;h2 id=&#34;parallelism-vs-concurrency&#34;&gt;Parallelism vs. Concurrency&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://wiki.haskell.org/Parallelism_vs._Concurrency&#34; target=&#34;_blank&#34;&gt;this page&lt;/a&gt; from the haskell wiki.&lt;/p&gt;

&lt;p&gt;Tags: haskell, concurrency, parallelism, ghc, comparison&lt;/p&gt;

&lt;h2 id=&#34;writing-code-that-writes-code-with-hack-codegen&#34;&gt;Writing code that writes code — with Hack Codegen&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://code.facebook.com/posts/1624644147776541/writing-code-that-writes-code-with-hack-codegen/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; about metaprogramming (code that generates code) in PHP. Written by Alejandro Marcu.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve arrived to this from this tweet:&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; data-cards=&#34;hidden&#34; lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;This is what happens when your programming language doesn&amp;#39;t have macros &lt;a href=&#34;https://t.co/ZfsEe2EJIj&#34;&gt;https://t.co/ZfsEe2EJIj&lt;/a&gt;. Yuck.&lt;/p&gt;&amp;mdash; David Nolen (@swannodette) &lt;a href=&#34;https://twitter.com/swannodette/status/634495099607613440&#34;&gt;August 20, 2015&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;Tags: alejandro-marcu, metaprogramming, php, macro, lisp, clojure&lt;/p&gt;

&lt;h2 id=&#34;how-katas-can-help-you-learn&#34;&gt;How katas can help you learn&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://codurance.com/2015/08/18/How-katas-can-help-you-learn/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; on learning from katas, with the example of the Roman Numerals kata in Objective-C. Written by Sandro Mancuso.&lt;/p&gt;

&lt;p&gt;Tags: sandro-mancuso, kata, learning, roman-numeral, objective-c&lt;/p&gt;

&lt;h2 id=&#34;java-8-definitive-guide-to-completablefuture&#34;&gt;Java 8: Definitive guide to CompletableFuture&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.nurkiewicz.com/2013/05/java-8-definitive-guide-to.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; about Java 8&amp;rsquo;s feature, the &lt;code&gt;CompletableFeature&lt;/code&gt;. Written by Tomasz Nurkiewicz&lt;/p&gt;

&lt;p&gt;Tags: tomasz-nurkiewicz, java-8, completable-future, future, non-blocking, reactive-programming&lt;/p&gt;

&lt;h2 id=&#34;are-you-making-these-10-ddd-mistakes&#34;&gt;Are You Making These 10 DDD Mistakes?&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://danielwhittaker.me/2015/07/05/are-you-making-these-10-ddd-mistakes/#&#34; target=&#34;_blank&#34;&gt;this infographic&lt;/a&gt; on 10 DDD common mistakes, by Daniel Whittaker.&lt;/p&gt;

&lt;p&gt;Tags: ddd, daniel-whittaker, bounded-context, ubiquitous-language, infographic&lt;/p&gt;

&lt;h2 id=&#34;haste-full-stack-haskell-for-non-phd-candidates&#34;&gt;Haste: Full-Stack Haskell for Non-PhD Candidates&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched &lt;a href=&#34;https://www.youtube.com/watch?v=3v03NFcyvzc&#34; target=&#34;_blank&#34;&gt;this talk&lt;/a&gt; at the Strange Loop Conference 2014 about Haste language, a haskell version that compiles to javascript, therefore letting you write haskell in the browser. By Erin Swenson-Healey and James Cooper&lt;/p&gt;

&lt;p&gt;In this talk they recommend the &lt;a href=&#34;http://www.seas.upenn.edu/~cis194/lectures.html&#34; target=&#34;_blank&#34;&gt;CIS194 course&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tags: haste, haskell, james-cooper, erin-swenson-healey, strange-loop, 2014, talk&lt;/p&gt;

&lt;h2 id=&#34;a-year-of-haskell&#34;&gt;A Year of Haskell&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched &lt;a href=&#34;https://www.youtube.com/watch?v=wZ0RQG3mFPw&#34; target=&#34;_blank&#34;&gt;this talk&lt;/a&gt; about experiences using haskell professionally, by the American Justin Leitgeb in a Equatorian company in Quito, Stack Builders. He goes on to explain the haskell language in comparison to ruby on rails, what he mostly used with his clients.&lt;/p&gt;

&lt;p&gt;Also explains what sells and doesn&amp;rsquo;t (mostly productivity, not security) and gives pointer for applying it to a company&lt;/p&gt;

&lt;p&gt;Tags: justin-leitgeb, ecuador, haskell, stack-builders, lambda-days, 2015, client, professional, consulting, consultancy&lt;/p&gt;

&lt;h2 id=&#34;a-taste-of-haskell&#34;&gt;A Taste of Haskell&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched a lesson by Simon Peyton-Jones, that introduces haskell to experienced programmers, not in the language but in programming in general. At the conference OSCON 2007&lt;/p&gt;

&lt;p&gt;Links: &lt;a href=&#34;https://www.youtube.com/watch?v=jLj1QV11o9g&#34; target=&#34;_blank&#34;&gt;part 1&lt;/a&gt;, &lt;a href=&#34;https://www.youtube.com/watch?v=IqXTUbdLig0&#34; target=&#34;_blank&#34;&gt;part 2&lt;/a&gt;, &lt;a href=&#34;http://www.slideshare.net/oscon2007/os-peytonjones&#34; target=&#34;_blank&#34;&gt;slides&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tags: oscon, 2007, haskell, introduction, lesson, simon-peyton-jones&lt;/p&gt;

&lt;h2 id=&#34;programming-why-haskell-is-great&#34;&gt;Programming - Why Haskell is Great&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve seen &lt;a href=&#34;https://www.youtube.com/watch?v=RqvCNb7fKsg&#34; target=&#34;_blank&#34;&gt;this video&lt;/a&gt; introducing some features of haskell. The most basic features, the REPL,  function composition. By FrungyKing&lt;/p&gt;

&lt;p&gt;Tags: haskell, introduction, video, screencast, repl, frungyking&lt;/p&gt;

&lt;h2 id=&#34;history-of-haskell-being-lazy-with-class&#34;&gt;History of Haskell: being lazy with class&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched &lt;a href=&#34;https://www.youtube.com/watch?v=3bjXGrycMhQ&#34; target=&#34;_blank&#34;&gt;this video&lt;/a&gt; by Simon Peyton-Jones at the &amp;ldquo;History of Programming Languages Conference III&amp;rdquo; which explains how the language was designed and written, a language timeline, what options they took, how they decided about monadic IO, etc.&lt;/p&gt;

&lt;p&gt;Tags: simon-peyton-jones, 2007, history-of-programming-languages-conference, haskell, talk&lt;/p&gt;

&lt;h2 id=&#34;the-humble-programmer&#34;&gt;The Humble Programmer&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.cs.utexas.edu/users/EWD/transcriptions/EWD03xx/EWD340.html&#34; target=&#34;_blank&#34;&gt;this EWD&lt;/a&gt; about the necessary humbleness for being a programmer and the slow expansion of the trade, as compared to hardware engineers.&lt;/p&gt;

&lt;p&gt;He cites six reasons for preferring to be a humble programmer:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the programmer only needs to manage simple programs&lt;/li&gt;
&lt;li&gt;simple programs imply reducing the search space&lt;/li&gt;
&lt;li&gt;construct a program from a mathematical proof instead of test its properties after building the software. see quote below&lt;/li&gt;
&lt;li&gt;a good abstraction can hide much complexity and difficulty&lt;/li&gt;
&lt;li&gt;the importance of the used tool in the final product&lt;/li&gt;
&lt;li&gt;&amp;ldquo;the only problems we can satisfactory solve are the ones that admit a factored solution&amp;rdquo;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In this essay I&amp;rsquo;ve found the idea of&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Testing shows the presence, not the absence of bugs&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;That &lt;a href=&#34;https://en.wikiquote.org/wiki/Edsger_W._Dijkstra&#34; target=&#34;_blank&#34;&gt;Wikiquote&lt;/a&gt; attributes to an earlier paper (in 1969). In this paper, the verbatim quote is:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;program testing can be a very effective way to show the presence of bugs, but is hopelessly inadequate for showing their absence.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This idea also connects to the &amp;ldquo;lower bounds&amp;rdquo; and &amp;ldquo;upper bounds&amp;rdquo; of program correctness expressed in the article &lt;a href=&#34;https://cdsmith.wordpress.com/2011/01/09/an-old-article-i-wrote/&#34; target=&#34;_blank&#34;&gt;An Old Article I Wrote&lt;/a&gt; which is about static types, by Cdsmith. Admittedly, much later, in 2008, so this idea could be inspired by the Dijkstra&amp;rsquo;s article.&lt;/p&gt;

&lt;p&gt;Tags: edsger-dijkstra, ewd, dijkstra, humble-programmer, essay, comparison, absence-of-bugs, quote&lt;/p&gt;

&lt;h2 id=&#34;building-a-link-shortener-with-snaplets&#34;&gt;Building a Link Shortener with Snaplets&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve seen &lt;a href=&#34;https://vimeo.com/59109358&#34; target=&#34;_blank&#34;&gt;this video&lt;/a&gt; of how to build a link shortener webapp in haskell with the framework snap. By Ryan Trinkle. Found it in the &lt;a href=&#34;http://snapframework.com/docs&#34; target=&#34;_blank&#34;&gt;snap docs&lt;/a&gt; page.&lt;/p&gt;

&lt;p&gt;Tags: snap, haskell, link-shortener, talk, webapp, framework, ryan-trinkle&lt;/p&gt;

&lt;h2 id=&#34;comparing-haskell-web-frameworks&#34;&gt;Comparing Haskell Web Frameworks&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.edofic.com/posts/2014-02-23-haskell-web.html&#34; target=&#34;_blank&#34;&gt;this comparison&lt;/a&gt; of haskell web frameworks, by Andraz Bajt (a.k.a, edofic)&lt;/p&gt;

&lt;p&gt;Tags: andraz-bajt, edofic, haskell, web-framework, framework, comparison&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>