<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>The long way through Software Craftsmanship</title>
    <link>https://alvarogarcia7.github.io/categories/rule/index.xml</link>
    <description>Recent content on The long way through Software Craftsmanship</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="https://alvarogarcia7.github.io/categories/rule/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Self-Study in March 2019</title>
      <link>https://alvarogarcia7.github.io/blog/2019/03/01/self-study-march-2019/</link>
      <pubDate>Fri, 01 Mar 2019 10:32:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2019/03/01/self-study-march-2019/</guid>
      <description>

&lt;h2 id=&#34;nodejs-logging-made-right-https-itnext-io-nodejs-logging-made-right-117a19e8b4ce&#34;&gt;&lt;a href=&#34;https://itnext.io/nodejs-logging-made-right-117a19e8b4ce&#34; target=&#34;_blank&#34;&gt;NodeJS logging made right&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Explains logging and tracing in nodejs.&lt;/p&gt;

&lt;p&gt;Usage of thread-local storage, trace id, continuation local storage.&lt;/p&gt;

&lt;p&gt;Tags: nodejs, logging, tracing, thread-local, thread-local-storage, trace-id, continuation-local-storage, cls, tls, proxy, hook&lt;/p&gt;

&lt;p&gt;Id: 5bed4596-3f5b-11e9-83e1-0242ac110005
Read: Tue, 05 Mar 2019 15:28:42 +0000&lt;/p&gt;

&lt;h2 id=&#34;web-design-3-0-when-your-web-design-really-matters-https-nicepage-com-doc-article-20348-web-design-3-0-when-your-web-design-really-matters&#34;&gt;&lt;a href=&#34;https://nicepage.com/doc/article/20348/web-design-3-0-when-your-web-design-really-matters&#34; target=&#34;_blank&#34;&gt;Web Design 3.0: When Your Web Design Really Matters&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;In Chapter 1, we will find out how Web Design is changing. Also, you will learn about the birth of the new generation of web designers, who are designing web pages in Web Design 3.0.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;In Chapter 2, we will talk about website builders that are lagging behind the trends and slowing down the Web Design evolution.&lt;/p&gt;

&lt;p&gt;In Chapter 3, you will learn how to create modern web designs quickly and easily in a new way.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Has walk through the different design phases, techniques; both in press (printed) design as in web design.&lt;/p&gt;

&lt;p&gt;Explains some web builders.&lt;/p&gt;

&lt;p&gt;Explains the concept of the web 3.0:&lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Free positioning.&lt;/li&gt;
&lt;li&gt;Element overlapping.&lt;/li&gt;
&lt;li&gt;Breaking the limitations of Bootstrap-like Grids.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;States the different needs for webmasters and designers:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Web Designers need:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Free positioning&lt;/li&gt;
&lt;li&gt;Removing table constraints&lt;/li&gt;
&lt;li&gt;Layers&lt;/li&gt;
&lt;li&gt;Property Panel for elements&lt;/li&gt;
&lt;li&gt;Support for Windows and Mac OS&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Webmasters need:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Clean HTML and CSS&lt;/li&gt;
&lt;li&gt;Mobile device support&lt;/li&gt;
&lt;li&gt;WordPress and Joomla support&lt;/li&gt;
&lt;li&gt;Building websites online&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;Summary&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Website builders are lagging behind the rapidly changing Web Design world.&lt;/p&gt;

&lt;p&gt;The history of web design tools has involved several transitions. However, progress has stopped. There are numerous signs that the new transition must happen.&lt;/p&gt;

&lt;p&gt;There are separate markets for web designers and webmasters. Popular website builders do not support the main features of Web Design 3.0: free positioning, modern grids, and layers.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tags: comparison, web-design, print-design, web-builder, creativity, metaphor, grid-layout, bootstrap, flexibility, design, web-3.0, web-design-3.0, web-2.0, progression&lt;/p&gt;

&lt;p&gt;Id: 5101ce2e-3f5e-11e9-83d9-0242ac110005
Read: Tue, 05 Mar 2019 15:49:52 +0000&lt;/p&gt;

&lt;h2 id=&#34;gotify-a-self-hosted-push-notifications-service-https-news-ycombinator-com-item-id-19347848&#34;&gt;&lt;a href=&#34;https://news.ycombinator.com/item?id=19347848&#34; target=&#34;_blank&#34;&gt;Gotify – a self-hosted push-notifications service&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Tags: gotify, self-hosted, notification, notification-service, android, open-source&lt;/p&gt;

&lt;p&gt;Id: e839c82a-4367-11e9-b34d-0242ac110007
Read: Sun, 10 Mar 2019 19:08:36 +0000&lt;/p&gt;

&lt;h2 id=&#34;ask-hn-how-to-speak-like-a-leader-not-like-an-engineer-https-news-ycombinator-com-item-id-19349676&#34;&gt;&lt;a href=&#34;https://news.ycombinator.com/item?id=19349676&#34; target=&#34;_blank&#34;&gt;Ask HN: How to speak like a leader, not like an engineer?&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Links and resources for speaking like a leader&lt;/p&gt;

&lt;p&gt;Tags: leader, engineer, comparison, change, public-speaking, speak, speaking, career-management, career-change, professional-growth, resource:&lt;/p&gt;

&lt;p&gt;Id: 1a478fc8-4368-11e9-b657-0242ac110007
Read: Sun, 10 Mar 2019 19:10:00 +0000&lt;/p&gt;

&lt;h2 id=&#34;archivebox-open-source-self-hosted-web-archive-https-news-ycombinator-com-item-id-19346985&#34;&gt;&lt;a href=&#34;https://news.ycombinator.com/item?id=19346985&#34; target=&#34;_blank&#34;&gt;ArchiveBox: Open-source self-hosted web archive&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Tools for archiving purposes. Has links to other sites:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/machawk1/warcreate&#34; target=&#34;_blank&#34;&gt;https://github.com/machawk1/warcreate&lt;/a&gt;
&lt;a href=&#34;https://getpolarized.io/&#34; target=&#34;_blank&#34;&gt;https://getpolarized.io/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tags: burtonator, web-archive, polarized, warch, warc, personal-knowledge-base&lt;/p&gt;

&lt;p&gt;Id: 4168161c-436e-11e9-aa0d-0242ac110007
Read: Sun, 10 Mar 2019 19:54:03 +0000&lt;/p&gt;

&lt;h2 id=&#34;ask-hn-as-a-freelancer-what-s-the-best-app-to-track-finances-https-news-ycombinator-com-item-id-19450331&#34;&gt;&lt;a href=&#34;https://news.ycombinator.com/item?id=19450331&#34; target=&#34;_blank&#34;&gt;Ask HN: As a freelancer, what&amp;rsquo;s the best app to track finances?&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Describes tools for finance for freelancers. Stresses the importance of time wealth&lt;/p&gt;

&lt;p&gt;Tags: time-management, money-management, freelance, tool, ask-hn, hackernews, finance, time-wealth, money-wealth&lt;/p&gt;

&lt;p&gt;Id: b74a6696-4c83-11e9-99bd-0242ac110005
Read: Fri, 22 Mar 2019 09:20:21 +0000&lt;/p&gt;

&lt;h2 id=&#34;what-i-learned-in-my-first-year-as-a-solo-founder-https-tik-dev-lessons-learned&#34;&gt;&lt;a href=&#34;https://tik.dev/lessons-learned&#34; target=&#34;_blank&#34;&gt;What I Learned in My First Year as a Solo Founder&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Learnings by a solo founder.&lt;/p&gt;

&lt;p&gt;Benefits of having a side project or side hustle&lt;/p&gt;

&lt;p&gt;Tags: side-hustle, side-business, learning, reflection, solo-founder, founder, revenue&lt;/p&gt;

&lt;p&gt;Id: f0dee42c-5142-11e9-9444-0242ac110006
Read: Thu, 28 Mar 2019 10:19:16 +0000&lt;/p&gt;

&lt;h2 id=&#34;write-tests-not-too-many-mostly-integration-https-kentcdodds-com-blog-write-tests&#34;&gt;&lt;a href=&#34;https://kentcdodds.com/blog/write-tests&#34; target=&#34;_blank&#34;&gt;Write tests. Not too many. Mostly integration.&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;This is a paraphrasing of some advice for healthy eating: &amp;lsquo;Eat food, not too much, mostly plants.&amp;rsquo; (Pollan)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Write tests.&lt;/p&gt;

&lt;p&gt;Often I find myself saving time when I put time in to write tests&lt;/p&gt;

&lt;p&gt;Not too many: you get diminishing returns on your tests as the coverage increases [&amp;hellip;]&lt;/p&gt;

&lt;p&gt;Mostly integration: as you move up the pyramid, the confidence quotient of each form of testing increases&lt;/p&gt;

&lt;p&gt;Integration tests strike a great balance on the trade-offs between confidence and speed/expense&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tags: unit-test, testing, test-pyramid, healthy-testing, advice, integration-test, quote, kent-c-dodds, analogy&lt;/p&gt;

&lt;p&gt;Id: d148d774-5144-11e9-94d8-0242ac110006
Read: Thu, 28 Mar 2019 10:32:42 +0000&lt;/p&gt;

&lt;h2 id=&#34;7-rules-for-eating-https-www-webmd-com-food-recipes-news-20090323-7-rules-for-eating&#34;&gt;&lt;a href=&#34;https://www.webmd.com/food-recipes/news/20090323/7-rules-for-eating&#34; target=&#34;_blank&#34;&gt;7 Rules for Eating&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;In this reference article, Michael Pollan explains his seven rules for eating:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Don&amp;rsquo;t eat anything your great grandmother wouldn&amp;rsquo;t recognize as food. &amp;ldquo;When you pick up that box of portable yogurt tubes, or eat something with 15 ingredients you can&amp;rsquo;t pronounce, ask yourself, &amp;ldquo;What are those things doing there?&amp;rdquo; Pollan says.&lt;/li&gt;
&lt;li&gt;Don’t eat anything with more than five ingredients, or ingredients you can&amp;rsquo;t pronounce.&lt;/li&gt;
&lt;li&gt;Stay out of the middle of the supermarket; shop on the perimeter of the store. Real food tends to be on the outer edge of the store near the loading docks, where it can be replaced with fresh foods when it goes bad.&lt;/li&gt;
&lt;li&gt;Don&amp;rsquo;t eat anything that won&amp;rsquo;t eventually rot. &amp;ldquo;There are exceptions &amp;ndash; honey &amp;ndash; but as a rule, things like Twinkies that never go bad aren&amp;rsquo;t food,&amp;rdquo; Pollan says.&lt;/li&gt;
&lt;li&gt;It is not just what you eat but how you eat. &amp;ldquo;Always leave the table a little hungry,&amp;rdquo; Pollan says. &amp;ldquo;Many cultures have rules that you stop eating before you are full. In Japan, they say eat until you are four-fifths full. Islamic culture has a similar rule, and in German culture they say, &amp;lsquo;Tie off the sack before it&amp;rsquo;s full.&amp;rsquo;&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Families traditionally ate together, around a table and not a TV, at regular meal times. It&amp;rsquo;s a good tradition. Enjoy meals with the people you love. &amp;ldquo;Remember when eating between meals felt wrong?&amp;rdquo; Pollan asks.&lt;/li&gt;
&lt;li&gt;Don&amp;rsquo;t buy food where you buy your gasoline. In the U.S., 20% of food is eaten in the car.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Also, four myths:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Food is a delivery vehicle for nutrients. What really matters isn&amp;rsquo;t broccoli but its fiber and antioxidants. If we get that right, we get our diet right. Foods kind of get in the way.&lt;/li&gt;
&lt;li&gt;We need experts to tell us how to eat. Nutrients are invisible and mysterious. &amp;ldquo;It is a little like religion,&amp;rdquo; Pollan said. &amp;ldquo;If a powerful entity is invisible, you need a priesthood to mediate your relation with food.&amp;rdquo;&lt;/li&gt;
&lt;li&gt;The whole point of eating is to maintain and promote bodily health. &amp;ldquo;You are either improving or ruining your health when you eat &amp;ndash; that is a very American idea,&amp;rdquo; Pollan says. &amp;ldquo;But there are many other reasons to eat food: pleasure, social community, identity, and ritual. Health is not the only thing going on on our plates.&amp;rdquo;&lt;/li&gt;
&lt;li&gt;There are evil foods and good foods. &amp;ldquo;At any given time there is an evil nutrient we try to drive like Satan from the food supply &amp;ndash; first it was saturated fats, then it was trans fat,&amp;rdquo; Pollan says. &amp;ldquo;Then there is the evil nutrient&amp;rsquo;s doppelganger, the blessed nutrient. If we get enough of that we, will be healthy and maybe live forever. It&amp;rsquo;s funny through history how the good and bad guys keep changing.&amp;rdquo;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This can all be summarized as &amp;ldquo;Eat food, not too much, mostly plants.&amp;rdquo;&lt;/p&gt;

&lt;p&gt;Tags: healthy-eating, michael-pollan, rule, advice, myth, analogy&lt;/p&gt;

&lt;p&gt;Id: 30ece1fc-5145-11e9-87de-0242ac110006
Read: Thu, 28 Mar 2019 10:35:22 +0000&lt;/p&gt;

&lt;h2 id=&#34;lean-testing-or-why-unit-tests-are-worse-than-you-think-https-blog-usejournal-com-lean-testing-or-why-unit-tests-are-worse-than-you-think-b6500139a009&#34;&gt;&lt;a href=&#34;https://blog.usejournal.com/lean-testing-or-why-unit-tests-are-worse-than-you-think-b6500139a009&#34; target=&#34;_blank&#34;&gt;Lean Testing or Why Unit Tests are Worse than You Think&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;This article puts testing in an economic perspective. Calls it lean testing&lt;/p&gt;

&lt;p&gt;Also references/paraphrases Michael Pollan&amp;rsquo;s Rules for eating ().&lt;/p&gt;

&lt;p&gt;Creates a testing trophy, a figure to explain the best testing pattern, replacing the testing pyramid&lt;/p&gt;

&lt;p&gt;Explains return on investment (ROI) on tests&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;integration tests provide the best balance of cost, speed and confidence&lt;/p&gt;

&lt;p&gt;Integration tests lie somewhere between unit tests and end-to-end tests so they provide the best balance. Therefore, they have the highest ROI.&lt;/p&gt;

&lt;p&gt;The main idea is to just not mock so much&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tags: economic-perspective, lean-testing, testing-trophy, testing-pyramid, return-on-investment, roi, critical-path, testing, unit-test, anti-architecture, architecture, maintenance&lt;/p&gt;

&lt;p&gt;Id: efe85d00-5147-11e9-87ce-0242ac110006
Read: Thu, 28 Mar 2019 10:55:02 +0000&lt;/p&gt;

&lt;h2 id=&#34;end-user-programming-https-www-inkandswitch-com-end-user-programming-html&#34;&gt;&lt;a href=&#34;https://www.inkandswitch.com/end-user-programming.html&#34; target=&#34;_blank&#34;&gt;End-user programming&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;In this article, the writer explains some of the end-user modifications to programs. Examples include: adding download capabilities to instagram, generating backups for files.&lt;/p&gt;

&lt;p&gt;On the other hand, applications (especially mobile) are tightly sealed, not allowing modification or extension. Even FOSS (free, open source software), modification implies the learning curve / entry barrier of having to setup, compile, debug the original program and modifications.&lt;/p&gt;

&lt;p&gt;Gives the example of the UNIX command line, as a programming environment. One that provides (one of) the best REPL examples.&lt;/p&gt;

&lt;p&gt;Characterizes spreadsheets as ad-hoc databases, programs; mostly created by domain experts (aka subject matter experts), than professional software engineers. Take into account that these hats are non-exclusive: a domain expert can also be a professional software engineer.&lt;/p&gt;

&lt;p&gt;The author tries to coin the term &amp;ldquo;end-user programming&amp;rdquo; to differentiate it from programming by professional software developers, who try to build general-purpose apps, to be used by thousands of people.&lt;/p&gt;

&lt;p&gt;This also means, that a professional software developer can be an &amp;ldquo;end-user programmer&amp;rdquo;, when creating solutions for themselves (limited user group), rather than for the general public. Maybe those one-off scripts that we create, are some kind of end-user programs. This is described in the article as well.&lt;/p&gt;

&lt;p&gt;Talks of the chasm the user has to cross in order to customize the behaviour of their software. This is related to working in a framework or a library, in the sense of &amp;lsquo;who keeps the control&amp;rsquo;. In an UNIX, filesystem environment, you keep the control.&lt;/p&gt;

&lt;p&gt;References &amp;ldquo;citizen developers&amp;rdquo; (&lt;a href=&#34;https://www.gartner.com/it-glossary/citizen-developer/&#34; target=&#34;_blank&#34;&gt;https://www.gartner.com/it-glossary/citizen-developer/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;Three qualities for end-user programming: embodiment, living systems, and in-place toolchains&lt;/p&gt;

&lt;p&gt;Embodiment: it requires the programmer hold many abstractions in their mind. Related to abstract reasoning. Mentions that many end-users don&amp;rsquo;t have these abstractions in their mind, but are capable of abstract reasoning in their own domains of expertise. Mentions that via visual representations onscreen, we can help the end-user. An example: preview formula results in a spreadsheet; highlight the cells in a spreadsheet.&lt;/p&gt;

&lt;p&gt;Embodiment means, broadly, making elements of the programming experience more concrete and visual&lt;/p&gt;

&lt;p&gt;Living systems: interaction with them. Refers to shortening the feedback cycle&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;“Live programming gives the programmer immediate feedback on the behavior of a program as it is edited, replacing the edit compile-debug cycle with a fluid programming experience.“&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;But only short feedback loops, but also to change the system behaviour from within, such as the LISP compiler reading and compiling the source code from inside a program.&lt;/p&gt;

&lt;p&gt;In-place tool chains&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The user should be able to edit their programs without installing additional tools or programs&lt;/p&gt;

&lt;p&gt;a Unix shell script is just a series of commands saved into a text file&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Meaning that the user is already accustomed to issuing those commands. A script is just grouping those commands.&lt;/p&gt;

&lt;p&gt;Gives examples of end-user programming success stories: spreadsheets, SQL, browser dev tools,&lt;/p&gt;

&lt;p&gt;Tags: end-user-programming, programming, extensibility, open-closed-principle, ocp, mofication, user, extension, unix, repl, spreadsheet, reflection, theory, history, review, sql, dev-tools, chasm, abstraction&lt;/p&gt;

&lt;p&gt;Id: 4490792a-514b-11e9-9861-0242ac110006
Read: Thu, 28 Mar 2019 11:18:52 +0000&lt;/p&gt;

&lt;h2 id=&#34;why-developers-consider-agile-development-to-be-nonsense-https-medium-com-web-development-why-developers-consider-agile-development-to-be-nonsense-1eaf28715e66&#34;&gt;&lt;a href=&#34;https://medium.com/@web.development/why-developers-consider-agile-development-to-be-nonsense-1eaf28715e66&#34; target=&#34;_blank&#34;&gt;Why developers consider Agile development to be nonsense&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;This article explains how Agile development is apt and indicated for short-term software development, especially for contracting or consulting companies, where the client is external to the team.&lt;/p&gt;

&lt;p&gt;Why it does not make as much sense in products/services where there is a leapfrog solution.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Don’t give the customer what they ask for; understand them, and revolutionize their world.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tags: leapfrog-solution, google, agile, agile-development, comparison, project-management, client, consulting, management&lt;/p&gt;

&lt;p&gt;Id: 9035ea3c-514f-11e9-9676-0242ac110006
Read: Thu, 28 Mar 2019 11:49:37 +0000&lt;/p&gt;

&lt;h2 id=&#34;why-bother-with-what-three-words-https-shkspr-mobi-blog-2019-03-why-bother-with-what-three-words&#34;&gt;&lt;a href=&#34;https://shkspr.mobi/blog/2019/03/why-bother-with-what-three-words/&#34; target=&#34;_blank&#34;&gt;Why bother with What Three Words?&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;In this article, the author questions why using a closed protocol for translating geo-coordinates to words.&lt;/p&gt;

&lt;p&gt;The author complains that it is masquerading a for-profit, closed algorithm as an open standard.&lt;/p&gt;

&lt;p&gt;Also, that the GPS locations are drifting very quickly in some places, therefore the translated address changes, but the local address (e.g., 1 Wall Street), does not.&lt;/p&gt;

&lt;p&gt;Tags: gps-drift, australia, open-standard, closed-standard, for-profit, protocol, open, closed, what-three-words, w3w, i18n, startup&lt;/p&gt;

&lt;p&gt;Id: 960e6750-5202-11e9-bb40-0242ac110008
Read: Fri, 29 Mar 2019 09:11:07 +0000&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Self-Study in September 2017</title>
      <link>https://alvarogarcia7.github.io/blog/2017/09/01/self-study-september-2017/</link>
      <pubDate>Fri, 01 Sep 2017 10:32:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2017/09/01/self-study-september-2017/</guid>
      <description>

&lt;h2 id=&#34;how-the-clipboard-works-part-1-https-blogs-msdn-microsoft-com-ntdebugging-2012-03-16-how-the-clipboard-works-part-1&#34;&gt;&lt;a href=&#34;https://blogs.msdn.microsoft.com/ntdebugging/2012/03/16/how-the-clipboard-works-part-1/&#34; target=&#34;_blank&#34;&gt;How the Clipboard Works, Part 1&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article, by Matt Burrough, on how the clipboard works on windows.&lt;/p&gt;

&lt;p&gt;Explains how the API works and how the different formats and priorities are organized so the new application can decide which format to accept.&lt;/p&gt;

&lt;p&gt;Tags: windows, clipboard, matt-burrough, format, copy-paste&lt;/p&gt;

&lt;h2 id=&#34;top-developers-can-have-a-life-outside-coding-https-belenalbeza-com-top-developers-can-have-a-life-outside-coding&#34;&gt;&lt;a href=&#34;https://belenalbeza.com/top-developers-can-have-a-life-outside-coding/&#34; target=&#34;_blank&#34;&gt;Top developers can have a life outside coding&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Belen Albeza on how top coders don&amp;rsquo;t need to spend all their time programming or with activities related to programming.&lt;/p&gt;

&lt;p&gt;Explains some techniques to make the most of the working hours and some strategies to balance your work-non-work life.&lt;/p&gt;

&lt;p&gt;Tags: belen-albeza, coding, time-management, energy-management, improvement, opinion, work-life-balance&lt;/p&gt;

&lt;h2 id=&#34;your-phone-is-your-most-vulnerable-gadget-protect-it-now-https-www-wired-com-story-your-phone-is-your-most-vulnerable-gadget-protect-it-now&#34;&gt;&lt;a href=&#34;https://www.wired.com/story/your-phone-is-your-most-vulnerable-gadget-protect-it-now/&#34; target=&#34;_blank&#34;&gt;Your phone is your most vulnerable gadget. protect it now&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by David Pierce on how the phone device is vulnerable and what options we have available to make it a secure computing device.&lt;/p&gt;

&lt;p&gt;Either switch to a branded-as-secure phone or stick to the main options (Android, iPhone) plus activate some options (updates to the apps and operating system), stay away from public hotspots, don&amp;rsquo;t lend it to strangers and use some apps to monitor what resources apps are using&lt;/p&gt;

&lt;p&gt;Tags: david-pierce, security, phone, mobile-device, hotspot, iphone, android, ios&lt;/p&gt;

&lt;h2 id=&#34;living-in-switzerland-ruined-me-for-america-and-its-lousy-work-culture-https-getpocket-com-explore-item-living-in-switzerland-ruined-me-for-america-and-its-lousy-work-culture-987981365&#34;&gt;&lt;a href=&#34;https://getpocket.com/explore/item/living-in-switzerland-ruined-me-for-america-and-its-lousy-work-culture-987981365&#34; target=&#34;_blank&#34;&gt;Living in Switzerland ruined me for America and its lousy work culture&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Chantal Panozzo comparing the way of living and the economic standards in Switzerland and the US.&lt;/p&gt;

&lt;p&gt;Mainly about the topics of the social security network, provided by the state, taxes and owning a car&lt;/p&gt;

&lt;p&gt;Tags: chantal-panozzo, comparison, way-of-living, living-standard, car, social-security, usa, us, switzerland, economy&lt;/p&gt;

&lt;h2 id=&#34;the-10-10-10-rule-for-tough-decisions-https-getpocket-com-explore-item-the-10-10-10-rule-for-tough-decisions-327321877&#34;&gt;&lt;a href=&#34;https://getpocket.com/explore/item/the-10-10-10-rule-for-tough-decisions-327321877&#34; target=&#34;_blank&#34;&gt;The 10/10/10 Rule For Tough Decisions&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Chip Heath on a technique to make hard decisions: the 10/10/10 rule; How would you feel 10 minutes, 10 months and 10 years after having applied the actions from that decisions?&lt;/p&gt;

&lt;p&gt;Tags: decision, decision-making, rule, ten-ten-ten-rule, chip-heath&lt;/p&gt;

&lt;h2 id=&#34;how-to-retire-in-your-30s-save-most-of-your-money-and-rethink-your-core-values-https-getpocket-com-explore-item-how-to-retire-in-your-30s-save-most-of-your-money-and-rethink-your-core-values-912524855&#34;&gt;&lt;a href=&#34;https://getpocket.com/explore/item/how-to-retire-in-your-30s-save-most-of-your-money-and-rethink-your-core-values-912524855&#34; target=&#34;_blank&#34;&gt;How to retire in your 30s: save most of your money and rethink your core values&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Danielle Kurtzleben on how to retire early or achieve financial independence early in your career: save a big percentage of your salary, invest wisely and reduce costs.&lt;/p&gt;

&lt;p&gt;Tags: danielle-kurtzleben, investment, frugality, early-retirement, retirement, financial-independence, independence, finance, value, core-value&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Self-Study in February 2016</title>
      <link>https://alvarogarcia7.github.io/blog/2016/02/01/self-study-in-february-2016/</link>
      <pubDate>Mon, 01 Feb 2016 02:55:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2016/02/01/self-study-in-february-2016/</guid>
      <description>

&lt;h2 id=&#34;software-and-all-that-comes-with-it&#34;&gt;Software and all that comes with it&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://lanyrd.com/2011/fromthefront/sgfgw/&#34; target=&#34;_blank&#34;&gt;these slides&lt;/a&gt; about creating software and asking questions to deliver value, by Alberto Brandolini&lt;/p&gt;

&lt;p&gt;Tags: alberto-brandolini, software, slide, team-management, agile&lt;/p&gt;

&lt;h2 id=&#34;driving-your-dba-crazy-in-3-easy-steps&#34;&gt;Driving your DBA crazy in 3 easy steps&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://lanyrd.com/2011/ddd-day-it/shzym&#34; target=&#34;_blank&#34;&gt;these slides&lt;/a&gt; about dealing with the knowledge that is present in the database, not expressed in ubiquitous language and cause of the low bus factor, by Alberto Brandolini&lt;/p&gt;

&lt;p&gt;Analogy between the movie The Shining and a model / entities / aggregates.&lt;/p&gt;

&lt;p&gt;Tags: ddd, model, entity, aggregate, team-management, dba, agile, ubiquitous-language, alberto-brandolini, bus-factor, slide&lt;/p&gt;

&lt;h2 id=&#34;shorter-feedback-is-not-always-bett&#34;&gt;Shorter Feedback is not Always Bett&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://facebook.com/notes/kent-beck/shorter-feedback-is-not-always-bett/1097086386990891&#34; target=&#34;_blank&#34;&gt;this note&lt;/a&gt; from Kent Beck on why shorter feedback loops might not always be better. I.e., why some processes take time to set in and results are not observable until that time.&lt;/p&gt;

&lt;p&gt;Tags:  kent-beck, feedback-loops, open-question, analogy&lt;/p&gt;

&lt;h2 id=&#34;la-regla-del-triple-check-para-ir-a-eventos&#34;&gt;La Regla del Triple Check para ir a eventos&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.bonillaware.com/regla-triple-check-para-ir-a-eventos&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by David Bonilla about a rule to help you decide attendance to events, in Spanish&lt;/p&gt;

&lt;p&gt;Tags: rule, time-management, david-bonilla, event, spanish, triple-check&lt;/p&gt;

&lt;h2 id=&#34;an-interview-with-charles-wetherell&#34;&gt;An interview with Charles Wetherell&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://demin.ws/blog/english/2012/08/25/interview-with-charles-wetherell/&#34; target=&#34;_blank&#34;&gt;this interview&lt;/a&gt; by Alexander Demin about the interviewee&amp;rsquo;s book &amp;ldquo;Etudes for Programmers&amp;rdquo;. In it, they talk about the origin of the études, the author&amp;rsquo;s research interests and activities. Also about the book (written in 1978) and how computer science has changed since then.&lt;/p&gt;

&lt;p&gt;When asked about three things a programmer should know:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Some ability to do formal mathematics. The level necessary to understand Hopcroft and Ullman combined with a little graph theory is enough. Discrete mathematics is essential; calculus is only necessary for folks working in special application areas.&lt;/p&gt;

&lt;p&gt;Some ability to write clearly in their native language. Dijkstra said that if a person couldn’t write their own language, they couldn’t write a correct program. (Well, that’s what I hope Dijkstra said!). Writing programs is essentially the same as writing a non-fiction essay. If you can’t make the step-by-step connections clearly in your own language, why would we think you could in C, for example?&lt;/p&gt;

&lt;p&gt;Remember that a program is primarily for communication with humans, not computers. When you write a program, the computer will do whatever you say. You must convince the humans who read the program that what you have asked the computer to do is the correct thing to do. Remember, the computer doesn’t care about correctness.&lt;/p&gt;

&lt;p&gt;The answer to the last question means that programs should always have the form of paragraphs of comments that describe the intention of the program followed by paragraphs of code that implement that intention. All of the formatting should be designed to make readers as able as possible to read the code easily; the compiler doesn’t care. In particular, follow conventions of mathematics and your native language, not those you found in some random language manual. Write the comments first and then write the code, not the other way around. If you don’t know what you want to achieve and why, any code you write is, by definition, incorrect.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tags: charles-wetherell, alexander-demin, interview, book, etude, etudes-for-programmers, practice, ability, skill, list&lt;/p&gt;

&lt;h2 id=&#34;how-to-fix-javascript-maybe&#34;&gt;How to fix Javascript… maybe&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@wob/how-to-fix-javascript-maybe-8857819bfa16&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Drew Hamlett about the lack of style guide for javascript and how this affects the adoption of the language and the sprout of similar libraries.&lt;/p&gt;

&lt;p&gt;Suggests the creation of a standard style guide for javascript.&lt;/p&gt;

&lt;p&gt;Tags: drew-hamlett, javascript, style-guide, analysis&lt;/p&gt;

&lt;h2 id=&#34;isomorphic-javascript-devbeat-master-class&#34;&gt;Isomorphic JavaScript: #DevBeat Master Class&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.slideshare.net/spikebrehm/a-28174727&#34; target=&#34;_blank&#34;&gt;these slides&lt;/a&gt; by Spike Brehm on Isomorphic JavaScript and why it&amp;rsquo;s important: initial pageload and speed, reducing effort and duplication, SEO (crawlability).&lt;/p&gt;

&lt;p&gt;Tags: isomorphic-javascript, isomorphism, javascript, seo, crawler, frontend, app, application, fat-client, fat-server, thin-client, thin-server, ria-spike-brehm, slide&lt;/p&gt;

&lt;h2 id=&#34;open-sourcing-our-docker-images&#34;&gt;Open-sourcing our docker images&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.modulus.io/open-sourcing-our-docker-images&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Brandon Cannaday about the Docker images that they have.&lt;/p&gt;

&lt;p&gt;Tags: docker, brandon-annaday, open-ource, image, container, modulus&lt;/p&gt;

&lt;h2 id=&#34;growing-up-in-an-open-source-world&#34;&gt;growing up in an open source world&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://fiveisprime.me/2015/02/18/growing-up-in-open-source/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Matt Hernandez where he explains that fixing the style guide can limit your creativity and how the software is written in enterprise and open-source environments.&lt;/p&gt;

&lt;p&gt;Also about how developers grow when exposed to different style guides.&lt;/p&gt;

&lt;p&gt;Tags: style-guide, matt-hernandez, creativity, dreyfus-model, enterprise, open-source, programming&lt;/p&gt;

&lt;h2 id=&#34;hanlon-s-razor-and-working-with-young-engineers&#34;&gt;Hanlon&amp;rsquo;s Razor and working with young engineers&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://fiveisprime.me/2013/07/27/young-engineers/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Matt Hernandez on the importance of understanding (and empathising) towards others&amp;rsquo; positions and worries.&lt;/p&gt;

&lt;p&gt;Cites the Hanlon Razor:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Never attribute to malice that which is adequately explained by ignorance.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tags:  hanlon-razor, empathy, team-management, ignorance, malice, matt-hernandez&lt;/p&gt;

&lt;h2 id=&#34;intro-to-sails-js&#34;&gt;Intro to sails.js&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched &lt;a href=&#34;https://youtu.be/GK-tFvpIR7c&#34; target=&#34;_blank&#34;&gt;this video&lt;/a&gt;, an introduction to the sails.js framework: a realtime nodejs server for creating REST APIs, inspired by Ruby on Rails.&lt;/p&gt;

&lt;p&gt;Tags: sailsjs, ruby-on-rails, ror, framework, video, introduction, mvc, rest-api, realtime, nodejs,&lt;/p&gt;

&lt;h2 id=&#34;node-js-and-hapi-creating-a-rest-api&#34;&gt;Node.js and hapi - creating a rest api&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.modulus.io/nodejs-and-hapi-create-rest-api&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; about creating a REST API using &lt;a href=&#34;http://hapijs.com/&#34; target=&#34;_blank&#34;&gt;Hapi&lt;/a&gt;, a nodejs framework. Written by Matt Hernandez&lt;/p&gt;

&lt;p&gt;Tags: matt-hernandez, rest-api, nodejs, hapi, framework&lt;/p&gt;

&lt;h2 id=&#34;introducing-pokedex-org-a-progressive-webapp-for-pokémon-fans&#34;&gt;Introducing Pokedex.org: a progressive webapp for Pokémon fans&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.pocketjavascript.com/blog/2015/11/23/introducing-pokedex-org&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Nolan Lawson about the challenge of having a 60 fps application on a mobile device, making it offline.&lt;/p&gt;

&lt;p&gt;Uses Angular 2, javascript 7, PouchDB as well as LocalForage for storage. All processing on WebWorkers, except for DOM manipulation.&lt;/p&gt;

&lt;p&gt;Tags: angular-2, javascript-7, angular, javascript, pouchdb, localforage, cloudant, 60fps, mobile, app, offline-first, offline, pokemon, api, nolan-lawson, web-worker, flip-technique, css, progressive, pokedex, svgomg, frontend&lt;/p&gt;

&lt;h2 id=&#34;lambdaconf-2015-how-to-learn-haskell-in-less-than-5-years-chris-allen&#34;&gt;LambdaConf 2015 - How to Learn Haskell in Less Than 5 Years Chris Allen&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched &lt;a href=&#34;https://www.youtube.com/watch?v=Bg9ccYzMbxc&#34; target=&#34;_blank&#34;&gt;this video&lt;/a&gt; by Chris Allen on how to learn haskell, what are some common pitfalls while learning it and how learning and teaching (it) are different.&lt;/p&gt;

&lt;p&gt;Talks about his (with a coauthor) book, focused on not reducing the readers that make it to the end and, finally, increasing the amount of haskell users.&lt;/p&gt;

&lt;p&gt;References &lt;a href=&#34;https://yow.eventer.com/yow-2014-1222/stop-treading-water-learning-to-learn-by-edward-kmett-1750&#34; target=&#34;_blank&#34;&gt;this talk&lt;/a&gt; by Kmett.&lt;/p&gt;

&lt;p&gt;Tags: chris-allen, haskell, learning-to-learn, meta-learning, lambda-conf, talk&lt;/p&gt;

&lt;h2 id=&#34;extreme-continuous-delivery-at-unruly&#34;&gt;Extreme Continuous Delivery - at Unruly&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.xpdays.de/2014/downloads/002-extreme-continuous-delivery-at-unruly/cd_javaone.pdf&#34; target=&#34;_blank&#34;&gt;these slides&lt;/a&gt; about how the company Unruly does continuous delivery (CD), maximizing business value, minimizing time to market (TTM). Also describes how they do deployments and how to organize teams.&lt;/p&gt;

&lt;p&gt;References: Extreme Programming Explained (Beck), Continuous Delivery (Humble &amp;amp; Farley)&lt;/p&gt;

&lt;p&gt;Tags: silo, team-management, culture, continuous-delivery, tdd, nagdd, shared-infrastructure, acceptance-testing, module-testing, conway-law, cross-pollination, continuous-investment, slide&lt;/p&gt;

&lt;h2 id=&#34;building-chat-applications-and-robots-for-skype&#34;&gt;Building chat applications and robots for Skype&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://opensourcehacker.com/2013/03/28/building-chat-applications-and-robots-for-skype/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; on building robots for skype. By Mikko Ohtamaa&lt;/p&gt;

&lt;p&gt;Tags: skype, robot, bot, mikko-ohtamaa, slack, integration, api&lt;/p&gt;

&lt;h2 id=&#34;why-i-never-wrote-down-our-company-values&#34;&gt;Why I never wrote down our company values&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/swlh/why-i-never-wrote-down-our-company-values-8143520497e8&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Mikael Cho on the subject of having company values, preaching or writing them down. Also, what happens when hard times come, regarding your values.&lt;/p&gt;

&lt;p&gt;Tags: mikael-cho, value, company-value, analogy&lt;/p&gt;

&lt;h2 id=&#34;interview-with-jesper-louis-andersen-about-erlang-haskell-ocaml-go-idris-the-jvm-software-and-protocol-design&#34;&gt;Interview with Jesper Louis Andersen about Erlang, Haskell, OCaml, Go, Idris, the JVM, software and protocol design &lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this interview (&lt;a href=&#34;https://medium.com/this-is-not-a-monad-tutorial/interview-with-jesper-louis-andersen-about-erlang-haskell-ocaml-go-idris-the-jvm-software-and-b0de06440fbd&#34; target=&#34;_blank&#34;&gt;part 1&lt;/a&gt;, &lt;a href=&#34;https://medium.com/this-is-not-a-monad-tutorial/interview-with-jesper-louis-andersen-about-erlang-haskell-ocaml-go-idris-the-jvm-software-and-5628fe591295&#34; target=&#34;_blank&#34;&gt;part 2&lt;/a&gt;) to Jesper Louis Andersen, interviewed by Federico Carrone.&lt;/p&gt;

&lt;p&gt;The first part is about a comparison of languages, what/why he uses them, and protocol design. The second is more about the Erlang language, the BEAM VM, and some experiences.&lt;/p&gt;

&lt;p&gt;Tags: federico-carrone, erlang, interview, jesper-andersen, jesper-louis-andersen, haskell, ocaml, go, idris, the-jvm, protocol-design, software-design, language, functional-programming, protocol, land-of-lisp, northern-war&lt;/p&gt;

&lt;h2 id=&#34;migrating-to-hugo-from-octopress&#34;&gt;Migrating to Hugo From Octopress&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://nathanleclaire.com/blog/2014/12/22/migrating-to-hugo-from-octopress/&#34; target=&#34;_blank&#34;&gt;this guide&lt;/a&gt; by Nathan LeClaire on migrating the blog from Octopress to Hugo&lt;/p&gt;

&lt;p&gt;Tags: static-site-generator, hugo, go, octopress, ruby, jekyll, nathan-leclaire, migration, blog, meta&lt;/p&gt;

&lt;h2 id=&#34;dynamic-static-site-generators-strategies&#34;&gt;Dynamic Static Site Generators strategies&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://timnash.co.uk/dynamic-static-site-generators-strategies/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; explaining what are static site generators, and an example with Jekyll. By Tim Nash&lt;/p&gt;

&lt;p&gt;Tags: tim-nash, static-site-generator, jekyll, strategy, explanation, comparison&lt;/p&gt;

&lt;h2 id=&#34;blog-like-a-confused-hacker&#34;&gt;Blog like a confused hacker&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://timnash.co.uk/using-wordpress-static-site-generator/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Tim Nash on what tools he recomends for static site generation.&lt;/p&gt;

&lt;p&gt;Tags: tim-nash, static-site-generator, jekyll, hide, strategy, explanation, comparison, sublime, wordpress, amazon-s3, cdn&lt;/p&gt;

&lt;h2 id=&#34;resolving-the-frontend-backend-api-design-conflict&#34;&gt;Resolving the Frontend/Backend API Design Conflict&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://launchany.com/resolving-the-frontendbackend-api-design-conflict/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; that explains the &amp;ldquo;Backend for Frontend&amp;rdquo; (BFF) pattern, for solving the different needs of data depending on each device / client. By James Higginbotham&lt;/p&gt;

&lt;p&gt;Tags: james-higginbotham, bff, pattern, backend-for-frontend, api, soa, microservice, frontend, backend, architecture&lt;/p&gt;

&lt;h2 id=&#34;what-if-we-forget-to-write-the-tests&#34;&gt;What If We Forget To Write The Tests?&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://us2.campaign-archive2.com/?u=80ca60ec48ef77dfaa1f38943&amp;amp;id=f70f14b644&amp;amp;e=4a925444f9&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by J. B. Rainsberger on the trust issues related to starting to use a new methodology (TDD in this case) and how to see what impacts it might have in your day to day.&lt;/p&gt;

&lt;p&gt;Tags: j-b-rainsberger, j-brains, rainsberger, tdd, motivation, team-management&lt;/p&gt;

&lt;h2 id=&#34;api-microservices-the-unix-philosophy-and-the-richardson-maturity-model-a-practical-perspective&#34;&gt;API microservices, the Unix philosophy, and the Richardson Maturity Model - a practical perspective&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@chrstphrhrt/microservices-the-unix-philosophy-and-the-richardson-maturity-model-425abed44826&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Chris Hart on why startups and companies alike should be careful when choosing th latest technology and how this applies to microservices.&lt;/p&gt;

&lt;p&gt;Tags: microservice, chris-hart, startup, analysis, company, technical-debt, bounded-context, ddd, rest-api&lt;/p&gt;

&lt;h2 id=&#34;effective-programming&#34;&gt;Effective programming&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@sebas5384/effective-programming-d7e5bb2f3b80&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Sebastian Ferrari on the importance of clean code, systems thinking and functional programming.&lt;/p&gt;

&lt;p&gt;Specifies the important difference between effectiveness and efficiency.&lt;/p&gt;

&lt;p&gt;Links to this talk by &lt;a href=&#34;https://youtu.be/OqEeIG8aPPk&#34; target=&#34;_blank&#34;&gt;Russ Ackoff&lt;/a&gt;. States the difference between &amp;ldquo;the right thing&amp;rdquo; and &amp;ldquo;the thing right&amp;rdquo;, by Drucker.&lt;/p&gt;

&lt;p&gt;Tags: drucker, thing-right, right-thing, sebastian-ferrari, system-thinking, russ-ackoff, video, ted, difference, clean-code, functional-programming&lt;/p&gt;

&lt;h2 id=&#34;learning-how-to-learn&#34;&gt;Learning how to learn&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@thejameskyle/learning-how-to-learn-7f04d6f42c1e&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by James Kyle about the &amp;ldquo;how to learn&amp;rdquo; as one important skill for programmers and how having the solution at a few keystrokes limits / handicaps this ability.&lt;/p&gt;

&lt;p&gt;Tags: programmer, learn-to-learn, james-kyle, stack-overflow, skill&lt;/p&gt;

&lt;h2 id=&#34;why-do-some-functional-programmers-criticize-design-patterns-in-oop-languages-as-a-sign-of-language-deficiency-while-monad-is-also-a-design-pattern&#34;&gt;Why do some functional programmers criticize design patterns in OOP languages as a sign of language deficiency, while Monad is also a design pattern?&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://www.quora.com/Why-do-some-functional-programmers-criticize-design-patterns-in-OOP-languages-as-a-sign-of-language-deficiency-while-Monad-is-also-a-design-pattern/answer/Edward-Kmett?srid=hVnO&amp;amp;share=12410d1e&#34; target=&#34;_blank&#34;&gt;this answer&lt;/a&gt; by Edward Kmett comparing the design patterns in OOP to the design patterns in functional languages.&lt;/p&gt;

&lt;p&gt;Tags: functional-language, object-oriented-language, edward-kmett, oop, pattern, monad, interface, quora, answer&lt;/p&gt;

&lt;h2 id=&#34;should-we-even-debate-refactoring-with-stakeholders&#34;&gt;Should We Even Debate Refactoring With Stakeholders?&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://us2.campaign-archive2.com/?u=80ca60ec48ef77dfaa1f38943&amp;amp;id=215f7f649b&amp;amp;e=4a925444f9&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by J. B. Rainsberger on the power balance between stakeholders and programmers and how it can be inclined to a &amp;lsquo;more trust&amp;rsquo; / &amp;lsquo;less trust&amp;rsquo; by following some actions. The analogy is to a trade you cannot understand, therefore you have to hope that the taken decisions are in your best interest.&lt;/p&gt;

&lt;p&gt;Tags: j-b-rainsberger, j-brains, rainsberger, refactor, business-need, communication, stakeholder&lt;/p&gt;

&lt;h2 id=&#34;the-eternal-struggle-between-business-and-programmers&#34;&gt;The Eternal Struggle Between Business and Programmers&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.thecodewhisperer.com/permalink/the-eternal-struggle-between-business-and-programmers&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by J. B. Rainsberger on the discussion between business (&amp;lsquo;we want more features, now&amp;rsquo;) and the programmers (&amp;lsquo;we want more refactoring, now&amp;rsquo;). Concludes that both players need each other, in a symbiotic fashion, to keep their jobs at the company.&lt;/p&gt;

&lt;p&gt;He suggests that Scrum cannot work without the XP practices and that we need to refactor aggressively after having finished our initial design, to keep the costs down. In fact, agreeing with both parts in this discussion.&lt;/p&gt;

&lt;p&gt;References one of his own videos, at Oredev&amp;rsquo;13, &amp;ldquo;Fundamental Theorem of Agile Software Development&amp;rdquo;, where he describes the relationship between accidental / essential complexity in the cost of a feature, attributing most of it to accidental (&amp;lsquo;we&amp;rsquo;re not good at our jobs&amp;rsquo;) and describing the need for more design / refactor after the initial design.&lt;/p&gt;

&lt;p&gt;Tags: j-b-rainsberger, j-brains, rainsberger, refactor, business-need, design, oredev, talk, agile, xp, scrum, software-development, accidental-complexity, essential-complexity, mythical-man-month&lt;/p&gt;

&lt;h2 id=&#34;turning-code-to-cash-how-to-make-money-as-a-web-developer-and-live-to-tell-the-tale&#34;&gt;Turning code to cash — How to make money as a Web Developer and live to tell the tale.&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@kurtrohlandt/turning-code-to-cash-how-to-make-money-as-a-web-developer-and-live-to-tell-the-tale-f5eedc557b3e&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Kurt Rohlandt with a list of items to check while dealing with clients as a freelancer:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Nothing is simple&lt;/li&gt;
&lt;li&gt;Know your skill set — and let your client know it&lt;/li&gt;
&lt;li&gt;Be clear about what they are buying&lt;/li&gt;
&lt;li&gt;Learn to use the best tool for the job&lt;/li&gt;
&lt;li&gt;To your client you’re more than just a developer&lt;/li&gt;
&lt;li&gt;Sign off your jobs&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tags: freelancer, kurt-rohlandt, list, tip, client&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Self-Study in December 2015</title>
      <link>https://alvarogarcia7.github.io/blog/2015/12/02/self-study-in-december-2015/</link>
      <pubDate>Wed, 02 Dec 2015 09:50:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/12/02/self-study-in-december-2015/</guid>
      <description>

&lt;h2 id=&#34;ruby-equality-and-object-comparison&#34;&gt;Ruby Equality And Object Comparison&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.skorks.com/2009/09/ruby-equality-and-object-comparison/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt;, written by Alan Skorkin, that explains equality comparisons in ruby:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;equal? is reference equality&lt;/li&gt;
&lt;li&gt;== is value equality&lt;/li&gt;
&lt;li&gt;eql? is value and type equality&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tags: ruby, comparison, equality, object, reference, alan-skorkin&lt;/p&gt;

&lt;h2 id=&#34;software-folklore&#34;&gt;Software Folklore&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched &lt;a href=&#34;https://www.thoughtworks.com/insights/blog/software-folklore&#34; target=&#34;_blank&#34;&gt;this PechaKucha&lt;/a&gt; by Chris Ford on what are laws and how they relate to creating software. Also talks on what could be an analogy to software creation (says not science, not engineering)&lt;/p&gt;

&lt;p&gt;Tags: folklore, chris-ford, analogy, computer-science, pechakucha, software-engineering, software-creation, law&lt;/p&gt;

&lt;h2 id=&#34;3-things-java-programmers-can-steal-from-clojure&#34;&gt;3 Things Java Programmers Can Steal from Clojure&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.lispcast.com/3-things-java-can-steal-from-clojure&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Eric Normand, where he explains 3 clojure things that can be applied to your day to day java:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Persistent Data Structures&lt;/li&gt;
&lt;li&gt;Software Transactional Memory&lt;/li&gt;
&lt;li&gt;Extensible Data Notation&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Tags: clojure, java, eric-normand, stm, edn&lt;/p&gt;

&lt;h2 id=&#34;2-features-of-clojure-editors-professionals-won-t-do-without&#34;&gt;2 Features of Clojure Editors Professionals Won&amp;rsquo;t Do Without&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.lispcast.com/clojure-editors&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Eric Normand, where he explains the most necessary features for a clojure editor:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;REPL Integration&lt;/li&gt;
&lt;li&gt;Structural Editing&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Tags: clojure, java, eric-normand, stm, edn&lt;/p&gt;

&lt;h2 id=&#34;how-to-read-more-books&#34;&gt;How to read more books&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://verraes.net/2012/12/how-to-read-more-books/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Mathias Verraes on tips to read more books:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Negative things to stop doing&lt;/li&gt;
&lt;li&gt;Positive things to start doing&lt;/li&gt;
&lt;li&gt;Habits to form&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tags: mathias-verraes, reading, book&lt;/p&gt;

&lt;h2 id=&#34;effective-learning-strategies-for-programmers&#34;&gt;Effective Learning Strategies for Programmers&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://akaptur.com/blog/2015/10/10/effective-learning-strategies-for-programmers/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Allison Kaptur on fixed vs growth mindset and the need for having the latter for being a programmer.&lt;/p&gt;

&lt;p&gt;Especially interesting is the provided example of the confusion in the documentation, that can hinder productivity&lt;/p&gt;

&lt;p&gt;(Note: this entry is also present in this same month)&lt;/p&gt;

&lt;p&gt;Tags: allison-kaptur, fixed-mindset, growth-mindset, research, learning-strategy, recurse-center, carol-dweck, mindset&lt;/p&gt;

&lt;h2 id=&#34;code-a-fully-functional-web-app-in-14-days-challenge-accepted&#34;&gt;Code a fully-functional web app in 14 days… - Challenge Accepted&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@OggimusPrime/code-a-fully-functional-web-app-in-14-days-e247f536772d&#34; target=&#34;_blank&#34;&gt;this experience report&lt;/a&gt; on how Ryan Haase and Benjamin Hoffman built an MVP in 14 days. They describe their stack choices, gotchas and key points.&lt;/p&gt;

&lt;p&gt;Tags: ryan-haase, benjamin-hoffman, mvp, angular, firebase, challenge&lt;/p&gt;

&lt;h2 id=&#34;writing-clear-code-not-clever-code&#34;&gt;Writing-Clear-Code, Not-Clever-Code&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve-read &lt;a href=&#34;https://medium.com/@mikesherov/writing-clear-code-not-clever-code-d6b90353a3c5&#34; target=&#34;_blank&#34;&gt;this-article&lt;/a&gt; by-Mike-Sherov-where-he-explains-the-reflection-he-did-since-his-team-members-were-asking-too-much-about-his-code. His-conclusion-was-to-stop-reducing-the-size-of-the-code-to-improve-readability.&lt;/p&gt;

&lt;p&gt;Tags: mike-sherov, clean-code,clear-code, clever-code, reflection, team, code&lt;/p&gt;

&lt;h2 id=&#34;en-vez-de-un-scrum-por-proyecto-mejor-un-scrum-por-equipo&#34;&gt;En vez de “un Scrum por proyecto” mejor un “Scrum por equipo”&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.javiergarzas.com/2015/12/alejate-del-concepto-proyecto-si-quieres-usar-bien-scrum-22-adaptar-scrum-segun-cada-proyecto.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; where Javier Garzás explains scrum by teams or by projects and why the former should be preferred (in Spanish).&lt;/p&gt;

&lt;p&gt;Tags:  javier-garzas, scrum, project-management, team, agile&lt;/p&gt;

&lt;h2 id=&#34;application-gateways-an-example-in-clojure&#34;&gt;Application gateways: an example in Clojure&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.obliquo.eu/post/134421923177/application-gateways-an-example-in-clojure&#34; target=&#34;_blank&#34;&gt;this example&lt;/a&gt; that Cristobal Garcia prepared for me after asking for it at the local Barcelona Software Craftsmanship community (Many thanks!).&lt;/p&gt;

&lt;p&gt;He describes what an application gateway is, giving an example in clojure. In this case, the application gateway is used to cache and forward/deny requests to another webservice.&lt;/p&gt;

&lt;p&gt;Tags: cristobal-garcia, application-gateway, clojure, example, level-7-firewall, barcelona-software-craftsmanship, scbcn, gift&lt;/p&gt;

&lt;h2 id=&#34;habits-for-effective-refactoring&#34;&gt;Habits For Effective Refactoring&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched &lt;a href=&#34;https://www.youtube.com/watch?v=THw8t7ePlsc&#34; target=&#34;_blank&#34;&gt;this video&lt;/a&gt; by Jason Gorman about techniques for effective and sustainable refactoring. Among them:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;check the tests, the coverage to make sure that the refactored code has a good safety net&lt;/li&gt;
&lt;li&gt;set a refactoring goal: decide what you want to refactor at this time and when you&amp;rsquo;ll be done&lt;/li&gt;
&lt;li&gt;know your code smells&lt;/li&gt;
&lt;li&gt;only refactor on green&lt;/li&gt;
&lt;li&gt;use automated refactoring steps whenever possible: for the benefits of transactionability and undo are huge and the risk of messing it up decreases&lt;/li&gt;
&lt;li&gt;commit after achieving the refactoring goal: allows to create a checkpoint to revert to&lt;/li&gt;
&lt;li&gt;bottle the code smells for faster/better learning (in the commit message, he uses a hashtag for searching)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tags: jason-gorman, refactoring, video, technique, refactor, tutorial, code-smell&lt;/p&gt;

&lt;h2 id=&#34;key-to-oeis-org-poster-n-15&#34;&gt;Key to &amp;ldquo;OEIS.org&amp;rdquo; Poster, n. 15&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://oeisf.org/Poster15a_key.pdf&#34; target=&#34;_blank&#34;&gt;the 15th &amp;ldquo;poster and its key&amp;rdquo;&lt;/a&gt; by the OEIS, published by N. J. A. Sloane.&lt;/p&gt;

&lt;p&gt;Tags: sloane, oeis, poster-and-key, neil-sloane&lt;/p&gt;

&lt;h2 id=&#34;the-clojure-style-guide&#34;&gt;The Clojure Style Guide&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://github.com/bbatsov/clojure-style-guide&#34; target=&#34;_blank&#34;&gt;this style guide&lt;/a&gt; to clojure, by Bozhidar Batsov&lt;/p&gt;

&lt;p&gt;Tags: bozhidar-batsov, clojure, style-guide&lt;/p&gt;

&lt;h2 id=&#34;marick-s-midje-information&#34;&gt;Marick&amp;rsquo;s Midje information&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/marick/Midje/wiki/Writing-your-own-checkers&#34; target=&#34;_blank&#34;&gt;Custom checkers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/marick/Midje/wiki/Two-words-you-need-to-know&#34; target=&#34;_blank&#34;&gt;Domain concepts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/marick/Midje/wiki/Top-down-testing&#34; target=&#34;_blank&#34;&gt;Top-down testing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/marick/Midje/wiki/Nested-checkers&#34; target=&#34;_blank&#34;&gt;Nested checkers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;clusterware-11gr2-setting-up-an-active-passive-failover-configuration&#34;&gt;Clusterware 11gR2 – Setting up an Active/Passive failover configuration&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://blogs.oracle.com/xpsoluxdb/entry/clusterware_11gr2_setting_up_an_activepassive_failover_configuration&#34; target=&#34;_blank&#34;&gt;this how-to guide&lt;/a&gt; by Gilles Haro on how to create an Active/Passive failover configuration for Oracle.&lt;/p&gt;

&lt;p&gt;Tags: failover, high-availability, oracle, gilles-haro, active-passive, database&lt;/p&gt;

&lt;h2 id=&#34;old-stuff-that-rocks&#34;&gt;Old stuff that rocks&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://wincent.com/blog/old-stuff-that-rocks&#34; target=&#34;_blank&#34;&gt;this list&lt;/a&gt; of old technologies that still rock, according to Greg Hurrell.&lt;/p&gt;

&lt;p&gt;Tags: list, old-stuff, greg-hurrell&lt;/p&gt;

&lt;h2 id=&#34;do-not-underestimate-credentials-leaks&#34;&gt;Do not underestimate credentials leaks&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://github.com/ChALkeR/notes/blob/master/Do-not-underestimate-credentials-leaks.md&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; that describes how credentials are usually accidentally leaked and a guide on what to do about it. By Сковорода Никита Андреевич.&lt;/p&gt;

&lt;p&gt;Tags: credential, leak, guide, how-to&lt;/p&gt;

&lt;h2 id=&#34;clojure-for-the-brave-and-true-chapter-8-writing-macros&#34;&gt;Clojure for the brave and true: chapter 8 - Writing Macros&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.braveclojure.com/writing-macros&#34; target=&#34;_blank&#34;&gt;this chapter&lt;/a&gt; from Daniel Higginbotham about macros in clojure. In it, he explains common gotchas (e.g., double execution, variable capture), splicing, quoting and unquoting.&lt;/p&gt;

&lt;p&gt;Tags: daniel-higginbotham, clojure, macro, chapter, quoting, unquoting, splicing&lt;/p&gt;

&lt;h2 id=&#34;the-telescoping-constructor-anti-pattern&#34;&gt;The Telescoping Constructor (Anti)Pattern&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.captaindebug.com/2011/05/telescoping-constructor-antipattern.html#.ViF57eztmkp&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Roger Hughes on the telescoping constructor, with the example in java. The discussion is whether to apply this or not and whether this is a pattern or an anti-pattern&lt;/p&gt;

&lt;p&gt;Tags: roger-hughes, telescoping-constructor, java, pattern, antipattern&lt;/p&gt;

&lt;h2 id=&#34;ruby-for-newbies-testing-with-rspec&#34;&gt;Ruby for Newbies: Testing with Rspec&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://code.tutsplus.com/tutorials/ruby-for-newbies-testing-with-rspec--net-21297&#34; target=&#34;_blank&#34;&gt;this tutorial&lt;/a&gt; on how to make write tests with RSpec in Ruby. Written by Andrew Burgess&lt;/p&gt;

&lt;p&gt;Tags: andrew-burgess, ruby, rspec, test, tutorial&lt;/p&gt;

&lt;h2 id=&#34;ruby-dynamic-method-calling&#34;&gt;Ruby dynamic method calling&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.khd.me/ruby/ruby-dynamic-method-calling/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; about dynamically calling methods and a benchmark on three ways of doing it in Ruby:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;call&lt;/li&gt;
&lt;li&gt;send&lt;/li&gt;
&lt;li&gt;eval&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tags: khell, metaprogramming, comparison, benchmark, ruby, evaluation, dynamic&lt;/p&gt;

&lt;h2 id=&#34;becoming-a-cto&#34;&gt;Becoming a CTO&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article []&lt;a href=&#34;https://medium.com/@juokaz/becoming-a-cto-337dc1a9c6ae&#34; target=&#34;_blank&#34;&gt;becoming-a-cto&lt;/a&gt; by Juozas Kaziukėnas about the profile and the abilities of a CTO. Talks about the limiting factors for being one (e.g., stop programming, attend many meetings) and the type of work you are supposed to do (e.g., face business people, communicate the strategy, make yourself respectable).&lt;/p&gt;

&lt;p&gt;Tags: juozas-kaziukenas, cto, career-change, technology, career, programmer, title, job&lt;/p&gt;

&lt;h2 id=&#34;4-stages-of-team-development&#34;&gt;4 Stages of Team Development&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched &lt;a href=&#34;https://www.youtube.com/watch?feature=player_embedded&amp;amp;v=7NouiH2ZT8w&#34; target=&#34;_blank&#34;&gt;this video&lt;/a&gt; by the Glenn Smith &amp;ldquo;Growth Coach Houston&amp;rdquo; about the four stages of team development: forming, norming, storming, performing and how to get through them.&lt;/p&gt;

&lt;p&gt;Tags: tuckman, forming, norming, storming, performing, glenn-smith, video, team-management, team&lt;/p&gt;

&lt;h2 id=&#34;time-hacking-for-college-students&#34;&gt;Time Hacking for College Students&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://goel.io/time-hacking/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Karan Goel about techniques for finding time for important things:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;prioritizing&lt;/li&gt;
&lt;li&gt;waking up early&lt;/li&gt;
&lt;li&gt;automate&lt;/li&gt;
&lt;li&gt;keep learning&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tags: karan-goel, time-management, important-vs-urgent, prioritization&lt;/p&gt;

&lt;h2 id=&#34;clojure-at-a-real-estate-portal&#34;&gt;Clojure at a Real Estate Portal&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.pitheringabout.com/?p=1069&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Jon Pither, where he does a post-mortem analysis of a real-estate project with a fixed deadline (TV ads) with around ten months of development time. They brought in an external company, JUXT, who with 6 seasoned developers were able to finish the project on time and on budget.&lt;/p&gt;

&lt;p&gt;Their stack was:  Ring, Compojure, Bidi, and http-kit for our Clojure web-apps, mixing in Friend and Liberator.&lt;/p&gt;

&lt;p&gt;Tags: ring, compojure, bidi, http-kit, clojure, fixed-deadline, project, success-story, post-mortem, jon-pither&lt;/p&gt;

&lt;h2 id=&#34;musing-on-tdd-impulsive-developers-and-aesthetics&#34;&gt;Musing on TDD, Impulsive Developers and Aesthetics&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article by Jon Pither on why TDD can be harmful sometimes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;limits the amount of lateral thinking&lt;/li&gt;
&lt;li&gt;forces a technology&lt;/li&gt;
&lt;li&gt;limits the solution space given a fixed problem space&lt;/li&gt;
&lt;li&gt;limits creativity and freedom when performing large / aggressive refactorings&lt;/li&gt;
&lt;li&gt;sterile place&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;while he agrees that can be useful sometimes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;mostly in OOP&lt;/li&gt;
&lt;li&gt;to keep you on the rails and focused&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tags: tdd, jon-pither, senior-developer, junior-developer, aesthetics, lateral-thinking&lt;/p&gt;

&lt;h2 id=&#34;fred-george-on-programmer-anarchy&#34;&gt;Fred George On Programmer Anarchy&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.infoq.com/news/2012/02/programmer-anarchy&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Roopesh Shenoy on a talk by Fred George: &amp;ldquo;Programmer Anarchy&amp;rdquo;, where programmers make business decisions based on business metrics set by clients, among other things.&lt;/p&gt;

&lt;p&gt;Tags: roopesh-shenoy, fred-george, programmer-anarchy, analogy, anarchy, business-metric, client, agile, methodology&lt;/p&gt;

&lt;h2 id=&#34;programmer-anarchy&#34;&gt;Programmer Anarchy&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.slideshare.net/fredgeorge/programmer-anarchy-chinese&#34; target=&#34;_blank&#34;&gt;these slides&lt;/a&gt; by Fred George about programmer&amp;rsquo;s anarchy. Commented in the article above&lt;/p&gt;

&lt;p&gt;Tags: slide, fred-george, programmer-anarchy, analogy, anarchy, business-metric, client, agile, methodology&lt;/p&gt;

&lt;h2 id=&#34;what-is-programmer-anarchy-and-does-it-have-a-future&#34;&gt;What is Programmer Anarchy and does it have a future?&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://martinjeeblog.com/2012/11/20/what-is-programmer-anarchy-and-does-it-have-a-future/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Martin Jee explaining what is programmer anarchy and how it compares to an agile team. Compares the division of labor structure in anarchist and agile teams, using Marxist terms.&lt;/p&gt;

&lt;p&gt;He finishes saying that what is a powerful idea in this methodology is the taking of personal responsibilities by the programmers.&lt;/p&gt;

&lt;p&gt;Tags: fred-george, programmer-anarchy, analogy, anarchy, martin-jee, agile, methodology&lt;/p&gt;

&lt;h2 id=&#34;agile-is-the-new-black&#34;&gt;Agile is the New Black&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.slideshare.net/fredgeorge/agile-is-thenewblack&#34; target=&#34;_blank&#34;&gt;these slides&lt;/a&gt; by Fred George where compares xp/agile development in 1999, 2006 and 2011.&lt;/p&gt;

&lt;p&gt;Tags: fred-george, agile, methodology, comparison, slide&lt;/p&gt;

&lt;h2 id=&#34;show-how-don-t-tell-what-a-management-style&#34;&gt;Show How, Don&amp;rsquo;t Tell What - A Management Style&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://2ndscale.com/rtomayko/2012/management-style&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Ryan Tomayko about the management style they apply at github:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;instead of telling them what to do, show people how to plan, build, and ship product together.&lt;/p&gt;

&lt;p&gt;I’ve never actually told anyone what to do here. In fact, I vehemently refuse to tell people what to do. Here are just a couple reasons why:&lt;/p&gt;

&lt;p&gt;I don’t scale. If I tell someone what to do and they do it, then what? Do I have to tell them another thing to do? What happens when I have to decide what to do for 20 people?&lt;/p&gt;

&lt;p&gt;Telling people what to do is lazy. Instead, try to convince them with argument. This is how humans interact when there’s no artificial authority structure and it works great. If you can’t convince people through argument then maybe you shouldn’t be doing it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;about managers:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;It’s often cited that GitHub doesn’t have managers. In my opinion, a better way to describe the phenomenon would be to say that everyone at GitHub is a manager&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tags: ryan-tomayko, management, management-style, team-management, github&lt;/p&gt;

&lt;h2 id=&#34;clojure-for-the-brave-and-true-chapter-7-clojure-alchemy-reading-evaluation-and-macros&#34;&gt;Clojure for the brave and true: chapter 7 - Clojure Alchemy: Reading, Evaluation, and Macros&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.braveclojure.com/read-and-eval/&#34; target=&#34;_blank&#34;&gt;this chapter&lt;/a&gt; from Daniel Higginbotham about the essential concepts for macros: the reader, the evaluator, their relative order and independence. How to use clojure to extend itself and an example: the thread (&lt;code&gt;-&amp;gt;&lt;/code&gt;) macro&lt;/p&gt;

&lt;p&gt;Tags: daniel-higginbotham, clojure, macro, chapter, reader, evaluator&lt;/p&gt;

&lt;h2 id=&#34;team-bus-factors-how-to-reduce-them-and-how-to-prevent-them&#34;&gt;Team Bus Factors: How to Reduce Them and How to Prevent Them&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://5whys.com/blog/team-bus-factors-how-to-reduce-them-and-how-to-prevent-them.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Roy Osherove on the bus factor:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;what is it&lt;/li&gt;
&lt;li&gt;how to reduce them&lt;/li&gt;
&lt;li&gt;how to prevent them&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Also talks about examples of bus-factor people&lt;/p&gt;

&lt;p&gt;Tags: bus-factor, roy-osherove, team-management, prevention, reduction, definition&lt;/p&gt;

&lt;h2 id=&#34;hambre-de-programar&#34;&gt;Hambre de programar&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@xav1uzz/hambre-de-programar-166aeae3b525&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; (in Spanish) by Xavi Gost where he analyses the Barcelona Software Craftsmanship 2015: the events, the relationships and the passion that it has injected to attendees&lt;/p&gt;

&lt;p&gt;Tags: xavi-gost, barcelona-software-craftsmanship, 2015, experience-report, scbcn15&lt;/p&gt;

&lt;h2 id=&#34;software-craftsmanship-barcelona-2015&#34;&gt;Software Craftsmanship Barcelona 2015&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.idealista.com/labs/blog/idealista/software-craftsmanship-barcelona-2015/&#34; target=&#34;_blank&#34;&gt;this analysis&lt;/a&gt; of the Barcelona Software Craftsmanship 2015 by the Idealista R&amp;amp;D team.&lt;/p&gt;

&lt;p&gt;Tags: jaime-perera, barcelona-software-craftsmanship, 2015, idealista, experience-report, scbcn15&lt;/p&gt;

&lt;h2 id=&#34;jvmls-2015-compilers-are-databases&#34;&gt;JVMLS 2015 - Compilers are Databases&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched &lt;a href=&#34;https://www.youtube.com/watch?v=48js0H6ooBY&#34; target=&#34;_blank&#34;&gt;this video&lt;/a&gt; by Martin Odersky on why compilers resemble databases and explains how a functional compiler works on the inside.&lt;/p&gt;

&lt;p&gt;Explains the notion of a Type, Reference, Symbol, Denotation (and Multi-Denotation) living in the Abstract Syntax Tree (AST)&lt;/p&gt;

&lt;p&gt;Also explains the need for a reading compiler (e.g., for quick validation in the IDE), single-pass and multi-pass compiler.&lt;/p&gt;

&lt;p&gt;They have built phases to transform the source code into bytecode, but to better use the cache locality, they programmatically mix phases using Java Reflection (metaprogramming) to traverse the tree (AST) once for these selected phases.&lt;/p&gt;

&lt;p&gt;Tags: type, reference, symbol, denotation, abstract-syntax-tree, ast, compiler, functional-compiler, scalac, dotty, martin-odersky, analogy, database&lt;/p&gt;

&lt;h2 id=&#34;in-functional-programming-what-is-a-functor&#34;&gt;In Functional Programming, what is a functor?&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://stackoverflow.com/questions/2030863/in-functional-programming-what-is-a-functor/2031421#2031421&#34; target=&#34;_blank&#34;&gt;this answer&lt;/a&gt; of what is a functor&lt;/p&gt;

&lt;p&gt;Tags: stack-overflow, functor, answer, functional-programming&lt;/p&gt;

&lt;h2 id=&#34;ten-habits-of-a-good-programmer&#34;&gt;Ten Habits of a Good Programmer&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://hintjens.com/blog:98&#34; target=&#34;_blank&#34;&gt;this list&lt;/a&gt; of good habits of good programmers by Pieter Hintjens:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;If it works and is still useful, don&amp;rsquo;t throw it out.&lt;/li&gt;
&lt;li&gt;Never solve the same problem twice in parallel.&lt;/li&gt;
&lt;li&gt;Solve the same problem often in serial.&lt;/li&gt;
&lt;li&gt;Write code, and repeat, until you are fluent in your language.&lt;/li&gt;
&lt;li&gt;Learn to use code generators.&lt;/li&gt;
&lt;li&gt;Work with others.&lt;/li&gt;
&lt;li&gt;Technology is a tool, not a tribal affiliation.&lt;/li&gt;
&lt;li&gt;Aim for this cycle: learn, play, work, teach.&lt;/li&gt;
&lt;li&gt;Get your edit-compile-run-fail cycles down to seconds.&lt;/li&gt;
&lt;li&gt;If you need debuggers, you&amp;rsquo;re doing it wrong.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Tags: pieter-hintjens, list, habit, good-programmer&lt;/p&gt;

&lt;h2 id=&#34;beginning-clojure-cursive&#34;&gt;Beginning Clojure: Cursive&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://potetm.github.io/2015/10/04/beginning-clojure-cursive.html&#34; target=&#34;_blank&#34;&gt;this tutorial&lt;/a&gt; on installing Cursive, IntelliJ Idea&amp;rsquo;s plugin for working with Clojure. Written by Tim Pote&lt;/p&gt;

&lt;p&gt;Tags: cursive, clojure, intellij-idea, plugin, tutorial, tim-pote&lt;/p&gt;

&lt;h2 id=&#34;nodejs-a-quick-optimization-advice&#34;&gt;#NodeJS : A quick optimization advice&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://top.fse.guru/nodejs-a-quick-optimization-advice-7353b820c92e&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; on the limit for inlining for the NodeJS optimizing compiler (Crankshaft), that includes both source code and comments. Written Julien Crouzet&lt;/p&gt;

&lt;p&gt;Tags: nodejs, comment, julien-crouzet, crankshaft, optimizer, inline, function-inline&lt;/p&gt;

&lt;h2 id=&#34;specification-pattern&#34;&gt;Specification Pattern&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://en.wikipedia.org/wiki/Specification_pattern&#34; target=&#34;_blank&#34;&gt;this wikipedia&lt;/a&gt; page on the specification pattern&lt;/p&gt;

&lt;p&gt;Tags: eric-evans, martin-fowler, specification-pattern, pattern, design-pattern, dsl, domain-specific-language&lt;/p&gt;

&lt;h2 id=&#34;el-recruiting-está-roto-bonilista&#34;&gt;El recruiting está ROTO #Bonilista&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://us2.campaign-archive2.com/?u=374c664073e1a1fa3deca53b4&amp;amp;id=539364dde4&#34; target=&#34;_blank&#34;&gt;this bonilista&lt;/a&gt; where David Bonilla explains why the recruitment sector for technical people in Spain is broken. Article is in Spanish.&lt;/p&gt;

&lt;p&gt;Tags: david-bonilla, bonilista, recruitment, job, career&lt;/p&gt;

&lt;h2 id=&#34;bddon-t-the-practice-and-the-tools&#34;&gt;BDDon’t: The practice and the tools&lt;/h2&gt;

&lt;p&gt;​I&amp;rsquo;ve  read &lt;a href=&#34;https://www.thoughtworks.com/p2magazine/issue12/bdd-dont/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Kevin Dishman that explains what is BDD and how it I  usually used. Also the common downsides and what to do about it&lt;/p&gt;

&lt;p&gt;Suggests using a faster tool, lower on the test pyramid that can bring the same business value at a lower cost&lt;/p&gt;

&lt;p&gt;Tags: kevin-dishman, downside, test-pyramid, bdd, test, unit-test, functional-test, acceptance-test&lt;/p&gt;

&lt;h2 id=&#34;cómo-usan-git-en-github-scbcn&#34;&gt;Cómo usan #Git en GitHub – #scbcn&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched &lt;a href=&#34;http://codely.tv/screencasts/como-usan-git-en-github/&#34; target=&#34;_blank&#34;&gt;this screencast&lt;/a&gt; on the talk we organized yesterday about github.&lt;/p&gt;

&lt;p&gt;Tags: javier-ferrer, codely-tv, codely, event, scbcn, alain-helaili, screencast&lt;/p&gt;

&lt;h2 id=&#34;trying-to-speed-up-binary-search&#34;&gt;Trying to speed up Binary Search&lt;/h2&gt;

&lt;p&gt;I have read &lt;a href=&#34;http://databasearchitects.blogspot.com.es/2015/09/trying-to-speed-up-binary-search.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; on how the binary search is implemented and what other algorithms are possible to speed up the search in large datasets, especially common in databases.&lt;/p&gt;

&lt;p&gt;Tags: optimization, branch-misprediction, clang, o3, gpp, c, database, binary-search, thomas-neumann&lt;/p&gt;

&lt;h2 id=&#34;scrum-3-0-and-organization-4-0-impressions-from-a-great-evening-with-boris-gloger-at-immobilienscout24&#34;&gt;Scrum 3.0 and Organization 4.0 - impressions from a great evening with Boris Gloger at ImmobilienScout24&lt;/h2&gt;

&lt;p&gt;I have read &lt;a href=&#34;http://www.ontheagilepath.net/2015/12/scrum-30-and-organization-40.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by  Sebastian Radics that compares the different ways of doing scrum: 1 2 3, most comments on other strategies or management methodologies like no estimates.&lt;/p&gt;

&lt;p&gt;Compares the importance of focusing on the process or on the final product, the role of the scrum master, the role of the product owner, and the team itself.&lt;/p&gt;

&lt;p&gt;Tags: management, agile, scrum, team-management, sebastian-radics, scrum30&lt;/p&gt;

&lt;h2 id=&#34;trucos-para-trabajar-con-equipos-remotos&#34;&gt;Trucos para trabajar con equipos remotos&lt;/h2&gt;

&lt;p&gt;I have read &lt;a href=&#34;http://thinkingwithyou.com/2015/11/trucos-para-trabajar-con-equipos-remotos/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Israel Alcázar (Spanish). Explains how this company organized their product development process. explains tools for working with a remote team.&lt;/p&gt;

&lt;p&gt;give three pieces of advice for improving it, and further resources to read&lt;/p&gt;

&lt;p&gt;Tags: remote, remote-first, isra-alcazar, israel-alcazar, team-management, advice&lt;/p&gt;

&lt;h2 id=&#34;introducing-new-open-source-tools-for-the-elixir-community&#34;&gt;Introducing new open-source tools for the Elixir community&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://engineering.pinterest.com/blog/introducing-new-open-source-tools-elixir-community&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Steve Cohen that explains what the actor model is and what is the spirit of the elixir language: user friendlier syntax for erlang&lt;/p&gt;

&lt;p&gt;They also explain that they have implemented and ad server and access control using elixir. For this matter, they rely on two tools that are now open source&lt;/p&gt;

&lt;p&gt;Tags: elixir, microsecond, latency, erlang, actor-model, language-syntax, open-source, steve-cohen&lt;/p&gt;

&lt;h2 id=&#34;cuánto-pagas-por-tus-herramientas-de-trabajo&#34;&gt;¿Cuánto pagas por tus herramientas de trabajo?&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://us2.campaign-archive2.com/?u=374c664073e1a1fa3deca53b4&amp;amp;id=12ed2d6eb0&#34; target=&#34;_blank&#34;&gt;this bonilista&lt;/a&gt; about how much programmers invest in buying their tools (and honing them). By David Bonilla, in Spanish&lt;/p&gt;

&lt;p&gt;Tags: david-bonilla, bonilista, tool, investment&lt;/p&gt;

&lt;h2 id=&#34;clojure-at-a-bank-freeing-the-rules&#34;&gt;Clojure at a Bank – Freeing the Rules&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.pitheringabout.com/?p=830&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Jon Pither about converting OO business rules into Clojure and using the homoiconicity for increasing the power: when code is data, the rules themselves become searchable (using a search engine), visualizable and analyzable. This wasn&amp;rsquo;t possible before when code was not data.&lt;/p&gt;

&lt;p&gt;They have also build further tools to analyze rules with larger sets of data, rather than unit tests, to see if they conflict among each other.&lt;/p&gt;

&lt;p&gt;Tags: jon-pither, clojure, homoiconicity, code=data, data=code, rule, rule-engine, bank, business-rule, code-analysis&lt;/p&gt;

&lt;h2 id=&#34;five-reasons-to-learn-clojure-and-emacs-together&#34;&gt;Five reasons to learn Clojure and Emacs together&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.pitheringabout.com/?p=849&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Jon Pither advocating the learning of Clojure and Emacs at the same time. The main reasons are: liberation, change, support, simplicity, mass adoption.&lt;/p&gt;

&lt;p&gt;Cites that being hard to learn a new editor is a good idea to separate those who are willing to invest the time in learning (both an editor and a new language) from those who don&amp;rsquo;t.&lt;/p&gt;

&lt;p&gt;Tags: clojure, emacs, jon-pither, learning, liberation, change, support, simplicity, mass-adoption&lt;/p&gt;

&lt;h2 id=&#34;pull-requests-maintainers-won-t-hate&#34;&gt;Pull Requests Maintainers Won&amp;rsquo;t Hate&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this &lt;a href=&#34;https://www.booleanknot.com/blog/2013/09/07/pull-requests.html&#34; target=&#34;_blank&#34;&gt;list of tips&lt;/a&gt; by James Reeves on improving the pull requests
Tags: pull-request, james-reeves, tip, list&lt;/p&gt;

&lt;h2 id=&#34;how-to-get-rich-in-tech-guaranteed&#34;&gt;How to get rich in tech, guaranteed.&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://startupljackson.com/post/135800367395/how-to-get-rich-in-tech-guaranteed&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; that describes what is a way to make good money and retire rich why working for a company.&lt;/p&gt;

&lt;p&gt;It also explains about entering the startup market, what questions should be asked, what&amp;rsquo;s your real value, what are the benefits of doing it, known limitations and other questions&lt;/p&gt;

&lt;p&gt;Tags: startup, career, career-management, work, professional-career, value, money&lt;/p&gt;

&lt;h2 id=&#34;modern-perl-4th-edition-a-review&#34;&gt;Modern Perl 4th edition, a review&lt;/h2&gt;

&lt;p&gt;I have read &lt;a href=&#34;http://perltricks.com/article/205/2015/12/21/Modern-Perl-4th-edition--a-review&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; that explains how this new book covers the syntax, idioms and the rest of the Perl language.&lt;/p&gt;

&lt;p&gt;In this 4th edition, parts of  the text have completely been rewritten, a New formatting applied to ease and improve the reading comprehension&lt;/p&gt;

&lt;p&gt;Tags: book-review, review, david-farrell, perl, reedition, modern-perl&lt;/p&gt;

&lt;h2 id=&#34;8-characteristics-of-agile-software-developers&#34;&gt;8 Characteristics of Agile Software Developers&lt;/h2&gt;

&lt;p&gt;​I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@pm_loop/8-characteristics-of-successful-agile-software-developers-ab2c43abb959&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; that describes what characteristics are common in companies practicing an agile methodology, as revealed by a study (that even though it&amp;rsquo;s not cited, can be tracked back to &lt;a href=&#34;http://productdevelopmentsuccess.com/study&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;Suggests ideas for teams that change in a changing environment and what to do about it.&lt;/p&gt;

&lt;p&gt;Written by Keela Robison.&lt;/p&gt;

&lt;p&gt;Tags: keela-robison, agile, team-management&lt;/p&gt;

&lt;h2 id=&#34;this-is-why-you-never-end-up-hiring-good-developers&#34;&gt;This is why you never end up hiring good developers&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://qz.com/258066/this-is-why-you-dont-hire-good-developers/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; that explains what to look for in a strong, stronger, strongest (software) developer&lt;/p&gt;

&lt;p&gt;The main idea is to find a good person that fits the job, without inflicting pain in the team morale and can learn to perform the specific tasks in the future, as (paraprasing) the pool of people that know what you need is much smaller than the people who can learn it.&lt;/p&gt;

&lt;p&gt;The article specifies what to look and not look for in a candidate.&lt;/p&gt;

&lt;p&gt;Some quotes:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;grasp of complex topics and the ability to clearly communicate about them, which are the two jobs of the working engineer.&lt;/p&gt;

&lt;p&gt;track record of learning new skills and applying them successfully&lt;/p&gt;

&lt;p&gt;TL;DR:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Many interview techniques test skills that are at best irrelevant to real working life;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;you want somebody who knows enough to do the job right now;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;or somebody smart and motivated enough that they can learn the job quickly;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;you want somebody who keeps getting better at what they do;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;your interview should be a collaborative conversations, not a combative interrogation;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;you also want somebody who you will enjoy working with;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;it’s important to separate “enjoy working with” from “enjoy hanging out with;”&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;don’t hire assholes, no matter how good they are;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;if your team isn’t diverse, your team is worse than it needed to be;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;accept that hiring takes a really long time and is really, really hard.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;effective-learning-strategies-for-programmers-1&#34;&gt;Effective Learning Strategies for Programmers&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve (re-)read &lt;a href=&#34;http://akaptur.com/blog/2015/10/10/effective-learning-strategies-for-programmers/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Allison Kaptur on fixed vs growth mindset and the need for having the latter for being a programmer.&lt;/p&gt;

&lt;p&gt;The fixed mindset is present in the 10x-engineer, and the worshipping of heroes.&lt;/p&gt;

&lt;p&gt;It also includes a recipe for changing from a fixed-mindset to a growth-mindset.&lt;/p&gt;

&lt;p&gt;(Note: this entry is also present in this same month)&lt;/p&gt;

&lt;p&gt;Tags: allison-kaptur, fixed-mindset, growth-mindset, research, learning-strategy, recurse-center, carol-dweck, mindset, 10x-engineer, impostor-syndrome&lt;/p&gt;

&lt;h2 id=&#34;doctor-please-fix-my-agile&#34;&gt;Doctor! Please fix my agile!&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://dl.dropboxusercontent.com/u/59614769/Presentations/Doctor%20please%20fix%20my%20Agile.pdf&#34; target=&#34;_blank&#34;&gt;these slides&lt;/a&gt; by Ville Törmälä on what is agile, organizational problems and the distinction between efficiency and effectiveness. Also talks about the distribution of time and the organization of the environment (what calls)&lt;/p&gt;

&lt;p&gt;Tags: slide, agile, efficiency, effectiveness, tip, organization, ville-tormala, project-thinking, team-thinking&lt;/p&gt;

&lt;h2 id=&#34;wolf-narrative-considered-harmful-also-biologically-unlikely&#34;&gt;“Wolf” narrative considered harmful (also biologically unlikely)&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://laughingmeme.org/2014/09/02/wolf-narrative-considered-harmful-also-biologically-unlikely/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; that explains what the &amp;ldquo;lone wolf&amp;rdquo; archetype is, among programmers, and possible outcomings for those profiles. Written by Kellan Elliott-McCrea.&lt;/p&gt;

&lt;p&gt;Describes some craftsmanship ideas for these roles, based on their proficiency with their tools, that will generate tools for the rest of the team and make the rest more effective. Also discusses the non-management advancement career.&lt;/p&gt;

&lt;p&gt;Tags: analogy, wolf, lone-wolf, archetype, programmer, programmer-analogy, profile, team-management, kellan-elliott-mccrea&lt;/p&gt;

&lt;h2 id=&#34;the-wolf-dictating-their-own-terms&#34;&gt;The Wolf - dictating their own terms&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://randsinrepose.com/archives/the-wolf/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Michael Lopp about the &lt;code&gt;wolf&lt;/code&gt; position as a person or in a team. He describes their characteristics and his own experiences working with them.&lt;/p&gt;

&lt;p&gt;Tags: management, wolf, team-management, analogy, michael-lopp&lt;/p&gt;

&lt;h2 id=&#34;volkswagen-and-cheating-software&#34;&gt;Volkswagen and Cheating Software&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://www.schneier.com/crypto-gram/archives/2015/1015.html#1&#34; target=&#34;_blank&#34;&gt;this essay&lt;/a&gt; by Bruce Schneier on cheating software, using as an example the Volkswagen case, but especially centered on software that is made do cheat in an undetectable fashion. Or that could be attributed to a programming mistake. The later, says the author, is so common that there could be already intentional or unintentional errors hiding cheating.&lt;/p&gt;

&lt;p&gt;The author cites the Internet of Things of new opportunities for companies to use / produce cheating software and about a possible solution: transparency and oversight of the software that more and more reigns our lives.&lt;/p&gt;

&lt;p&gt;Other (opinion) articles I&amp;rsquo;ve read on the issue are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.nytimes.com/2015/09/24/opinion/volkswagen-and-the-era-of-cheating-software.html&#34; target=&#34;_blank&#34;&gt;Volkswagen and the Era of Cheating Software&lt;/a&gt; by Zeynep Tufekci&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://fusion.net/story/202867/volkswagen-software-deception-ai/&#34; target=&#34;_blank&#34;&gt;Volkswagen isn’t the first company to use software to break the law and it won’t be the last&lt;/a&gt; by Daniela Hernandez&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.slate.com/articles/technology/future_tense/2015/09/volkswagen_s_cheating_emissions_software_and_the_threat_of_black_boxes.html&#34; target=&#34;_blank&#34;&gt;Harry Potter and the Mysterious Defeat Device&lt;/a&gt; by James Grimmelmann&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tags: cryptogram, bruce Schneier, volkswagen, mistake, quality, transparency, oversight, iot, essay, cheating, cheating software&lt;/p&gt;

&lt;h2 id=&#34;please-java-do-finally-support-multiline-string-literals&#34;&gt;Please, Java. Do Finally Support Multiline String Literals&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.jooq.org/2015/12/29/please-java-do-finally-support-multiline-strings/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; explaining the need for multi-line string literal in java.&lt;/p&gt;

&lt;p&gt;Tags: java, syntax, string, feature, multi-line string&lt;/p&gt;

&lt;h2 id=&#34;the-silver-bullet-syndrome&#34;&gt;The Silver Bullet Syndrome&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched &lt;a href=&#34;https://www.youtube.com/watch?v=3wyd6J3yjcs&#34; target=&#34;_blank&#34;&gt;this talk&lt;/a&gt; by Hadi Hariri about chasing the next silver bullet.&lt;/p&gt;

&lt;p&gt;He explains this with javascript and nodejs, but it could be exemplified with other technologies / promises as well.&lt;/p&gt;

&lt;p&gt;Note: ABC stands for:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A = address&lt;/li&gt;
&lt;li&gt;B = binding&lt;/li&gt;
&lt;li&gt;C = contract&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tags: hadi-hariri, silver-bullet, talk, devoxx&lt;/p&gt;

&lt;h2 id=&#34;writing-clean-tests-small-is-beautiful&#34;&gt;Writing Clean Tests – Small Is Beautiful&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.petrikainulainen.net/programming/testing/writing-clean-tests-small-is-beautiful/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Petri Kainulainen on writing BDD style tests with JUnit in java.&lt;/p&gt;

&lt;p&gt;There is &lt;a href=&#34;https://github.com/NitorCreations/CoreComponents/tree/master/junit-runners&#34; target=&#34;_blank&#34;&gt;a tool&lt;/a&gt;, created by Nitor Creations that allows you to write nested classes in JUnit, allowing for test specialization.&lt;/p&gt;

&lt;p&gt;Tags: junit, runner, bdd, test, nitor-creations, petri-kainulainen, tdd&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>