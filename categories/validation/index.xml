<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>validation on The long way through Software Craftsmanship</title>
    <link>https://alvarogarcia7.github.io/categories/validation/</link>
    <description>Recent content in validation on The long way through Software Craftsmanship</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 01 Apr 2019 10:32:19 +0000</lastBuildDate><atom:link href="https://alvarogarcia7.github.io/categories/validation/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Self-Study in April 2019</title>
      <link>https://alvarogarcia7.github.io/blog/2019/04/01/self-study-april-2019/</link>
      <pubDate>Mon, 01 Apr 2019 10:32:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2019/04/01/self-study-april-2019/</guid>
      <description>How to validate password with regular expression Explains the &amp;lsquo;?=&amp;rsquo; character in a regex, to validate conditions. Make it &amp;lsquo;.*&amp;rsquo; to &amp;lsquo;contain&amp;rsquo;, rather than &amp;lsquo;startWith&amp;rsquo;
Tags: password, validation, look-ahead, regex, regular-expression
Id: 2ed5999a-555f-11e9-8bf8-0242ac110005 Read: Tue, 02 Apr 2019 15:51:30 +0000
Unlock honest feedback from your employees with this one word I&amp;rsquo;ve read this article about asking for advice instead of asking for feedback and how that helped.
Tags: comparison, advice, feedback</description>
    </item>
    
    <item>
      <title>Validating CSV data in clojure</title>
      <link>https://alvarogarcia7.github.io/blog/2015/12/15/validating-data-clojure/</link>
      <pubDate>Tue, 15 Dec 2015 11:52:28 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/12/15/validating-data-clojure/</guid>
      <description>At a client, we have CSVs of data that can be simplified to this 1:
(def data [ [&amp;#34;total&amp;#34; 6 8 13] [&amp;#34;0&amp;#34; 1 2 3] [&amp;#34;0&amp;#34; 2 0 4] [&amp;#34;0&amp;#34; 3 0 6] ]) In this case, some of the row named total is the sum of the rest of the rows, but only for some columns (second and fourth). We do not want to get rid of the columns, as they need to be printed at the end.</description>
    </item>
    
  </channel>
</rss>
