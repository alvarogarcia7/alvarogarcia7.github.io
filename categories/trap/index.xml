<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>trap on The long way through Software Craftsmanship</title>
    <link>https://alvarogarcia7.github.io/categories/trap/</link>
    <description>Recent content in trap on The long way through Software Craftsmanship</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 01 Jun 2019 10:32:19 +0000</lastBuildDate><atom:link href="https://alvarogarcia7.github.io/categories/trap/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Self-Study in June 2019</title>
      <link>https://alvarogarcia7.github.io/blog/2019/06/01/self-study-june-2019/</link>
      <pubDate>Sat, 01 Jun 2019 10:32:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2019/06/01/self-study-june-2019/</guid>
      <description>(h0p3&amp;rsquo;s Wiki) This is a highly customized tiddlyWiki, from h0p3.
Tags: wiki, personal-knowledge-base, h0p3
Id: b8b3d973-9611-4180-854a-0242ac110003 Read: Fri, 7 Jun 2019 13:20:26 +0000
Debug bash scripts This article explains how to debug bash scripts using the DEBUG trap.
Declares several log levels for the commands
Tags: debug, bash, trap, help, script
Id: 39f76af4-99ce-48b6-adc1-0242ac110003 Read: Fri, 7 Jun 2019 13:20:26 +0000
Understanding Rust Lifetimes Describes rust lifetimes, lifetime parameters.
Compares them to C++ pointers (in the sense they are difficult to learn, but make things explicit).</description>
    </item>
    
    <item>
      <title>Tool: Building a local pipeline</title>
      <link>https://alvarogarcia7.github.io/blog/2015/10/10/tool_building_local_pipeline/</link>
      <pubDate>Sat, 10 Oct 2015 11:06:58 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/10/10/tool_building_local_pipeline/</guid>
      <description>Motivation At a client, one of the projects has a long building process and the tests are mostly slow, so I use a local building pipeline, an example of the Pipes and Filters pattern.
This allows for executing manually only the fast unit tests, then automatically (no user intervention, no time spent) executing the rest of them before pushing. In case the latter fails, it is possible to do git push -f to the pipeline without corrupting the central repository (origin) history, possibly disturbing others.</description>
    </item>
    
  </channel>
</rss>
