<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>qa on The long way through Software Craftsmanship</title>
    <link>https://alvarogarcia7.github.io/categories/qa/</link>
    <description>Recent content in qa on The long way through Software Craftsmanship</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 18 May 2015 22:20:09 +0000</lastBuildDate><atom:link href="https://alvarogarcia7.github.io/categories/qa/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Internal training: QA &amp;amp; how to test</title>
      <link>https://alvarogarcia7.github.io/blog/2015/05/18/internal-training-qa-and-how-to-test/</link>
      <pubDate>Mon, 18 May 2015 22:20:09 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/05/18/internal-training-qa-and-how-to-test/</guid>
      <description>At a client, we&amp;rsquo;ve done today an internal training on &amp;ldquo;QA &amp;amp; how to test&amp;rdquo;. In it, the most skilled person with the QA role in the dev team has explained to us some techniques and concepts for testing
My notes Verification vs validation: building the product right vs building the right product.
Principles Extracted from ISTQB:
 testing shows presence of defects exhaustive testing is impossible early testing is better than later testing defect clustering: areas with bigger defect ratio or more critical, etc should be tested more thoroughly pesticide paradox testing is context-dependent absence of errors fallacy: the absence of defects does not imply perfect software.</description>
    </item>
    
  </channel>
</rss>
