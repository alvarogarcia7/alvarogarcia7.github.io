<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>The long way through Software Craftsmanship</title>
    <link>https://alvarogarcia7.github.io/categories/sql/index.xml</link>
    <description>Recent content on The long way through Software Craftsmanship</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="https://alvarogarcia7.github.io/categories/sql/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Self-Study in April 2019</title>
      <link>https://alvarogarcia7.github.io/blog/2019/04/01/self-study-april-2019/</link>
      <pubDate>Mon, 01 Apr 2019 10:32:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2019/04/01/self-study-april-2019/</guid>
      <description>

&lt;h2 id=&#34;how-to-validate-password-with-regular-expression-https-www-mkyong-com-regular-expressions-how-to-validate-password-with-regular-expression&#34;&gt;&lt;a href=&#34;https://www.mkyong.com/regular-expressions/how-to-validate-password-with-regular-expression/&#34; target=&#34;_blank&#34;&gt;How to validate password with regular expression&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Explains the &amp;lsquo;?=&amp;rsquo; character in a regex, to validate conditions. Make it &amp;lsquo;.*&amp;rsquo; to &amp;lsquo;contain&amp;rsquo;, rather than &amp;lsquo;startWith&amp;rsquo;&lt;/p&gt;

&lt;p&gt;Tags: password, validation, look-ahead, regex, regular-expression&lt;/p&gt;

&lt;p&gt;Id: 2ed5999a-555f-11e9-8bf8-0242ac110005
Read: Tue, 02 Apr 2019 15:51:30 +0000&lt;/p&gt;

&lt;h2 id=&#34;unlock-honest-feedback-from-your-employees-with-this-one-word-https-knowyourteam-com-blog-2017-12-01-unlock-honest-feedback-from-your-employees-with-this-one-word&#34;&gt;&lt;a href=&#34;https://knowyourteam.com/blog/2017/12/01/unlock-honest-feedback-from-your-employees-with-this-one-word/&#34; target=&#34;_blank&#34;&gt;Unlock honest feedback from your employees with this one word&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article about asking for advice instead of asking for feedback and how that helped.&lt;/p&gt;

&lt;p&gt;Tags: comparison, advice, feedback&lt;/p&gt;

&lt;p&gt;Id: 3ca65d4c-577c-11e9-88ac-0242ac110005
Read: Fri, 05 Apr 2019 08:24:31 +0000&lt;/p&gt;

&lt;h2 id=&#34;8-simple-steps-to-identify-and-avoid-groupthink-in-meetings-https-highfive-com-blog-8-steps-to-avoid-groupthink-in-meetings&#34;&gt;&lt;a href=&#34;https://highfive.com/blog/8-steps-to-avoid-groupthink-in-meetings&#34; target=&#34;_blank&#34;&gt;8 SIMPLE STEPS TO IDENTIFY AND AVOID GROUPTHINK IN MEETINGS&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this article explaining the dangers of Group think, some solutions.&lt;/p&gt;

&lt;p&gt;Defined in 1972 by  Irving L. Janis in a book by the same title, it&amp;rsquo;s more present when the group exhibits these behaviors:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A strong, persuasive group leader.&lt;/li&gt;
&lt;li&gt;A high level of group cohesion.&lt;/li&gt;
&lt;li&gt;Intense pressure from the outside to make a good decision&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tags: groupthink, team-management, book, group, team, team-dynamic, technique, irving-janis&lt;/p&gt;

&lt;p&gt;Id: 6c90065c-577c-11e9-8741-0242ac110005
Read: Fri, 05 Apr 2019 08:25:52 +0000&lt;/p&gt;

&lt;h2 id=&#34;busy-person-patterns-https-hillside-net-plop-2006-papers-library-plop-20busy-20person-20pattern-20v8-pdf&#34;&gt;&lt;a href=&#34;https://hillside.net/plop/2006/Papers/Library/PLoP%20Busy%20Person%20Pattern%20v8.pdf&#34; target=&#34;_blank&#34;&gt;Busy Person Patterns&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;This is a book of patterns (related to &amp;lsquo;A pattern language&amp;rsquo;, by Alexander et al) about Busy People (in a good way).&lt;/p&gt;

&lt;p&gt;This is a collection of patterns to help you achieve productivity, efficiency, efficacy.&lt;/p&gt;

&lt;p&gt;Explains how the patterns relate to one another, how they interact. Also, a quick reference based on the mood you&amp;rsquo;re experiencing&lt;/p&gt;

&lt;p&gt;Tags: patter, pattern-language, alexander, busy, productivity, efficiency, efficacy, plop, just-start, contiguous-time-blocks, single-task-important-items, put-it-off, seek-clarification, batch-the-simple-stuff, task-jar, strike-when-you-are-hot, feedback-loop, prioritize, delegate, drop-unimportant-tasks, good-enough, james-kile, donald-little, samir-shah&lt;/p&gt;

&lt;p&gt;Id: bcd32324-59e3-11e9-9acf-0242ac110005
Read: Mon, 08 Apr 2019 09:50:27 +0000&lt;/p&gt;

&lt;h2 id=&#34;data-management-platforms-demystified-http-www-bluekai-com-files-dmp-demystified-whitepaper-bluekai-pdf&#34;&gt;&lt;a href=&#34;http://www.bluekai.com/files/DMP_Demystified_Whitepaper_BlueKai.pdf&#34; target=&#34;_blank&#34;&gt;Data Management Platforms Demystified&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;This whitepaper explains what a DMP is, how does it convert, etc.&lt;/p&gt;

&lt;p&gt;Tags: dmp, data-management-platform, bluekai, ad, conversion&lt;/p&gt;

&lt;p&gt;Id: fecb0a0a-5ab8-11e9-b7b7-0242ac110005
Read: Tue, 09 Apr 2019 11:17:00 +0000&lt;/p&gt;

&lt;h2 id=&#34;ethical-alternatives-resources-https-ethical-net-resources&#34;&gt;&lt;a href=&#34;https://ethical.net/resources/&#34; target=&#34;_blank&#34;&gt;Ethical Alternatives &amp;amp; Resources&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Some 300 hundred links of ethical products &amp;amp; services&lt;/p&gt;

&lt;p&gt;Tags: ethics, ethical, alternative, resource&lt;/p&gt;

&lt;p&gt;Id: cbf45e14-5ae6-11e9-a6ff-0242ac110006
Read: Tue, 09 Apr 2019 16:44:52 +0000&lt;/p&gt;

&lt;h2 id=&#34;code-highlights-in-slides-com-https-slides-com-news-code-line-numbers-7&#34;&gt;&lt;a href=&#34;https://slides.com/news/code-line-numbers#/7&#34; target=&#34;_blank&#34;&gt;Code highlights in slides.com&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;This article explains how to highlight code in the slides.com software/site&lt;/p&gt;

&lt;p&gt;Tags: slides.com, slide, code, highlight, tool, presentation&lt;/p&gt;

&lt;p&gt;Id: 81d8a6ee-5c3c-11e9-9583-0242ac110006
Read: Thu, 11 Apr 2019 09:30:55 +0000&lt;/p&gt;

&lt;h2 id=&#34;seven-databases-in-seven-weeks-fall-2014-https-db-cs-cmu-edu-seminar2014&#34;&gt;&lt;a href=&#34;https://db.cs.cmu.edu/seminar2014/&#34; target=&#34;_blank&#34;&gt;SEVEN DATABASES IN SEVEN WEEKS - FALL 2014&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;This course by the CMU (Carnegie-Mellon University) explains 7 databases in 7 weeks, one per talk.&lt;/p&gt;

&lt;p&gt;Talks about SQL, NoSQL (key-value), about speed, about data management&lt;/p&gt;

&lt;p&gt;Tags: database, book, cmu, carnegie-mellon-university, course, university, db, mongodb, index, memsql, voltdb, nuodb, sql-server&lt;/p&gt;

&lt;p&gt;Id: 683816f6-5c3d-11e9-aadc-0242ac110006
Read: Thu, 11 Apr 2019 09:37:22 +0000&lt;/p&gt;

&lt;h2 id=&#34;startup-stock-options-why-a-good-deal-has-gone-bad-https-news-ycombinator-com-item-id-19624164&#34;&gt;&lt;a href=&#34;https://news.ycombinator.com/item?id=19624164&#34; target=&#34;_blank&#34;&gt;Startup Stock Options – Why a Good Deal Has Gone Bad&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;An interesting quote:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Valid reasons to work for a startup:
- You are a cofounder.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;You have little experience and you are using this to break into the industry, and get experience on many different &amp;gt; technologies (&amp;ldquo;wear many hats&amp;rdquo;).&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;They are working on a very specific problem or using a specific technology that you strongly desire to work on and it&amp;rsquo;s &amp;gt; difficult to do it anywhere else.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;You want to work a certain way (remote, on the beach, whatever) and they are willing to go this route.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Invalid reasons for working at a startup:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Getting rich off stock options.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Making a lot of money in salary.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Work / life balance.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Stability.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tags: quote, startup, career-management, ycombinator, james-seibel, work&lt;/p&gt;

&lt;p&gt;Id: d074c386-5c3d-11e9-a6ce-0242ac110006
Read: Thu, 11 Apr 2019 09:40:17 +0000&lt;/p&gt;

&lt;h2 id=&#34;let-s-build-a-simple-database-https-cstack-github-io-db-tutorial&#34;&gt;&lt;a href=&#34;https://cstack.github.io/db_tutorial/&#34; target=&#34;_blank&#34;&gt;Let&amp;rsquo;s Build a Simple Database&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;This is walk-through guide to create a database, in C&lt;/p&gt;

&lt;p&gt;Tags: database, create, workshop, walkthrough, c-lang, c, sqlite, clone, project, cstack, repl, sql, algorithm, b-tree, cursor&lt;/p&gt;

&lt;p&gt;Id: 8b8ea88e-5848-11e9-b07b-0242ac110002
Read: Sat, 06 Apr 2019 08:47:01 +0000&lt;/p&gt;

&lt;h2 id=&#34;a-universal-modular-actor-formalism-for-artificial-intelligence-http-worrydream-com-refs-hewitt-actormodel-pdf&#34;&gt;&lt;a href=&#34;http://worrydream.com/refs/Hewitt-ActorModel.pdf&#34; target=&#34;_blank&#34;&gt;A Universal Modular ACTOR Formalism for Artificial Intelligence&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;In this seminal paper, Hewitt describes the actor model.&lt;/p&gt;

&lt;p&gt;Full of quotes from Lewis Carroll.&lt;/p&gt;

&lt;p&gt;Tags: actor, actor-model, hewitt, quote, lewis-carroll, planner, 1973, pdp, structured-programming, classic, seminal, architecture&lt;/p&gt;

&lt;p&gt;Id: b60f9642-6098-11e9-bbfd-0242ac110003
Read: Tue, 16 Apr 2019 22:41:01 +0000&lt;/p&gt;

&lt;h2 id=&#34;all-remote-https-about-gitlab-com-company-culture-all-remote&#34;&gt;&lt;a href=&#34;https://about.gitlab.com/company/culture/all-remote/&#34; target=&#34;_blank&#34;&gt;All Remote&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;The remote manifesto by gitlab.&lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;All-remote work promotes:&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Hiring and working from all over the world instead of from a central location.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Flexible working hours over set working hours.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Writing down and recording knowledge over verbal explanations.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Written down processes over on-the-job training.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Public sharing of information over need-to-know access.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Opening up every document for editing by anyone over top-down control of documents.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Asynchronous communication over synchronous communication.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The results of work over the hours put in.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Formal communication channels over informal communication channels.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;Some tools to make this happen:
  * Faster internet everywhere - 100Mb/s+ cable, 5GHz Wifi, 4G cellular
  * Video call software - Google Hangouts, Zoom
  * Mobile technology - Everyone has a computer in their pocket
  * Evolution of speech-to-text conversion software - more accurate and faster than typing
  * Messaging apps - Slack, Mattermost, Zulip
  * Issue trackers - Trello, GitHub issues, GitLab issues
  * Suggestions - GitHub Pull Requests, GitLab Merge Requests
  * Static websites - GitHub Pages, GitLab Pages
  * English proficiency - More people are learning English
  * Increasing traffic congestion in cities&lt;/p&gt;

&lt;p&gt;Tags: tool, gitlab, remote, remote-work, manifesto, work&lt;/p&gt;

&lt;p&gt;Id: d71b9822-6b38-11e9-9973-0242ac110003
Read: Tue, 30 Apr 2019 11:12:28 +0000&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Self-Study in March 2019</title>
      <link>https://alvarogarcia7.github.io/blog/2019/03/01/self-study-march-2019/</link>
      <pubDate>Fri, 01 Mar 2019 10:32:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2019/03/01/self-study-march-2019/</guid>
      <description>

&lt;h2 id=&#34;nodejs-logging-made-right-https-itnext-io-nodejs-logging-made-right-117a19e8b4ce&#34;&gt;&lt;a href=&#34;https://itnext.io/nodejs-logging-made-right-117a19e8b4ce&#34; target=&#34;_blank&#34;&gt;NodeJS logging made right&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Explains logging and tracing in nodejs.&lt;/p&gt;

&lt;p&gt;Usage of thread-local storage, trace id, continuation local storage.&lt;/p&gt;

&lt;p&gt;Tags: nodejs, logging, tracing, thread-local, thread-local-storage, trace-id, continuation-local-storage, cls, tls, proxy, hook&lt;/p&gt;

&lt;p&gt;Id: 5bed4596-3f5b-11e9-83e1-0242ac110005
Read: Tue, 05 Mar 2019 15:28:42 +0000&lt;/p&gt;

&lt;h2 id=&#34;web-design-3-0-when-your-web-design-really-matters-https-nicepage-com-doc-article-20348-web-design-3-0-when-your-web-design-really-matters&#34;&gt;&lt;a href=&#34;https://nicepage.com/doc/article/20348/web-design-3-0-when-your-web-design-really-matters&#34; target=&#34;_blank&#34;&gt;Web Design 3.0: When Your Web Design Really Matters&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;In Chapter 1, we will find out how Web Design is changing. Also, you will learn about the birth of the new generation of web designers, who are designing web pages in Web Design 3.0.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;In Chapter 2, we will talk about website builders that are lagging behind the trends and slowing down the Web Design evolution.&lt;/p&gt;

&lt;p&gt;In Chapter 3, you will learn how to create modern web designs quickly and easily in a new way.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Has walk through the different design phases, techniques; both in press (printed) design as in web design.&lt;/p&gt;

&lt;p&gt;Explains some web builders.&lt;/p&gt;

&lt;p&gt;Explains the concept of the web 3.0:&lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Free positioning.&lt;/li&gt;
&lt;li&gt;Element overlapping.&lt;/li&gt;
&lt;li&gt;Breaking the limitations of Bootstrap-like Grids.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;States the different needs for webmasters and designers:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Web Designers need:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Free positioning&lt;/li&gt;
&lt;li&gt;Removing table constraints&lt;/li&gt;
&lt;li&gt;Layers&lt;/li&gt;
&lt;li&gt;Property Panel for elements&lt;/li&gt;
&lt;li&gt;Support for Windows and Mac OS&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Webmasters need:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Clean HTML and CSS&lt;/li&gt;
&lt;li&gt;Mobile device support&lt;/li&gt;
&lt;li&gt;WordPress and Joomla support&lt;/li&gt;
&lt;li&gt;Building websites online&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;Summary&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Website builders are lagging behind the rapidly changing Web Design world.&lt;/p&gt;

&lt;p&gt;The history of web design tools has involved several transitions. However, progress has stopped. There are numerous signs that the new transition must happen.&lt;/p&gt;

&lt;p&gt;There are separate markets for web designers and webmasters. Popular website builders do not support the main features of Web Design 3.0: free positioning, modern grids, and layers.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tags: comparison, web-design, print-design, web-builder, creativity, metaphor, grid-layout, bootstrap, flexibility, design, web-3.0, web-design-3.0, web-2.0, progression&lt;/p&gt;

&lt;p&gt;Id: 5101ce2e-3f5e-11e9-83d9-0242ac110005
Read: Tue, 05 Mar 2019 15:49:52 +0000&lt;/p&gt;

&lt;h2 id=&#34;gotify-a-self-hosted-push-notifications-service-https-news-ycombinator-com-item-id-19347848&#34;&gt;&lt;a href=&#34;https://news.ycombinator.com/item?id=19347848&#34; target=&#34;_blank&#34;&gt;Gotify – a self-hosted push-notifications service&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Tags: gotify, self-hosted, notification, notification-service, android, open-source&lt;/p&gt;

&lt;p&gt;Id: e839c82a-4367-11e9-b34d-0242ac110007
Read: Sun, 10 Mar 2019 19:08:36 +0000&lt;/p&gt;

&lt;h2 id=&#34;ask-hn-how-to-speak-like-a-leader-not-like-an-engineer-https-news-ycombinator-com-item-id-19349676&#34;&gt;&lt;a href=&#34;https://news.ycombinator.com/item?id=19349676&#34; target=&#34;_blank&#34;&gt;Ask HN: How to speak like a leader, not like an engineer?&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Links and resources for speaking like a leader&lt;/p&gt;

&lt;p&gt;Tags: leader, engineer, comparison, change, public-speaking, speak, speaking, career-management, career-change, professional-growth, resource:&lt;/p&gt;

&lt;p&gt;Id: 1a478fc8-4368-11e9-b657-0242ac110007
Read: Sun, 10 Mar 2019 19:10:00 +0000&lt;/p&gt;

&lt;h2 id=&#34;archivebox-open-source-self-hosted-web-archive-https-news-ycombinator-com-item-id-19346985&#34;&gt;&lt;a href=&#34;https://news.ycombinator.com/item?id=19346985&#34; target=&#34;_blank&#34;&gt;ArchiveBox: Open-source self-hosted web archive&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Tools for archiving purposes. Has links to other sites:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/machawk1/warcreate&#34; target=&#34;_blank&#34;&gt;https://github.com/machawk1/warcreate&lt;/a&gt;
&lt;a href=&#34;https://getpolarized.io/&#34; target=&#34;_blank&#34;&gt;https://getpolarized.io/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tags: burtonator, web-archive, polarized, warch, warc, personal-knowledge-base&lt;/p&gt;

&lt;p&gt;Id: 4168161c-436e-11e9-aa0d-0242ac110007
Read: Sun, 10 Mar 2019 19:54:03 +0000&lt;/p&gt;

&lt;h2 id=&#34;ask-hn-as-a-freelancer-what-s-the-best-app-to-track-finances-https-news-ycombinator-com-item-id-19450331&#34;&gt;&lt;a href=&#34;https://news.ycombinator.com/item?id=19450331&#34; target=&#34;_blank&#34;&gt;Ask HN: As a freelancer, what&amp;rsquo;s the best app to track finances?&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Describes tools for finance for freelancers. Stresses the importance of time wealth&lt;/p&gt;

&lt;p&gt;Tags: time-management, money-management, freelance, tool, ask-hn, hackernews, finance, time-wealth, money-wealth&lt;/p&gt;

&lt;p&gt;Id: b74a6696-4c83-11e9-99bd-0242ac110005
Read: Fri, 22 Mar 2019 09:20:21 +0000&lt;/p&gt;

&lt;h2 id=&#34;what-i-learned-in-my-first-year-as-a-solo-founder-https-tik-dev-lessons-learned&#34;&gt;&lt;a href=&#34;https://tik.dev/lessons-learned&#34; target=&#34;_blank&#34;&gt;What I Learned in My First Year as a Solo Founder&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Learnings by a solo founder.&lt;/p&gt;

&lt;p&gt;Benefits of having a side project or side hustle&lt;/p&gt;

&lt;p&gt;Tags: side-hustle, side-business, learning, reflection, solo-founder, founder, revenue&lt;/p&gt;

&lt;p&gt;Id: f0dee42c-5142-11e9-9444-0242ac110006
Read: Thu, 28 Mar 2019 10:19:16 +0000&lt;/p&gt;

&lt;h2 id=&#34;write-tests-not-too-many-mostly-integration-https-kentcdodds-com-blog-write-tests&#34;&gt;&lt;a href=&#34;https://kentcdodds.com/blog/write-tests&#34; target=&#34;_blank&#34;&gt;Write tests. Not too many. Mostly integration.&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;This is a paraphrasing of some advice for healthy eating: &amp;lsquo;Eat food, not too much, mostly plants.&amp;rsquo; (Pollan)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Write tests.&lt;/p&gt;

&lt;p&gt;Often I find myself saving time when I put time in to write tests&lt;/p&gt;

&lt;p&gt;Not too many: you get diminishing returns on your tests as the coverage increases [&amp;hellip;]&lt;/p&gt;

&lt;p&gt;Mostly integration: as you move up the pyramid, the confidence quotient of each form of testing increases&lt;/p&gt;

&lt;p&gt;Integration tests strike a great balance on the trade-offs between confidence and speed/expense&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tags: unit-test, testing, test-pyramid, healthy-testing, advice, integration-test, quote, kent-c-dodds, analogy&lt;/p&gt;

&lt;p&gt;Id: d148d774-5144-11e9-94d8-0242ac110006
Read: Thu, 28 Mar 2019 10:32:42 +0000&lt;/p&gt;

&lt;h2 id=&#34;7-rules-for-eating-https-www-webmd-com-food-recipes-news-20090323-7-rules-for-eating&#34;&gt;&lt;a href=&#34;https://www.webmd.com/food-recipes/news/20090323/7-rules-for-eating&#34; target=&#34;_blank&#34;&gt;7 Rules for Eating&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;In this reference article, Michael Pollan explains his seven rules for eating:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Don&amp;rsquo;t eat anything your great grandmother wouldn&amp;rsquo;t recognize as food. &amp;ldquo;When you pick up that box of portable yogurt tubes, or eat something with 15 ingredients you can&amp;rsquo;t pronounce, ask yourself, &amp;ldquo;What are those things doing there?&amp;rdquo; Pollan says.&lt;/li&gt;
&lt;li&gt;Don’t eat anything with more than five ingredients, or ingredients you can&amp;rsquo;t pronounce.&lt;/li&gt;
&lt;li&gt;Stay out of the middle of the supermarket; shop on the perimeter of the store. Real food tends to be on the outer edge of the store near the loading docks, where it can be replaced with fresh foods when it goes bad.&lt;/li&gt;
&lt;li&gt;Don&amp;rsquo;t eat anything that won&amp;rsquo;t eventually rot. &amp;ldquo;There are exceptions &amp;ndash; honey &amp;ndash; but as a rule, things like Twinkies that never go bad aren&amp;rsquo;t food,&amp;rdquo; Pollan says.&lt;/li&gt;
&lt;li&gt;It is not just what you eat but how you eat. &amp;ldquo;Always leave the table a little hungry,&amp;rdquo; Pollan says. &amp;ldquo;Many cultures have rules that you stop eating before you are full. In Japan, they say eat until you are four-fifths full. Islamic culture has a similar rule, and in German culture they say, &amp;lsquo;Tie off the sack before it&amp;rsquo;s full.&amp;rsquo;&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Families traditionally ate together, around a table and not a TV, at regular meal times. It&amp;rsquo;s a good tradition. Enjoy meals with the people you love. &amp;ldquo;Remember when eating between meals felt wrong?&amp;rdquo; Pollan asks.&lt;/li&gt;
&lt;li&gt;Don&amp;rsquo;t buy food where you buy your gasoline. In the U.S., 20% of food is eaten in the car.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Also, four myths:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Food is a delivery vehicle for nutrients. What really matters isn&amp;rsquo;t broccoli but its fiber and antioxidants. If we get that right, we get our diet right. Foods kind of get in the way.&lt;/li&gt;
&lt;li&gt;We need experts to tell us how to eat. Nutrients are invisible and mysterious. &amp;ldquo;It is a little like religion,&amp;rdquo; Pollan said. &amp;ldquo;If a powerful entity is invisible, you need a priesthood to mediate your relation with food.&amp;rdquo;&lt;/li&gt;
&lt;li&gt;The whole point of eating is to maintain and promote bodily health. &amp;ldquo;You are either improving or ruining your health when you eat &amp;ndash; that is a very American idea,&amp;rdquo; Pollan says. &amp;ldquo;But there are many other reasons to eat food: pleasure, social community, identity, and ritual. Health is not the only thing going on on our plates.&amp;rdquo;&lt;/li&gt;
&lt;li&gt;There are evil foods and good foods. &amp;ldquo;At any given time there is an evil nutrient we try to drive like Satan from the food supply &amp;ndash; first it was saturated fats, then it was trans fat,&amp;rdquo; Pollan says. &amp;ldquo;Then there is the evil nutrient&amp;rsquo;s doppelganger, the blessed nutrient. If we get enough of that we, will be healthy and maybe live forever. It&amp;rsquo;s funny through history how the good and bad guys keep changing.&amp;rdquo;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This can all be summarized as &amp;ldquo;Eat food, not too much, mostly plants.&amp;rdquo;&lt;/p&gt;

&lt;p&gt;Tags: healthy-eating, michael-pollan, rule, advice, myth, analogy&lt;/p&gt;

&lt;p&gt;Id: 30ece1fc-5145-11e9-87de-0242ac110006
Read: Thu, 28 Mar 2019 10:35:22 +0000&lt;/p&gt;

&lt;h2 id=&#34;lean-testing-or-why-unit-tests-are-worse-than-you-think-https-blog-usejournal-com-lean-testing-or-why-unit-tests-are-worse-than-you-think-b6500139a009&#34;&gt;&lt;a href=&#34;https://blog.usejournal.com/lean-testing-or-why-unit-tests-are-worse-than-you-think-b6500139a009&#34; target=&#34;_blank&#34;&gt;Lean Testing or Why Unit Tests are Worse than You Think&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;This article puts testing in an economic perspective. Calls it lean testing&lt;/p&gt;

&lt;p&gt;Also references/paraphrases Michael Pollan&amp;rsquo;s Rules for eating ().&lt;/p&gt;

&lt;p&gt;Creates a testing trophy, a figure to explain the best testing pattern, replacing the testing pyramid&lt;/p&gt;

&lt;p&gt;Explains return on investment (ROI) on tests&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;integration tests provide the best balance of cost, speed and confidence&lt;/p&gt;

&lt;p&gt;Integration tests lie somewhere between unit tests and end-to-end tests so they provide the best balance. Therefore, they have the highest ROI.&lt;/p&gt;

&lt;p&gt;The main idea is to just not mock so much&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tags: economic-perspective, lean-testing, testing-trophy, testing-pyramid, return-on-investment, roi, critical-path, testing, unit-test, anti-architecture, architecture, maintenance&lt;/p&gt;

&lt;p&gt;Id: efe85d00-5147-11e9-87ce-0242ac110006
Read: Thu, 28 Mar 2019 10:55:02 +0000&lt;/p&gt;

&lt;h2 id=&#34;end-user-programming-https-www-inkandswitch-com-end-user-programming-html&#34;&gt;&lt;a href=&#34;https://www.inkandswitch.com/end-user-programming.html&#34; target=&#34;_blank&#34;&gt;End-user programming&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;In this article, the writer explains some of the end-user modifications to programs. Examples include: adding download capabilities to instagram, generating backups for files.&lt;/p&gt;

&lt;p&gt;On the other hand, applications (especially mobile) are tightly sealed, not allowing modification or extension. Even FOSS (free, open source software), modification implies the learning curve / entry barrier of having to setup, compile, debug the original program and modifications.&lt;/p&gt;

&lt;p&gt;Gives the example of the UNIX command line, as a programming environment. One that provides (one of) the best REPL examples.&lt;/p&gt;

&lt;p&gt;Characterizes spreadsheets as ad-hoc databases, programs; mostly created by domain experts (aka subject matter experts), than professional software engineers. Take into account that these hats are non-exclusive: a domain expert can also be a professional software engineer.&lt;/p&gt;

&lt;p&gt;The author tries to coin the term &amp;ldquo;end-user programming&amp;rdquo; to differentiate it from programming by professional software developers, who try to build general-purpose apps, to be used by thousands of people.&lt;/p&gt;

&lt;p&gt;This also means, that a professional software developer can be an &amp;ldquo;end-user programmer&amp;rdquo;, when creating solutions for themselves (limited user group), rather than for the general public. Maybe those one-off scripts that we create, are some kind of end-user programs. This is described in the article as well.&lt;/p&gt;

&lt;p&gt;Talks of the chasm the user has to cross in order to customize the behaviour of their software. This is related to working in a framework or a library, in the sense of &amp;lsquo;who keeps the control&amp;rsquo;. In an UNIX, filesystem environment, you keep the control.&lt;/p&gt;

&lt;p&gt;References &amp;ldquo;citizen developers&amp;rdquo; (&lt;a href=&#34;https://www.gartner.com/it-glossary/citizen-developer/&#34; target=&#34;_blank&#34;&gt;https://www.gartner.com/it-glossary/citizen-developer/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;Three qualities for end-user programming: embodiment, living systems, and in-place toolchains&lt;/p&gt;

&lt;p&gt;Embodiment: it requires the programmer hold many abstractions in their mind. Related to abstract reasoning. Mentions that many end-users don&amp;rsquo;t have these abstractions in their mind, but are capable of abstract reasoning in their own domains of expertise. Mentions that via visual representations onscreen, we can help the end-user. An example: preview formula results in a spreadsheet; highlight the cells in a spreadsheet.&lt;/p&gt;

&lt;p&gt;Embodiment means, broadly, making elements of the programming experience more concrete and visual&lt;/p&gt;

&lt;p&gt;Living systems: interaction with them. Refers to shortening the feedback cycle&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;“Live programming gives the programmer immediate feedback on the behavior of a program as it is edited, replacing the edit compile-debug cycle with a fluid programming experience.“&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;But only short feedback loops, but also to change the system behaviour from within, such as the LISP compiler reading and compiling the source code from inside a program.&lt;/p&gt;

&lt;p&gt;In-place tool chains&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The user should be able to edit their programs without installing additional tools or programs&lt;/p&gt;

&lt;p&gt;a Unix shell script is just a series of commands saved into a text file&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Meaning that the user is already accustomed to issuing those commands. A script is just grouping those commands.&lt;/p&gt;

&lt;p&gt;Gives examples of end-user programming success stories: spreadsheets, SQL, browser dev tools,&lt;/p&gt;

&lt;p&gt;Tags: end-user-programming, programming, extensibility, open-closed-principle, ocp, mofication, user, extension, unix, repl, spreadsheet, reflection, theory, history, review, sql, dev-tools, chasm, abstraction&lt;/p&gt;

&lt;p&gt;Id: 4490792a-514b-11e9-9861-0242ac110006
Read: Thu, 28 Mar 2019 11:18:52 +0000&lt;/p&gt;

&lt;h2 id=&#34;why-developers-consider-agile-development-to-be-nonsense-https-medium-com-web-development-why-developers-consider-agile-development-to-be-nonsense-1eaf28715e66&#34;&gt;&lt;a href=&#34;https://medium.com/@web.development/why-developers-consider-agile-development-to-be-nonsense-1eaf28715e66&#34; target=&#34;_blank&#34;&gt;Why developers consider Agile development to be nonsense&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;This article explains how Agile development is apt and indicated for short-term software development, especially for contracting or consulting companies, where the client is external to the team.&lt;/p&gt;

&lt;p&gt;Why it does not make as much sense in products/services where there is a leapfrog solution.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Don’t give the customer what they ask for; understand them, and revolutionize their world.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tags: leapfrog-solution, google, agile, agile-development, comparison, project-management, client, consulting, management&lt;/p&gt;

&lt;p&gt;Id: 9035ea3c-514f-11e9-9676-0242ac110006
Read: Thu, 28 Mar 2019 11:49:37 +0000&lt;/p&gt;

&lt;h2 id=&#34;why-bother-with-what-three-words-https-shkspr-mobi-blog-2019-03-why-bother-with-what-three-words&#34;&gt;&lt;a href=&#34;https://shkspr.mobi/blog/2019/03/why-bother-with-what-three-words/&#34; target=&#34;_blank&#34;&gt;Why bother with What Three Words?&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;In this article, the author questions why using a closed protocol for translating geo-coordinates to words.&lt;/p&gt;

&lt;p&gt;The author complains that it is masquerading a for-profit, closed algorithm as an open standard.&lt;/p&gt;

&lt;p&gt;Also, that the GPS locations are drifting very quickly in some places, therefore the translated address changes, but the local address (e.g., 1 Wall Street), does not.&lt;/p&gt;

&lt;p&gt;Tags: gps-drift, australia, open-standard, closed-standard, for-profit, protocol, open, closed, what-three-words, w3w, i18n, startup&lt;/p&gt;

&lt;p&gt;Id: 960e6750-5202-11e9-bb40-0242ac110008
Read: Fri, 29 Mar 2019 09:11:07 +0000&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Self-Study in January 2016</title>
      <link>https://alvarogarcia7.github.io/blog/2016/01/01/self-study-in-january-2016/</link>
      <pubDate>Fri, 01 Jan 2016 16:55:19 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2016/01/01/self-study-in-january-2016/</guid>
      <description>

&lt;h2 id=&#34;test-cases-in-inner-classes-with-junit&#34;&gt;Test cases in inner classes with JUnit&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://stackoverflow.com/questions/8758294/test-cases-in-inner-classes-with-junit&#34; target=&#34;_blank&#34;&gt;this answer&lt;/a&gt; in stackoverflow about nested test runners in JUnit&lt;/p&gt;

&lt;p&gt;Tags: junit, stackoverflow, answer, nested-runner&lt;/p&gt;

&lt;h2 id=&#34;recording-a-great-coding-screencast&#34;&gt;Recording a Great Coding Screencast&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://egghead.io/articles/recording-a-great-coding-screencast&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by John Lindquist where he explains how he sets up the recording environment for egghead.&lt;/p&gt;

&lt;p&gt;Tags: john-lindquist, record, screencast, egghead, code-screencast, record-video, video&lt;/p&gt;

&lt;h2 id=&#34;react-testing-course&#34;&gt;React Testing Course&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched &lt;a href=&#34;https://egghead.io/lessons/react-testing-jsx-error-diffs&#34; target=&#34;_blank&#34;&gt;the full course&lt;/a&gt; by Trevor D. Miller on how to test react components and the libraries to make it possible.&lt;/p&gt;

&lt;p&gt;Tags: trevor-miller, online-course, screencast, mooc, react, flux, egghead&lt;/p&gt;

&lt;h2 id=&#34;what-is-functional-programming&#34;&gt;What Is Functional Programming?&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.jenkster.com/2015/12/what-is-functional-programming.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Kris Jenkins where the author describes functional programming from an input &amp;amp; output point of view.&lt;/p&gt;

&lt;p&gt;Describes state of the system (maybe global or local) is input &amp;amp; output of the function&lt;/p&gt;

&lt;p&gt;Produced state changes are called side effects. the author calls the state inputs as &amp;ldquo;side causes&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;Side effects and causes are called complexity iceberg, as they are not visible under the water level (surface)&lt;/p&gt;

&lt;p&gt;Also what a pure function is: one with no side causes or side effects; e.g., all its inputs are declared inputs (i.e., parameters) and all outputs are declared outputs (i.e., return value).&lt;/p&gt;

&lt;p&gt;notes on jobbing programmer:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.safaribooksonline.com/library/view/becoming-a-better/9781491905562/ch32.html&#34; target=&#34;_blank&#34;&gt;at Becoming a Better Programmer&lt;/a&gt;, by Pete Goodliffe&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://books.google.es/books?id=P-09CgAAQBAJ&amp;amp;pg=PA67&amp;amp;lpg=PA67&amp;amp;dq=%22jobbing+programmer%22&amp;amp;source=bl&amp;amp;ots=U6Gvi9OSda&amp;amp;sig=J4qWDUtnk768SMjAK3yuEeWUv5Y&amp;amp;hl=es&amp;amp;sa=X&amp;amp;ved=0ahUKEwjz58K615DKAhUFVRQKHfyhAZAQ6AEIOTAE#v=onepage&amp;amp;q=%22jobbing%20programmer%22&amp;amp;f=false&#34; target=&#34;_blank&#34;&gt;at Mastering Julia&lt;/a&gt;, by Malcolm Sherrington&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://joshsymonds.com/blog/2013/11/03/what-makes-a-good-programmer-good/&#34; target=&#34;_blank&#34;&gt;at What Makes a Good Programmer Good?&lt;/a&gt; by Josh Symonds&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tags: kris-jenkins, functional-programming, input, output, function, complexity-iceberg, pure-function, impure-function, side-effect, side-cause&lt;/p&gt;

&lt;h2 id=&#34;which-programming-languages-are-functional&#34;&gt;Which Programming Languages Are Functional?&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.jenkster.com/2015/12/which-programming-languages-are-functional.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Kris Jenkins where the author analyses languages, determining whether they are functional or not.&lt;/p&gt;

&lt;p&gt;Describes how functional languages deal with side effects and side causes, and to identify them (was also explained in part one&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;).&lt;/p&gt;

&lt;!--
    FOOTNOTES are at the beginning
--&gt;

&lt;p&gt;Tags: kris-jenkins, functional-programming, side-effect, side-cause, comparison, haskell, clojure, python, perl, javascript, java, map, reduce, hof, scala, moc&lt;/p&gt;

&lt;h2 id=&#34;argument-from-the-real-world&#34;&gt;Argument from the &amp;ldquo;Real World&amp;rdquo;&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://ronjeffries.com/xprog/articles/argument-from-the-real-world/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Ron Jeffries that dismantles the &amp;ldquo;real world&amp;rdquo;, as an excuse to use good practices: as in &amp;ldquo;we could use that, but we live in the real world&amp;rdquo;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;[&amp;hellip;] our job is to create the “real world” and not to imagine that our present situation is the only situation there is&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This is exactly our day to day task, to imagine a real world solution to present problems, maybe involving software in between.&lt;/p&gt;

&lt;p&gt;Can&amp;rsquo;t we do this for product and team management?&lt;/p&gt;

&lt;p&gt;Tags: ron-jeffries, agile, scrum, tdd, bdd, incremental-iterative-development, product-management, team-management&lt;/p&gt;

&lt;h2 id=&#34;self-contained-systems&#34;&gt;Self-Contained Systems&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://speakerdeck.com/rstrangh/self-contained-systems-1&#34; target=&#34;_blank&#34;&gt;these slides&lt;/a&gt; about a self-contained system (SCS), an architecture choice to split monolithic systems in parts. It includes the use of microservices in the business logic to solve domain specific problems. Written by Roman Stranghöner&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;development, operation and maintenance [&amp;hellip;] by a single team&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tags: big-bang-release, roman-stranghoner, self-contained-system, scs, microservice, monolith, monolithic-system, architecture&lt;/p&gt;

&lt;h2 id=&#34;what-makes-a-good-programmer-good&#34;&gt;What Makes a Good Programmer Good?&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://joshsymonds.com/blog/2013/11/03/what-makes-a-good-programmer-good/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Josh Symonds on the characteristics that differentiate a good programmer from the jobbing programmers, the list of skills to be a good programmer.&lt;/p&gt;

&lt;p&gt;Explains what factors are related and not related to being a good one&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:2&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;knowing that most programming problems have already been solved. You have to know where to look for the solution&lt;/li&gt;
&lt;li&gt;not to be afraid to dig deep into problems: detect a problem and be eager to solve it; figure out what is wrong&lt;/li&gt;
&lt;li&gt;go to the source: use the source as a fact, as analysis needs to be based on facts, not beliefs&lt;/li&gt;
&lt;li&gt;just do it: to be driven to act&lt;/li&gt;
&lt;li&gt;instinctively tackle problems head-on, grabbing the bull by the horns instead of waiting for it to be solved automagically; start solving the problem&lt;/li&gt;
&lt;li&gt;excited about grabbing problems, about facing the cutting edge&lt;/li&gt;
&lt;li&gt;taking the time to reflect and understand it before moving one to the next one&lt;/li&gt;
&lt;li&gt;communicate well: succintly and eloquently expressing your thoughts. The author thinks this might be the most important aspect of all.&lt;/li&gt;
&lt;li&gt;to be truly caring about what you do: not just a job, but a hobby, an interest, even a fascination; great programmers are always programming&lt;/li&gt;
&lt;li&gt;thinking of programming of a way to shape the world, not just a money-making activity&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tags: jobbing-programmer, good-programmer, career, career-management, skill, josh-symonds, quote&lt;/p&gt;

&lt;h2 id=&#34;the-best-programming-language-or-how-to-stop-worrying-and-love-the-code&#34;&gt;The Best Programming Language (or How to Stop Worrying and Love the Code)&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.fourthbit.com/2014/03/01/the-best-programming-language-or-how-to-stop-worrying-and-love-the-code&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Álvaro Castro-Castilla analysing different programming languages and what to choose each of them.&lt;/p&gt;

&lt;p&gt;Tags: alvaro-castro-castilla, programming-language, language, analysis, comparison&lt;/p&gt;

&lt;h2 id=&#34;tomates-en-el-campo&#34;&gt;Tomates en el campo&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.presionblogosferica.com/2011/02/20/tomates-en-el-campo/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Ángel Medinilla, about how to cultivate teams, instead of creating or building them. Talks about the mandatory conditions, necessary factors and how to enable it, not guaranteeing success.&lt;/p&gt;

&lt;p&gt;Tags: angel-medinilla, team-management, spanish, team, analogy&lt;/p&gt;

&lt;h2 id=&#34;default-constructors-in-java&#34;&gt;Default constructors in Java&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://stackoverflow.com/questions/17068389/default-constructors-in-java&#34; target=&#34;_blank&#34;&gt;this answer&lt;/a&gt; in stackoverflow about extending a java class that has a private constructor.&lt;/p&gt;

&lt;p&gt;Tags: stackoverflow, answer, java, constructor, syntax&lt;/p&gt;

&lt;h2 id=&#34;what-s-so-great-about-reducers&#34;&gt;What&amp;rsquo;s So Great About Reducers?&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.guillermowinkler.com/blog/2013/12/01/whats-so-great-about-reducers/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Guillermo Winkler explaining reducers, a type of divide and conquer strategy clojure.&lt;/p&gt;

&lt;p&gt;Tags: guillermo-winkler, reducer, clojure, parallelism, concurrency&lt;/p&gt;

&lt;h2 id=&#34;don-t-use-slack&#34;&gt;Don’t use Slack?&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/hacker-daily/don-t-use-slack-8e70452f3eed&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Christian Heilmann about the relation between open / closed software and accessibility.&lt;/p&gt;

&lt;p&gt;Tags: slack, christian-heilmann, accessibility, open-source, propietary-software, closed-source&lt;/p&gt;

&lt;h2 id=&#34;towards-an-understanding-of-technical-debt&#34;&gt;Towards an understanding of technical debt&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@kellan/towards-an-understanding-of-technical-debt-ae0f97cc0553&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Kellan Elliott-McCrea about some definitions of technical debt and why taking care of it matters for the future.&lt;/p&gt;

&lt;p&gt;Talks about the way of inheriting projects by other teams and the paradox of &amp;ldquo;investing more time to fix the problem than originally invested in coding it.&amp;rdquo; Also about judgement.&lt;/p&gt;

&lt;p&gt;I find it related to the &amp;ldquo;theory building&amp;rdquo; by Naur.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;There are at least 5 distinct things we mean we say “technical debt”.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Maintenance work: buying breathing room&lt;/li&gt;
&lt;li&gt;Features of the codebase that resist change&lt;/li&gt;
&lt;li&gt;Operability choices that resist change&lt;/li&gt;
&lt;li&gt;Code choices that suck the will to live&lt;/li&gt;
&lt;li&gt;Dependencies that resist upgrading&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tags: kellan-elliott-mccrea, kellan, technical-debt, list, definition, quote&lt;/p&gt;

&lt;h2 id=&#34;lifetimes-of-cryptographic-hash-functions&#34;&gt;Lifetimes of cryptographic hash functions&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://valerieaurora.org/hash.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Valerie Aurora where she explains the lifetimes of cryptographic hash functions up to 2012.&lt;/p&gt;

&lt;p&gt;Tags: hash-function, valerie-aurora&lt;/p&gt;

&lt;h2 id=&#34;collisions-for-hash-functions-md4-md5-haval-128-and-ripemd&#34;&gt;Collisions for Hash Functions - MD4, MD5, HAVAL-128 and RIPEMD&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://eprint.iacr.org/2004/199.pdf&#34; target=&#34;_blank&#34;&gt;this paper&lt;/a&gt; that explains some collisions found for MD4, MD5, HAVAL-128 and RIPEMD. By Xiaoyun Wang, Dengguo Feng, Xuejia Lai, Hongbo Yu.&lt;/p&gt;

&lt;p&gt;Tags: collision, hash-function, xiaoyun-wang, dengguo-feng, xuejia-lai, hongbo-yu, paper&lt;/p&gt;

&lt;h2 id=&#34;the-future-is-parallel-what-s-a-programmer-to-do&#34;&gt;The future is parallel: What&amp;rsquo;s a programmer to do?&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://groups.csail.mit.edu/mac/users/gjs/6.945/readings/MITApril2009Steele.pdf&#34; target=&#34;_blank&#34;&gt;these slides&lt;/a&gt; by Guy Steele about the differences in linear vs parallel computing and about the old habits that we still have.&lt;/p&gt;

&lt;p&gt;Some quotes:&lt;/p&gt;

&lt;h3 id=&#34;motivation&#34;&gt;Motivation&lt;/h3&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Good sequential code minimizes total number of operations.

&lt;ul&gt;
&lt;li&gt;Clever tricks to reuse previously computed results.&lt;/li&gt;
&lt;li&gt;Good parallel code often performs redundant operations to reduce communication.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Good sequential algorithms minimize space usage.

&lt;ul&gt;
&lt;li&gt;Clever tricks to reuse storage.&lt;/li&gt;
&lt;li&gt;Good parallel code often requires extra space to permit temporal decoupling.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Sequential idioms stress linear problem decomposition.

&lt;ul&gt;
&lt;li&gt;Process one thing at a time and accumulate results.&lt;/li&gt;
&lt;li&gt;Good parallel code usually requires multiway problem decomposition and multiway aggregation of results.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;a-new-mindset&#34;&gt;A New Mindset&lt;/h3&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;DO loops are so 1950s! (Literally: Fortran is now 50 years old.)&lt;/li&gt;
&lt;li&gt;So are linear linked lists! (Literally: Lisp is now 50 years old.)&lt;/li&gt;
&lt;li&gt;Java-style iterators are so last millennium!&lt;/li&gt;
&lt;li&gt;Even arrays are suspect!&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;As soon as you say &lt;code&gt;first, SUM = 0&lt;/code&gt; you are hosed. Accumulators are BAD.&lt;/li&gt;
&lt;li&gt;If you say, “process subproblems in order,” you lose.&lt;/li&gt;
&lt;li&gt;The great tricks of the sequential past DON’T WORK.&lt;/li&gt;
&lt;li&gt;The programming idioms that have become second nature to us as everyday tools DON’T WORK.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;the-parallel-future&#34;&gt;The Parallel Future&lt;/h3&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;We need new strategies for problem decomposition.&lt;/li&gt;
&lt;li&gt;Data structure design/object relationships&lt;/li&gt;
&lt;li&gt;Algorithmic organization&lt;/li&gt;
&lt;li&gt;Don’t split a problem into “the first” and “the rest.”&lt;/li&gt;
&lt;li&gt;Do split a problem into roughly equal pieces. Then figure out how to combine general subsolutions.&lt;/li&gt;
&lt;li&gt;Often this makes combining the results a bit harder.&lt;/li&gt;
&lt;li&gt;We need programming languages and runtime implementations that support parallel strategies and hybrid sequential/parallel strategies.&lt;/li&gt;
&lt;li&gt;We must learn to manage new space-time tradeoffs&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h3&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;A program organized according to linear problem decomposition principles can be really hard to parallelize.&lt;/li&gt;
&lt;li&gt;A program organized according to parallel problem decomposition principles is easily run either in parallel or sequentially, according to available resources.&lt;/li&gt;
&lt;li&gt;The new strategy has costs and overheads. They will be reduced over time but will not disappear.&lt;/li&gt;
&lt;li&gt;In a world of parallel computers of wildly varying sizes, this is our only hope for program portability in the future.&lt;/li&gt;
&lt;li&gt;Better language design can encourage better parallel programming.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tags: representation, computation, catamorphism, list, associativity
commutativity, idempotency, abstract-data-type, slide, operator, mapreduce, mindset, comparison, parallel, guy-steele,  linear-computing, parallel-computing&lt;/p&gt;

&lt;h2 id=&#34;surviving-being-senior-tech-management&#34;&gt;Surviving being senior (tech) management.&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@kellan/surviving-being-senior-tech-management-aa6654efd027&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Kellan Elliott-McCrea about the basic things to do as management to retain the best performance:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;exercise&lt;/li&gt;
&lt;li&gt;someone to talk to&lt;/li&gt;
&lt;li&gt;discuss with peers, in petit commité&lt;/li&gt;
&lt;li&gt;personal mastery project&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tags: kellan-elliott-mccrea, kellan, list, management, tip, exercise, pet-project&lt;/p&gt;

&lt;h2 id=&#34;you-don-t-need-more-free-time&#34;&gt;You Don’t Need More Free Time&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.nytimes.com/2016/01/10/opinion/sunday/you-dont-need-more-free-time.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; about the quality of life, work-life balance by Cristobal Young on why the time where we have more fun is spent together, in company.&lt;/p&gt;

&lt;p&gt;Tags: cristobal-young, time-management, work-life-balance&lt;/p&gt;

&lt;h2 id=&#34;taking-longer-to-reach-the-top-has-its-benefits&#34;&gt;Taking Longer to Reach the Top Has Its Benefits&lt;/h2&gt;

&lt;p&gt;​I&amp;rsquo;ve read &lt;a href=&#34;https://hbr.org/2015/12/taking-longer-to-reach-the-top-has-its-benefits&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; that explains how having work life balance and preventing burn out syndrome, aided by a patient career, can help with reaching a higher destination on your career. By Karen Firestone&lt;/p&gt;

&lt;p&gt;Tags: career-management, patience, burnout, burn-out, ceo, karen-firestone, professional-career, improvement&lt;/p&gt;

&lt;h2 id=&#34;all-bugs-lead-to-rome&#34;&gt;All bugs lead to Rome&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@nickbaum/all-bugs-lead-to-rome-505a1205bb9&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; that explains how the author tracks down a bug present in mail communication, just for a handful of client. By Nick Baum&lt;/p&gt;

&lt;p&gt;Tags: track-down, bug, defect, mailgun, rot13, nick-baum&lt;/p&gt;

&lt;h2 id=&#34;design-patterns-coming-full-circle&#34;&gt;Design Patterns — Coming Full Circle&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/swlh/design-patterns-coming-full-circle-d8292e261dc6&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; that explains what a design pattern is, where does it come from, the figure of Christopher Alexander and the architecture design patterns. By Jen Carlile&lt;/p&gt;

&lt;p&gt;Tags: design-pattern, christopher-alexander, jen-carlile, comparison, example, proxy, command, observer&lt;/p&gt;

&lt;h2 id=&#34;react-performance&#34;&gt;React + Performance = ?&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://aerotwist.com/blog/react-plus-performance-equals-what/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Paul Lewis comparing the performance and developer experience of react.js and vanilla js.&lt;/p&gt;

&lt;p&gt;Conclusion: under his measurements, react is too slow once the amount of elements is big on mobile devices&lt;/p&gt;

&lt;p&gt;Tags: paul-lewis, comparison, javascript, react, mobile, perfomance, jsperf, js-perf, vanilla-javascript&lt;/p&gt;

&lt;h2 id=&#34;full-speed-then-stop-gracefully&#34;&gt;Full speed, then stop, gracefully&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://sethgodin.typepad.com/seths_blog/2015/12/full-speed-then-stop.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; about how to end professional relationships with an employer or a team.&lt;/p&gt;

&lt;p&gt;Makes an analogy to the hockey sport attitude: &amp;ldquo;full speed, then stop&amp;rdquo;&lt;/p&gt;

&lt;p&gt;Tags: seth-godin, professional, employer, team-management, team, analogy&lt;/p&gt;

&lt;h2 id=&#34;por-qué-tendrás-que-facturar-55-000-para-cobrar-una-nómina-de-26-000&#34;&gt;Por qué tendrás que facturar 55.000€ para cobrar una nómina de 26.000€&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://us2.campaign-archive1.com/?u=374c664073e1a1fa3deca53b4&amp;amp;id=7e79a27689&#34; target=&#34;_blank&#34;&gt;this bonilista&lt;/a&gt; by David Bonilla on why freelancers need to bill more to clients to achieve the same (economic) results as being hired by a company.&lt;/p&gt;

&lt;p&gt;Tags: david-bonilla, bonilista, freelancer, contractor, employee&lt;/p&gt;

&lt;h2 id=&#34;principles-of-microservices&#34;&gt;Principles Of Microservices&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched &lt;a href=&#34;https://vimeo.com/131632250&#34; target=&#34;_blank&#34;&gt;this talk&lt;/a&gt; by Sam Newman on microservices at the NDC 2015 at Oslo&lt;/p&gt;

&lt;p&gt;Describes a microservice as a small, autonomous services that work together, modelled around a business domain&lt;/p&gt;

&lt;p&gt;Microservices can mix technology, persistence stack, idioms, options&lt;/p&gt;

&lt;p&gt;reference to the twelve factors (by heroku).&lt;/p&gt;

&lt;p&gt;At a client:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Design and delivery practices:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;standard http/rest&lt;/li&gt;
&lt;li&gt;encapsulate legacy&lt;/li&gt;
&lt;li&gt;eliminate integration databases&lt;/li&gt;
&lt;li&gt;consolidate and cleanse data&lt;/li&gt;
&lt;li&gt;published integration model&lt;/li&gt;
&lt;li&gt;small independent devices&lt;/li&gt;
&lt;li&gt;continous deployment&lt;/li&gt;
&lt;li&gt;minimal customization of COTS/SAAS&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Architectural principles:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;reduce inertia&lt;/li&gt;
&lt;li&gt;eliminate accidential complexity&lt;/li&gt;
&lt;li&gt;consistent interfaces and data flows&lt;/li&gt;
&lt;li&gt;no silver bullets&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Strategic goals:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;enable scalable businesses&lt;/li&gt;
&lt;li&gt;support entry into new markets&lt;/li&gt;
&lt;li&gt;support innovation in existing markets&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;Principles of microservices:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;modelled around a business domain&lt;/li&gt;
&lt;li&gt;culture of automation&lt;/li&gt;
&lt;li&gt;hide implementation details&lt;/li&gt;
&lt;li&gt;decentralise all the things&lt;/li&gt;
&lt;li&gt;deploy independently&lt;/li&gt;
&lt;li&gt;consumer first&lt;/li&gt;
&lt;li&gt;isolate failure&lt;/li&gt;
&lt;li&gt;highly observable&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;notes&#34;&gt;Notes&lt;/h3&gt;

&lt;p&gt;the business domain changes more slowly. find these boundaries (reference to IDDD)&lt;/p&gt;

&lt;p&gt;bounded contexts is about concepts which are shared and others who are hidden&lt;/p&gt;

&lt;p&gt;consumer driven contracts as a way to express to consumer expectations, written as tests. this is a high-trust pattern (requires it). reduces end to end testing, considerably. Using tools as &lt;a href=&#34;http://github.com/realestate&#34; target=&#34;_blank&#34;&gt;pact&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;parallel change for endpoints (or APIs) for avoiding lock step release (expand contract pattern). high cost to change an API: apply upfront thought to it.&lt;/p&gt;

&lt;p&gt;explains about a case writing a strangler application:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;circuit breakers&lt;/li&gt;
&lt;li&gt;one thread pool per application&lt;/li&gt;
&lt;li&gt;bulkhead downstream connections&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;references:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the book &amp;ldquo;Release It!&amp;rdquo;&lt;/li&gt;
&lt;li&gt;the book &amp;ldquo;Implementing Domain-Driven Design (IDDD)&amp;rdquo;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;other&#34;&gt;Other&lt;/h3&gt;

&lt;p&gt;correlation ids, parent and child ids
extracting information from logs (e.g., kibana, splunk, new relic)
see how services connect to each other based on logs instead of based on documentation&lt;/p&gt;

&lt;p&gt;Tags: lock-step-release, autonomy, sam-newman, consumer-driven-contract, team, zookeper, etcd, consul, service-discovery, distributed-consensus, talk, ndc, humane-registry, bulkhead-pattern, circuit-breaker&lt;/p&gt;

&lt;h2 id=&#34;the-website-obesity-crisis&#34;&gt;The Website Obesity Crisis&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://idlewords.com/talks/website_obesity.htm&#34; target=&#34;_blank&#34;&gt;this transcription&lt;/a&gt; of &lt;a href=&#34;http://www.webdirections.org/blog/the-website-obesity-crisis/&#34; target=&#34;_blank&#34;&gt;this presentation&lt;/a&gt; about the increase of weight of websites and how this connects with new needs for automation and other services. How the solution is to keep the pages lightweight and open for everybody to use and learn; without invading our privacy. By Maciej Ceglowski&lt;/p&gt;

&lt;p&gt;Tags: obesity, fat-page, slide, transcription, slide-transcription, maciej-ceglowski, simplicity, speed&lt;/p&gt;

&lt;h2 id=&#34;command-line-tools-can-be-235x-faster-than-your-hadoop-cluster&#34;&gt;Command-line tools can be 235x faster than your Hadoop cluster&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://aadrake.com/command-line-tools-can-be-235x-faster-than-your-hadoop-cluster.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; on how using command-line based (&lt;code&gt;find&lt;/code&gt;, &lt;code&gt;grep&lt;/code&gt;, &lt;code&gt;awk&lt;/code&gt;) can have a better performance as compared to Hadoop for a specific case, which is analyzing 2 million chess games. By Adam Drake&lt;/p&gt;

&lt;p&gt;Tags: adam-drake, chess, comparison, performance, cli-commands, unix, nix, hadoop, awk&lt;/p&gt;

&lt;h2 id=&#34;the-serializable-isolation-level&#34;&gt;The Serializable Isolation Level&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://sqlperformance.com/2014/04/t-sql-queries/the-serializable-isolation-level&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Paul White about the serializable isolation level and how it is implemented in some databases.&lt;/p&gt;

&lt;p&gt;Tags: serializable, isolation level, paul-white, oracle, mssql, database, sql&lt;/p&gt;

&lt;h2 id=&#34;academic-writing-with-markdown-pandoc-and-emacs&#34;&gt;Academic Writing With Markdown, Pandoc and Emacs&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://milinda.svbtle.com/academic-writing-with-markdown-pandoc-and-emacs&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Milinda Pathirage that explains an alternative way of writing LaTeX in a user-friendly manner, writing markdown then converting it to the output format (he provides &lt;a href=&#34;https://gist.github.com/milinda/d9272e67711d324f18ba&#34; target=&#34;_blank&#34;&gt;such a script&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Tags: latex, milinda-pathirage, academia, research, paper, markdown, script&lt;/p&gt;

&lt;h2 id=&#34;rest-ddd-layers-jsf-microservices-sizing-a-umejug-conversation&#34;&gt;Rest, DDD, layers, JSF, microservices sizing a Umejug conversation&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched &lt;a href=&#34;http://www.adam-bien.com/roller/abien/entry/rest_ddd_layers_jsf_a&#34; target=&#34;_blank&#34;&gt;this talk&lt;/a&gt; by Adam Bien on topics related to microservices and architecture. Discusses:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What do you think a typical web application should look like? How should it be built?&lt;/li&gt;
&lt;li&gt;When using REST, which level of REST is appropriate when, is HATEOAS something to strive for, how to implement it?&lt;/li&gt;
&lt;li&gt;Which patterns do you recommend, hexagonal architecture, layers, &amp;hellip;?&lt;/li&gt;
&lt;li&gt;What do you think of the DDD strategic and tactical patterns?&lt;/li&gt;
&lt;li&gt;Microservices vs right-sized services, is transactions over several services always a bad idea?&lt;/li&gt;
&lt;li&gt;When use JSF? Is it still useful?&lt;/li&gt;
&lt;li&gt;Entity-Control-Boundary Pattern (ECB) (around &lt;a href=&#34;https://youtu.be/VkcLpRs0i0g?t=995&#34; target=&#34;_blank&#34;&gt;16:37&lt;/a&gt;). &lt;a href=&#34;http://www.cs.sjsu.edu/~pearce/modules/patterns/enterprise/ecb/ecb.htm&#34; target=&#34;_blank&#34;&gt;More info&lt;/a&gt; on the pattern&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tags: hateoas, rest, microservice, pattern, architecture, umejug, hexagonal-architecture, ddd, adam-bien, ecb-pattern, mvc-pattern&lt;/p&gt;

&lt;h2 id=&#34;how-to-go-remote&#34;&gt;How To Go Remote&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://workdifferent.com/how-to-remote/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Sebastian Kade that explains how to go remote: where the possibility of working anywhere is a luxury, even if it is in an office.&lt;/p&gt;

&lt;p&gt;Explains the case of Automattic, some examples of communication, culture. Suggests using some tools to accomplish this cultural change.&lt;/p&gt;

&lt;p&gt;Tags: remote-work, sebastian-kade, remote, work, asynchronous-communication, communication, automattic, tool, culture, team-management&lt;/p&gt;

&lt;h2 id=&#34;why-your-company-should-have-a-creed&#34;&gt;Why Your Company Should Have a Creed&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://ma.tt/2011/09/automattic-creed/&#34; target=&#34;_blank&#34;&gt;this essay&lt;/a&gt; by Matt Mullenweg about the importance of having a company creed (a belief system, ethos), which ideally would be shared by the colleagues. These should be the values that help deciding, when in doubt, so everyone is aligned.&lt;/p&gt;

&lt;p&gt;At Automattic, this is theirs (as of September 19th, 2011):&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I will never stop learning. I won’t just work on things that are assigned to me. I know there’s no such thing as a status quo. I will build our business sustainably through passionate and loyal customers. I will never pass up an opportunity to help out a colleague, and I’ll remember the days before I knew everything. I am more motivated by impact than money, and I know that Open Source is one of the most powerful ideas of our generation. I will communicate as much as possible, because it’s the oxygen of a distributed company. I am in a marathon, not a sprint, and no matter how far away the goal is, the only way to get there is by putting one foot in front of another every day. Given time, there is no problem that’s insurmountable.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tags: quote, matt-mullenweg, automattic, creed, ethos, learning, team-management, startup, communication, essay&lt;/p&gt;

&lt;h2 id=&#34;mob-programming-the-unruly-experience&#34;&gt;Mob Programming: The Unruly Experience&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://wirfs-brock.com/blog/2015/06/05/mob-programming/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Rebecca Wirfs-Brock on mob programming and the experience report (+ &lt;a href=&#34;http://www.xp2015.org/wp-content/uploads/2015/06/TH2.3_Wilson.pdf&#34; target=&#34;_blank&#34;&gt;slides&lt;/a&gt;) at the company called Unruly.&lt;/p&gt;

&lt;p&gt;She explains what works for them and what does not.&lt;/p&gt;

&lt;p&gt;Also, she makes a difference on complex vs complicated work:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;complex work (where there is the potential for errors) over complicated work (where the solution is known, but is merely time consuming)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Explains some characteristics of learning organizations:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Teams in learning organizations perform ongoing experiments. While they settle on a core set of practices, they also try to build upon them. They keep innovating, improving, and reflecting. And how they work continues to evolve.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tags: learning, learning-organization, xp, rebecca-wirfs-brock, mob-programming, pair-programming, complex-work, complicated-work, experience-report, unruly, team-management, team-building, team-dysfunction, comparison&lt;/p&gt;

&lt;h2 id=&#34;what-you-re-hiding-from-when-you-constantly-check-your-phone&#34;&gt;What You’re Hiding from When You Constantly Check Your Phone&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://hbr.org/2016/01/what-youre-hiding-from-when-you-constantly-check-your-phone&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Charlotte Lieberman where she explains the technology-stress paradox and the fact of replacing one addiction with another, as some addictions are more socially than others.&lt;/p&gt;

&lt;p&gt;Explains that the constant connection to social media allow us to avoid ourselves, and the connection to mindfulness.&lt;/p&gt;

&lt;p&gt;On the paradox:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;technology-stress paradox: we share the desire for greater freedom from our devices, and yet that very freedom itself causes anxiety&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;On the work-life balance:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;work-life balance [is]  [&amp;hellip;] about noticing those moments in which you really don&amp;rsquo;t want to deal with yourself&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tags: charlotte-lieberman, paradox, quote, social-media, mindfulness, technology-stress-paradox, stress, addiction, time-management&lt;/p&gt;

&lt;h2 id=&#34;testing-myth-1-writing-tests-slows-you-down&#34;&gt;Testing myth #1: Writing tests slows you down&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://arhohuttunen.fi/testing/testing-myth-1-writing-tests-slows-you-down/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Arho Huttunen on an excuse to not test: there is no time.&lt;/p&gt;

&lt;p&gt;In the article, he explains the false assumptions based on that reason and the gains (short term and long term) from doing it.&lt;/p&gt;

&lt;p&gt;Tags: arho-huttunen, test, excuse&lt;/p&gt;

&lt;h2 id=&#34;becodeweek-by-josé-manuel-beas&#34;&gt;BeCodeWeek by José Manuel Beas&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.jmbeas.es/category/becodeweek/&#34; target=&#34;_blank&#34;&gt;this category of posts&lt;/a&gt; by José Manuel Beas about his BeCodeWeek, a desk-surfing experience at BeCode.&lt;/p&gt;

&lt;p&gt;Analyses facts and publishes one entry per day detailing his activities.&lt;/p&gt;

&lt;p&gt;Tags: becodeweek, jmbeas, jose-manuel-beas, desk-surfing, experience, experience-report, analysis&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;&lt;code&gt;What Is Functional Programming?&lt;/code&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;many of these fragments are quotes or paraphrased quotes
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:2&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Self-study in July 2015</title>
      <link>https://alvarogarcia7.github.io/blog/2015/07/01/self-study-in-july-2015/</link>
      <pubDate>Wed, 01 Jul 2015 01:08:10 +0000</pubDate>
      
      <guid>https://alvarogarcia7.github.io/blog/2015/07/01/self-study-in-july-2015/</guid>
      <description>

&lt;p&gt;I&amp;rsquo;ve grouped all small posts related to the self-study from July 2015 into a single post&lt;/p&gt;

&lt;h2 id=&#34;clojure-made-simple&#34;&gt;Clojure made simple&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched &lt;a href=&#34;https://www.youtube.com/watch?v=VSdnJDO-xdg&#34; target=&#34;_blank&#34;&gt;this talk&lt;/a&gt; by Rich Hickey at the Java One. It references the talk &lt;a href=&#34;http://www.infoq.com/presentations/Simple-Made-Easy&#34; target=&#34;_blank&#34;&gt;Easy made simple&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;polymorphism without inheritance; single dispatch on the first parameter&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;productive-pair-programming&#34;&gt;Productive pair programming&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.carlosble.com/2015/07/productive-pair-programming/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; about pair programming, using the driver &amp;amp; copilot technique, written by Carlos Blé&lt;/p&gt;

&lt;h2 id=&#34;building-automated-rest-apis-with-python&#34;&gt;Building Automated REST APIs with Python&lt;/h2&gt;

&lt;p&gt;Investigating QA automation for REST APIs, I&amp;rsquo;ve read &lt;a href=&#34;http://www.slideshare.net/jeffknupp/building-automated-rest-apis-with-python&#34; target=&#34;_blank&#34;&gt;these slides&lt;/a&gt; about it&lt;/p&gt;

&lt;h2 id=&#34;backwards-compatibility-testing-for-your-clojure-project&#34;&gt;Backwards Compatibility Testing For Your Clojure Project&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.jenkster.com/2014/02/backwards-compatibility-testing-your-clojure-project.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; on making leiningen test the application on several clojure versions. Written by Kris Jenkins.&lt;/p&gt;

&lt;h2 id=&#34;succeeding-with-automated-integration-tests&#34;&gt;Succeeding with Automated Integration Tests&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://jeremydmiller.com/2015/06/25/succeeding_with_integration_testing/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Jeremy Miller on integration testing and how to succeed with it. Some notes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Choose the Quickest, Useful Feedback Mechanism, even if that means testing the backend and frontend separately&lt;/li&gt;
&lt;li&gt;Prefer white-box than black-box testing&lt;/li&gt;
&lt;li&gt;Use quick tests, that can be run locally in an easy fashion&lt;/li&gt;
&lt;li&gt;Do not share databases, as they introduce risks of flaky tests&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;applied-ddd-in-a-java-ee-7-and-open-source-world&#34;&gt;Applied DDD in a Java EE 7 and Open Source World&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched &lt;a href=&#34;https://www.youtube.com/watch?v=9D_-7E7Mrzw&#34; target=&#34;_blank&#34;&gt;this video&lt;/a&gt; by Edson Yanaga in the Java One, about DDD using Java EE 7, JSFs and lambdas on top of glassfish&lt;/p&gt;

&lt;h2 id=&#34;integrated-tests-are-a-scam&#34;&gt;Integrated tests are a scam&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read, again, &lt;a href=&#34;http://blog.thecodewhisperer.com/2010/10/16/integrated-tests-are-a-scam/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by J. B. Rainsberger on integrated tests and why not to use them. From a numerical / combinatorics point of view.&lt;/p&gt;

&lt;h2 id=&#34;functional-programming-should-be-your-1-priority-for-2015&#34;&gt;Functional Programming should be your #1 priority for 2015&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/@jugoncalves/functional-programming-should-be-your-1-priority-for-2015-47dd4641d6b9&#34; target=&#34;_blank&#34;&gt;this introduction&lt;/a&gt; to functional programming by Ju Gonçalves. Explains some functional concepts, such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;First-Class Functions&lt;/li&gt;
&lt;li&gt;High-Order Functions&lt;/li&gt;
&lt;li&gt;Pure Functions&lt;/li&gt;
&lt;li&gt;Closures&lt;/li&gt;
&lt;li&gt;Immutable State&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Also recommends a few books on the subject (e.g., SICP, HTDP).&lt;/p&gt;

&lt;h2 id=&#34;a-tutorial-introduction-to-the-lambda-calculus&#34;&gt;A Tutorial Introduction to the Lambda Calculus&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.inf.fu-berlin.de/lehre/WS03/alpi/lambda.pdf&#34; target=&#34;_blank&#34;&gt;this paper&lt;/a&gt;, an introduction to the lambda calculus. Haven&amp;rsquo;t done the exercises. Written by Raúl Rojas&lt;/p&gt;

&lt;h2 id=&#34;20-common-mistakes-when-doing-test-driven-development&#34;&gt;20 common mistakes when doing Test-Driven Development&lt;/h2&gt;

&lt;p&gt;I had thought of converting all of &lt;a href=&#34;https://twitter.com/search?q=svpino%20%23tdd%20mistake&amp;amp;src=typd&#34; target=&#34;_blank&#34;&gt;his tweets&lt;/a&gt; into a blog post, but he has already done this for us: I&amp;rsquo;ve read a &lt;a href=&#34;https://blog.svpino.com/2015/05/29/20-common-mistakes-when-doing-test-driven-development&#34; target=&#34;_blank&#34;&gt;list of common mistakes&lt;/a&gt; when doing TDD by &lt;a href=&#34;https://twitter.com/svpino&#34; target=&#34;_blank&#34;&gt;Santiago Pino&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;reducing-coupling&#34;&gt;Reducing coupling&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read the article by Martin Fowler &lt;a href=&#34;http://martinfowler.com/ieeeSoftware/coupling.pdf&#34; target=&#34;_blank&#34;&gt;Reducing Coupling&lt;/a&gt; in the IEEE SOFTWARE July/August 2001&lt;/p&gt;

&lt;h2 id=&#34;comparing-java-mock-frameworks-part-2-creating-mock-objects&#34;&gt;Comparing Java Mock Frameworks – Part 2: Creating Mock Objects&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://softwareinabottle.wordpress.com/2010/10/06/comparing-java-mock-frameworks-part-2-creating-mock-objects/&#34; target=&#34;_blank&#34;&gt;List of mock frameworks for java&lt;/a&gt;. Have only read the jMock, mockito and jMockit part.&lt;/p&gt;

&lt;p&gt;## Software Craftsmanship book review&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://meaganwaller.com/software-craftsmanship-book-review/&#34; target=&#34;_blank&#34;&gt;this review&lt;/a&gt; for a book that is already pending in my book list: Software Craftsmanship by Pete McBreen.&lt;/p&gt;

&lt;p&gt;The review has been written by Megan Waller, an (ex-)apprentice at 8th Light.&lt;/p&gt;

&lt;h2 id=&#34;fundamental-concepts-in-programming-languages&#34;&gt;Fundamental concepts in programming languages&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.cs.cmu.edu/~crary/819-f09/Strachey67.pdf&#34; target=&#34;_blank&#34;&gt;this paper&lt;/a&gt; containing the contents for lectures in Computer Programming in the year 1967. Written by Christopher Strachey.&lt;/p&gt;

&lt;p&gt;Note: I&amp;rsquo;ve also seen this paper recommended in the repo &lt;a href=&#34;https://github.com/papers-we-love/papers-we-love/tree/master/plt&#34; target=&#34;_blank&#34;&gt;Papers We Love &amp;gt; plt&lt;/a&gt; (Programming Language Theory)&lt;/p&gt;

&lt;h2 id=&#34;what-is-reification&#34;&gt;What is reification?&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.angelikalanger.com/GenericsFAQ/FAQSections/TechnicalDetails.html#FAQ101A&#34; target=&#34;_blank&#34;&gt;this FAQ&lt;/a&gt; on reification by Angelika Langer&lt;/p&gt;

&lt;h2 id=&#34;type-erasure&#34;&gt;Type erasure&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this wikipedia &lt;a href=&#34;https://en.wikipedia.org/wiki/Type_erasure&#34; target=&#34;_blank&#34;&gt;page on type erasure&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;how-to-make-an-intellij-idea-plugin-in-less-than-30-minutes&#34;&gt;How to make an IntelliJ IDEA plugin in less than 30 minutes&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://bjorn.tipling.com/how-to-make-an-intellij-idea-plugin-in-30-minutes&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; on creating new IntelliJ IDEA plugin, by Bjorn Tipling&lt;/p&gt;

&lt;h2 id=&#34;how-to-write-clean-testable-code&#34;&gt;How to Write Clean, Testable Code&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched, again, &lt;a href=&#34;https://www.youtube.com/watch?v=XcT4yYu_TTs&#34; target=&#34;_blank&#34;&gt;this video&lt;/a&gt; by Miško Hevery. Discusses what are the characteristics of tested and untested code, how to get from one to the other. Discusses techniques for testing code. At the end, there are questions but they cannot be heard (lack of microphone), so it is harder to follow.&lt;/p&gt;

&lt;h2 id=&#34;how-to-find-a-mentor&#34;&gt;How to Find a Mentor&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://medium.com/letters-to-my-mother/how-to-find-a-mentor-27fb978a8f1&#34; target=&#34;_blank&#34;&gt;this opinion&lt;/a&gt; on the importance of role models and mentors. The difference between them and a personal experience. Written by Joanne Wilson&lt;/p&gt;

&lt;h2 id=&#34;type-theory&#34;&gt;Type theory&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this wiki page on &lt;a href=&#34;https://en.wikipedia.org/wiki/Type_theory&#34; target=&#34;_blank&#34;&gt;type theory&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Some notes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&amp;ldquo;type systems [&amp;hellip;] language feature used to reduce bugs&amp;rdquo;&lt;/li&gt;
&lt;li&gt;two types: Church&amp;rsquo;s typed λ-calculi and Martin-Löf&amp;rsquo;s intuitionistic type theory.&lt;/li&gt;
&lt;li&gt;notation:

&lt;ul&gt;
&lt;li&gt;typing judgement: &lt;code&gt;M : A&lt;/code&gt;. Term &lt;code&gt;M&lt;/code&gt; has type &lt;code&gt;A&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;example: &lt;code&gt;nat&lt;/code&gt; may be a type&lt;/li&gt;
&lt;li&gt;&lt;code&gt;2 : nat&lt;/code&gt;, like in Scala&lt;/li&gt;
&lt;li&gt;function: &amp;ldquo;arrow&amp;rdquo;&lt;/li&gt;
&lt;li&gt;apply function to argument: no parenthesis&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;conversion rule: rule for rewriting terms

&lt;ul&gt;
&lt;li&gt;reduction rule: conversion rule that only works in one direction&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;normal form: a form that cannot be further reduced&lt;/li&gt;
&lt;li&gt;element: all closed elements that can be reduced to the same normal form&lt;/li&gt;
&lt;li&gt;closed term: a term without parameters. Opposite is an open term&lt;/li&gt;
&lt;li&gt;convertibility: property of terms, both open and closed. Said to be convertible if two terms can be reduced to the same term

&lt;ul&gt;
&lt;li&gt;warning: x + 1 and 1 + x are not convertible because they are in normal form and not the same&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;type-system&#34;&gt;Type system&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read this wiki page on &lt;a href=&#34;https://en.wikipedia.org/wiki/Type_system&#34; target=&#34;_blank&#34;&gt;type system&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Some notes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&amp;ldquo;The depth of type constraints and the manner of their evaluation affect the typing of the language&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Type polymorphism&lt;/li&gt;
&lt;li&gt;{compile time, runtime} x {manually annotated, inferred}&lt;/li&gt;
&lt;li&gt;&amp;ldquo;A program associates each value with at least one particular type, but it also can occur that one value is associated with many subtypes.&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Classification of types:

&lt;ul&gt;
&lt;li&gt;data type – a type of a value&lt;/li&gt;
&lt;li&gt;class – a type of an object&lt;/li&gt;
&lt;li&gt;kind – a type of a type, or metatype&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;the type inference might be undecidable (for more complex type inference)&lt;/li&gt;
&lt;li&gt;&amp;ldquo;Strong typing offers more safety, but cannot guarantee complete type safety.&amp;rdquo; An example is the division by zero, altough some languages may declare a dependent type &amp;ldquo;non-zero numbers&amp;rdquo;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;the-3-things-you-should-know-about-hashcode&#34;&gt;The 3 things you should know about hashCode()&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://eclipsesource.com/blogs/2012/09/04/the-3-things-you-should-know-about-hashcode/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; on the hashCode() method in java, written by Ralf Sternberg.&lt;/p&gt;

&lt;h2 id=&#34;reduce-complexity-with-variants&#34;&gt;Reduce Complexity with Variants&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.lispcast.com/reduce-complexity-with-variants&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; on variants in clojure by Eric Normand&lt;/p&gt;

&lt;h2 id=&#34;what-is-new-in-sql-2011&#34;&gt;What is new in SQL:2011&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.sigmod.org/publications/sigmod-record/1203/pdfs/10.industry.zemke.pdf&#34; target=&#34;_blank&#34;&gt;this white paper&lt;/a&gt; on the new features in SQL 2011. Written by Fred Zemke&lt;/p&gt;

&lt;h2 id=&#34;5-error-tracking-tools-java-developers-should-know&#34;&gt;5 Error Tracking Tools Java Developers Should Know&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.javacodegeeks.com/2014/09/5-error-tracking-tools-java-developers-should-know.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; about tracking tools for java written by Alex Zhitnitsky, featuring:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Raygun&lt;/li&gt;
&lt;li&gt;Sentry&lt;/li&gt;
&lt;li&gt;Takipi&lt;/li&gt;
&lt;li&gt;Airbrake&lt;/li&gt;
&lt;li&gt;StackHunter&lt;/li&gt;
&lt;li&gt;[Bonus] ABRT&lt;/li&gt;
&lt;li&gt;Comments cite &lt;a href=&#34;http://squash.io&#34; target=&#34;_blank&#34;&gt;Squash&lt;/a&gt; (server written in ruby, java client available) and &lt;a href=&#34;http://rollbar.com&#34; target=&#34;_blank&#34;&gt;Rollbar&lt;/a&gt; (home says supports android but not says anything about java)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;data-clump&#34;&gt;Data clump&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://martinfowler.com/bliki/DataClump.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; on the bliki, by Martin Fowler&lt;/p&gt;

&lt;h2 id=&#34;np-complete-problems&#34;&gt;NP-Complete problems&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://webdiis.unizar.es/asignaturas/TC/wp/wp-content/uploads/2012/01/L15_NPcompletos.pdf&#34; target=&#34;_blank&#34;&gt;these slides&lt;/a&gt; by Prof. Elvira Mayordomo about NP-Complete problems, how to reduce them to other problems and practical applications. (In Spanish)&lt;/p&gt;

&lt;h2 id=&#34;removal-of-sun-misc-unsafe-in-java-9-a-disaster-in-the-making&#34;&gt;Removal of sun.misc.Unsafe in Java 9 - A disaster in the making&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.dripstat.com/removal-of-sun-misc-unsafe-a-disaster-in-the-making/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; about the removal of this Unsafe class in Java 9, by the DripStat team&lt;/p&gt;

&lt;h2 id=&#34;how-to-write-directly-to-a-memory-locations-in-java&#34;&gt;How To Write Directly to a Memory Locations In Java&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://robaustin.wikidot.com/how-to-write-to-direct-memory-locations-in-java&#34; target=&#34;_blank&#34;&gt;this guide&lt;/a&gt; on how to write directly to a memory position in java, by Rob Austin&lt;/p&gt;

&lt;h2 id=&#34;interesting-uses-of-sun-misc-unsafe&#34;&gt;Interesting uses of sun.misc.Unsafe&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://bytescrolls.blogspot.com.es/2011/04/interesting-uses-of-sunmiscunsafe.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Haris A.L.&lt;/p&gt;

&lt;h2 id=&#34;introduction-to-the-theory-of-np-completeness&#34;&gt;Introduction to the theory of np-completeness&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://www.site.uottawa.ca/~lucia/courses/4105-02/np.pdf&#34; target=&#34;_blank&#34;&gt;these notes / slides&lt;/a&gt; to the introductory course of NP-completeness, by Prof Lucia Moura&lt;/p&gt;

&lt;h2 id=&#34;js-code-kata-linked-list&#34;&gt;JS Code Kata: Linked List&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://speakerdeck.com/yitznewton/js-code-kata-linked-list&#34; target=&#34;_blank&#34;&gt;these slides&lt;/a&gt; on the kata linked list, by Yitz Schaffer. The slide #13 talks about the transformations:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;refactor: change form without changing behavior&lt;/li&gt;
&lt;li&gt;transform: change behavior while changing form as little as possible&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Also about the Transformation Priority Premise (TPP) (also in this month)&lt;/p&gt;

&lt;h2 id=&#34;the-transformation-priority-premise&#34;&gt;The Transformation Priority Premise&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read, again, &lt;a href=&#34;https://blog.8thlight.com/uncle-bob/2013/05/27/TheTransformationPriorityPremise.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; by Uncle Bob (Robert C. Martin)&lt;/p&gt;

&lt;h2 id=&#34;data-structures&#34;&gt;Data structures&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read the wiki page for&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/SPQR_tree&#34; target=&#34;_blank&#34;&gt;SPQR tree&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Binary_search_tree&#34; target=&#34;_blank&#34;&gt;BSR tree&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Red%E2%80%93black_tree&#34; target=&#34;_blank&#34;&gt;Red black tree&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Judy_array&#34; target=&#34;_blank&#34;&gt;Judy array&lt;/a&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Also, The &lt;a href=&#34;http://bigocheatsheet.com/&#34; target=&#34;_blank&#34;&gt;Big-O notation complexity cheatsheet&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;on-benchmarks-numbers-every-programmer-should-know-and-their-impact-on-benchmarks&#34;&gt;On benchmarks: Numbers every programmer should know and their impact on benchmarks&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://hype-free.blogspot.com/2014/03/on-benchmarks.html&#34; target=&#34;_blank&#34;&gt;this post&lt;/a&gt; on doing back-of-the-envelope calculations on publicly available benchmarks, written by Attila-Mihaly Balazs&lt;/p&gt;

&lt;h2 id=&#34;top-java-ide-keyboard-shortcuts-for-eclipse-intellij-idea-netbeans&#34;&gt;Top Java IDE Keyboard Shortcuts for Eclipse, IntelliJ IDEA &amp;amp; NetBeans&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://zeroturnaround.com/rebellabs/top-java-ide-keyboard-shortcuts-for-eclipse-intellij-idea-netbeans/&#34; target=&#34;_blank&#34;&gt;these slides&lt;/a&gt; on the topic of keyboard shortcuts for java IDEs, written by Oleg Šelajev&lt;/p&gt;

&lt;h2 id=&#34;the-hacker-s-summer-training-guide-part-1&#34;&gt;The hacker’s summer training guide – part 1&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://blog.paymill.com/hackers-training-guide-1&#34; target=&#34;_blank&#34;&gt;this post&lt;/a&gt; by Paymill, that suggests which new languages to learn this summer: rust, go, elixir, ocaml, scala, livescript.&lt;/p&gt;

&lt;h2 id=&#34;applications-built-extremely-right&#34;&gt;Applications built extremely right&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://apiumtech.com/blog/applications-build-with-outsourcing/&#34; target=&#34;_blank&#34;&gt;this post&lt;/a&gt; with a list of candidates for building nice products, written by Xavi Hidalgo.&lt;/p&gt;

&lt;h2 id=&#34;agile-project-seed-infrastructure-by-default&#34;&gt;Agile project seed. Infrastructure by default.&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://apiumtech.com/blog/seed-de-proyecto-agile-infraestructura-por-defecto/&#34; target=&#34;_blank&#34;&gt;this post&lt;/a&gt; on an agile seed project. Reminded me of the 12-factor app&lt;/p&gt;

&lt;h2 id=&#34;what-an-agile-developer-should-know&#34;&gt;What an agile developer should know&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.apiumtech.com/blog/lo-que-un-desarrollador-agile-deberia-saber/&#34; target=&#34;_blank&#34;&gt;this post&lt;/a&gt; by Xavi Hidalgo&lt;/p&gt;

&lt;h2 id=&#34;bad-apples-that-can-destroy-a-team&#34;&gt;Bad Apples that can destroy a team&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve listened to &lt;a href=&#34;http://www.scrum-master-toolbox.com/2015/03/podcast/dominic-krimmer-describes-the-types-of-bad-apples-that-can-destroy-a-team/&#34; target=&#34;_blank&#34;&gt;this podcast&lt;/a&gt; about the bad apples in a team. Presented by Vasco Duarte and Dominic Krimmer as the main speaker&lt;/p&gt;

&lt;h2 id=&#34;how-scala-compares-with-20-other-programming-languages-according-to-reddit-analysis&#34;&gt;How Scala compares with 20 other programming languages according to Reddit analysis&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://www.typesafe.com/blog/how-scala-compares-20-programming-languages-reddit-analysis&#34; target=&#34;_blank&#34;&gt;this analysis&lt;/a&gt; of the language comparison, written by Oliver White&lt;/p&gt;

&lt;h2 id=&#34;javascript-patterns-book-review&#34;&gt;Javascript patterns book review&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.bennadel.com/blog/2047-javascript-patterns-by-stoyan-stefanov.htm&#34; target=&#34;_blank&#34;&gt;this review&lt;/a&gt; by Ben Nadel on the book Javascript Patterns, by Stoyan Stefanov&lt;/p&gt;

&lt;h2 id=&#34;monogamous-tdd&#34;&gt;Monogamous TDD&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://blog.8thlight.com/uncle-bob/2014/04/25/MonogamousTDD.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; on the fundamentalism of TDD, written by Robert C Martin&lt;/p&gt;

&lt;h2 id=&#34;encapsulating-localstorage-access-in-angularjs&#34;&gt;Encapsulating LocalStorage Access In AngularJS&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.bennadel.com/blog/2861-encapsulating-localstorage-access-in-angularjs.htm&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; on why encapsulate the access to the localStorage, written by Ben Nadel&lt;/p&gt;

&lt;h2 id=&#34;anatomy-of-a-zero-knowledge-web-application&#34;&gt;Anatomy of a zero-knowledge web application&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://clipperz.is/blog/2007/08/24/anatomy_zero_knowledge_web_application/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; on a zero-knowledge web application, by the clipperz team&lt;/p&gt;

&lt;h2 id=&#34;refactorización-de-código-legado-clase-maestra&#34;&gt;Refactorización de Código Legado Clase Maestra&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched &lt;a href=&#34;https://www.youtube.com/watch?v=VBgCKKevhyI&#34; target=&#34;_blank&#34;&gt;this video&lt;/a&gt; about refactoring a legacy code in C#, by Danijel Arsenovski&lt;/p&gt;

&lt;h2 id=&#34;taming-javaagents&#34;&gt;Taming Javaagents&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://speakerdeck.com/shelajev/taming-javaagents-bcn-jug-2015&#34; target=&#34;_blank&#34;&gt;these slides&lt;/a&gt;, again, from a conference I went to a few months ago about java agents. Written by Oleg Šelajev.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/shelajev/ResourceLeakAgent&#34; target=&#34;_blank&#34;&gt;This&lt;/a&gt; is the repository containing the memory leak agent he talks about&lt;/p&gt;

&lt;h2 id=&#34;mathematics-for-computer-science-lecture-1&#34;&gt;Mathematics for Computer Science, Lecture 1&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched by &lt;a href=&#34;http://xoax.net/comp_sci/crs/math_for_comp_science_mit/lessons/Lecture1/&#34; target=&#34;_blank&#34;&gt;the first recitation&lt;/a&gt; in &lt;a href=&#34;http://xoax.net/comp_sci/crs/math_for_comp_science_mit/index.php&#34; target=&#34;_blank&#34;&gt;this course&lt;/a&gt;, offered by MIT Open Course Ware (OCW). Recited by Tom Leighton&lt;/p&gt;

&lt;h2 id=&#34;programming-abstractions-lecture-7&#34;&gt;Programming Abstractions: Lecture 7&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched &lt;a href=&#34;http://xoax.net/comp_sci/crs/programming_abstractions_stanford/lessons/Lecture7/&#34; target=&#34;_blank&#34;&gt;this lecture&lt;/a&gt; by Julie Zelensky about the comparison operator, recursion and a live coding session calculating the most ocurring anagram word in a file.&lt;/p&gt;

&lt;p&gt;She uses small outputs to check the correctness of her programs to get short feedback cycles, even if they are manual.&lt;/p&gt;

&lt;h2 id=&#34;5-ways-to-launch-a-jmeter-test-without-using-the-jmeter-gui&#34;&gt;5 Ways To Launch a JMeter Test without Using the JMeter GUI&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://blazemeter.com/blog/5-ways-launch-jmeter-test-without-using-jmeter-gui&#34; target=&#34;_blank&#34;&gt;this guide&lt;/a&gt; on using jmeter without a GUI, by Dmitri Tikhanski&lt;/p&gt;

&lt;h2 id=&#34;clojure-unraveled-chapter-5&#34;&gt;Clojure unraveled, chapter 5&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read the &lt;a href=&#34;http://funcool.github.io/clojurescript-unraveled/#language-advanced-topics&#34; target=&#34;_blank&#34;&gt;fifth chapter&lt;/a&gt;, on the topics of Transducers, Transients, Metadata, Macros, Core protocols. Written by Andrey Antukh and Alejandro Gómez&lt;/p&gt;

&lt;h2 id=&#34;a-guide-to-the-basics-of-data-structures&#34;&gt;A guide to the Basics of Data Structures&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://algosaur.us/data-structures-basics/&#34; target=&#34;_blank&#34;&gt;this guide&lt;/a&gt; to data structures, covering the stack, the queue, the heap, the tree and the hashmap. Written by Radhika Ghosal&lt;/p&gt;

&lt;h2 id=&#34;government-abandonware&#34;&gt;Government Abandonware&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://techblog.bozho.net/government-abandonware/&#34; target=&#34;_blank&#34;&gt;this post&lt;/a&gt; on abandoned, public software that is not opensource. Dubbed by the author as &amp;ldquo;Government Abandonware&amp;rdquo;. Written by Bozhidar Bozhanov&lt;/p&gt;

&lt;h2 id=&#34;the-art-of-incremental-stream-processing&#34;&gt;The Art of Incremental Stream Processing&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://mth.io/talks/streams/&#34; target=&#34;_blank&#34;&gt;these slides&lt;/a&gt; on incremental stream processing. The examples are in haskell and scala. Written by Mark Hibberd&lt;/p&gt;

&lt;h2 id=&#34;reader-as-link-author&#34;&gt;Reader as Link Author&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://hapgood.us/2015/07/22/follow-up-reader-as-link-author/&#34; target=&#34;_blank&#34;&gt;this insight&lt;/a&gt; into federated wikis by Mike Caulfield&lt;/p&gt;

&lt;h2 id=&#34;kafkapocalypse-a-postmortem-on-our-service-outage&#34;&gt;Kafkapocalypse: a postmortem on our service outage&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.parsely.com/post/1738/kafkapocalypse/&#34; target=&#34;_blank&#34;&gt;this post-mortem analysis&lt;/a&gt; of the service outage at parse.ly, by Andrew Montalenti&lt;/p&gt;

&lt;h2 id=&#34;loving-a-log-oriented-architecture&#34;&gt;Loving a Log-Oriented Architecture&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.parsely.com/post/1550/kreps-logs/&#34; target=&#34;_blank&#34;&gt;this post&lt;/a&gt; on experiences using the log-based architecture, by Andrew Montalenti. Cites the books &lt;a href=&#34;http://www.amazon.com/Heart-Logs-Stream-Processing-Integration/dp/1491909382&#34; target=&#34;_blank&#34;&gt;I Heart Logs&lt;/a&gt;,  and &lt;a href=&#34;http://www.amazon.com/gp/product/1617290343&#34; target=&#34;_blank&#34;&gt;Big Data: Principles and best practices of scalable realtime data systems&lt;/a&gt; the essay &lt;a href=&#34;http://engineering.linkedin.com/distributed-systems/log-what-every-software-engineer-should-know-about-real-time-datas-unifying&#34; target=&#34;_blank&#34;&gt;The Log&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;a-guide-to-algorithmic-complexity&#34;&gt;A guide to Algorithmic Complexity&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://algosaur.us/algorithmic-complexity&#34; target=&#34;_blank&#34;&gt;this guide&lt;/a&gt; to algorithmic complexity, explaining Big-Oh notation (Big-Oh, Big-Theta, Big-Omega), with examples. Written by Radhika Ghosal&lt;/p&gt;

&lt;h2 id=&#34;a-guide-to-recursion&#34;&gt;A guide to Recursion&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://algosaur.us/recursion&#34; target=&#34;_blank&#34;&gt;this guide&lt;/a&gt; to recursion explaining the gist of it. Examples include the Fibonacci sequence and the Hanoi Towers problem. Later, an introduction to the chaos theory and fractals. Written by Radhika Ghosal&lt;/p&gt;

&lt;h2 id=&#34;bootstrapped-clojurescript-faq&#34;&gt;Bootstrapped ClojureScript FAQ&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://github.com/clojure/clojurescript/wiki/Bootstrapped-ClojureScript-FAQ&#34; target=&#34;_blank&#34;&gt;this FAQ&lt;/a&gt; related to bootstrapping clojurescript&lt;/p&gt;

&lt;h2 id=&#34;applying-property-based-testing-on-my-binary-search-tree-implementation&#34;&gt;Applying property-based testing on my binary search tree implementation&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://garajeando.blogspot.com/2015/07/applying-property-based-testing-on-my.html&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt;, written by Manuel Rivero, on applying test-check (a property-based testing framework, similar to quickcheck) to a Binary Search Tree (BST) he did.&lt;/p&gt;

&lt;h2 id=&#34;do-extraterrestrials-use-functional-programming&#34;&gt;Do Extraterrestrials Use Functional Programming?&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://yowconference.com.au/slides/yowlambdajam2013/Chakravarty-Extraterrestrials-Keynote.pdf&#34; target=&#34;_blank&#34;&gt;these slides&lt;/a&gt;, an introduction to lambda calculus, the Turing machine and the Halting Problem. Later, continues to describe ways of solving problems in a functional way. Also performance and optimizations; monads as well. Written by Manuel M T Chakravarty&lt;/p&gt;

&lt;h2 id=&#34;wip-limits&#34;&gt;WIP Limits&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://theagileist.wordpress.com/2015/06/15/wip-limits/&#34; target=&#34;_blank&#34;&gt;this post&lt;/a&gt; by Tomas Rybing&lt;/p&gt;

&lt;h2 id=&#34;applied-capacity-planning&#34;&gt;Applied capacity planning&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://theagileist.wordpress.com/2015/07/27/applied-capacity-planning/&#34; target=&#34;_blank&#34;&gt;this post&lt;/a&gt; by Tomas Rybing.&lt;/p&gt;

&lt;h2 id=&#34;don-t-get-attached-to-programming-languages&#34;&gt;Don’t Get Attached to Programming Languages&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://mikecavaliere.com/dont-get-attached-programming-languages&#34; target=&#34;_blank&#34;&gt;this post&lt;/a&gt; by Mike Cavaliere&lt;/p&gt;

&lt;h2 id=&#34;the-top-5-skills-of-rock-star-software-engineers&#34;&gt;The Top 5 Skills of Rock Star Software Engineers&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://softwareplusplus.com/2015/06/24/the-top-5-skills-of-rock-star-software-engineers/&#34; target=&#34;_blank&#34;&gt;this post&lt;/a&gt; by Cory Berg&lt;/p&gt;

&lt;h2 id=&#34;5-reasons-to-use-protocol-buffers-instead-of-json-for-your-next-service&#34;&gt;5 Reasons to Use Protocol Buffers Instead of JSON For Your Next Service&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.codeclimate.com/blog/2014/06/05/choose-protocol-buffers/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; on Protocol Buffers, written by Michael Bernstein&lt;/p&gt;

&lt;h2 id=&#34;data-serialization-formats&#34;&gt;Data Serialization Formats&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://gist.github.com/joshsz/11299196&#34; target=&#34;_blank&#34;&gt;this comparison&lt;/a&gt; between MsgPack, JSON, Protocol Buffers, by Josh Szmajda.&lt;/p&gt;

&lt;h2 id=&#34;protocol-buffer-basics-java&#34;&gt;Protocol Buffer Basics: Java&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://developers.google.com/protocol-buffers/docs/javatutorial&#34; target=&#34;_blank&#34;&gt;this introduction&lt;/a&gt; to Protocol Buffers in Java, by Google&lt;/p&gt;

&lt;h2 id=&#34;restful-considered-harmful&#34;&gt;RESTful Considered Harmful&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://dzone.com/articles/restful-considered-harmful?oid=top_title&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt;, commenting downsides to using JSON / RESTful APIs, written by Tomasz Nurkiewicz&lt;/p&gt;

&lt;h2 id=&#34;considered-harmful-essays-considered-harmful&#34;&gt;“Considered Harmful” Essays Considered Harmful&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://meyerweb.com/eric/comment/chech.html&#34; target=&#34;_blank&#34;&gt;this post&lt;/a&gt;, by Eric Meyer, on why &amp;ldquo;Considered Harmful&amp;rdquo; are harmful as well.&lt;/p&gt;

&lt;h2 id=&#34;keep-lambdas-cohesive&#34;&gt;Keep Lambdas Cohesive&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://blog.agiledeveloper.com/2015/07/keep-lambdas-cohesive.html&#34; target=&#34;_blank&#34;&gt;this post&lt;/a&gt; with recommendations on keeping the java lambdas cohesive. Written by Venkat Subramaniam&lt;/p&gt;

&lt;h2 id=&#34;the-joy-of-flying-robots-with-clojure&#34;&gt;The Joy of Flying Robots with Clojure&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve watched &lt;a href=&#34;https://www.youtube.com/watch?v=Ty9QDqV-_Ak&#34; target=&#34;_blank&#34;&gt;this video&lt;/a&gt; by Carin Meier at the OSCON 2013 about communicating with robots in Clojure&lt;/p&gt;

&lt;h2 id=&#34;how-to-learn-tdd-without-getting-overwhelmed&#34;&gt;How to Learn TDD Without Getting Overwhelmed&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.justinweiss.com/blog/2014/06/02/how-to-learn-tdd-without-getting-overwhelmed/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; on learning TDD, by Justin Weiss&lt;/p&gt;

&lt;h2 id=&#34;kata-the-only-way-to-learn-tdd&#34;&gt;Kata - the Only Way to Learn TDD&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://www.peterprovost.org/blog/2012/05/02/kata-the-only-way-to-learn-tdd/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; on learning TDD, by Peter Provost&lt;/p&gt;

&lt;h2 id=&#34;koan-past-perfect&#34;&gt;Koan: Past Perfect&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://thecodelesscode.com/case/180&#34; target=&#34;_blank&#34;&gt;this koan&lt;/a&gt;, past perfect, reflecting on the people who prefer the past over the present. Who think that the past was simpler than currently is.&lt;/p&gt;

&lt;h2 id=&#34;koan-future-imperfect&#34;&gt;Koan: Future Imperfect&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;http://thecodelesscode.com/case/181&#34; target=&#34;_blank&#34;&gt;this koan&lt;/a&gt;, continuation from past perfect.&lt;/p&gt;

&lt;h2 id=&#34;why-agile-and-especially-scrum-are-terrible&#34;&gt;Why “Agile” and especially Scrum are terrible&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve read &lt;a href=&#34;https://michaelochurch.wordpress.com/2015/06/06/why-agile-and-especially-scrum-are-terrible/&#34; target=&#34;_blank&#34;&gt;this article&lt;/a&gt; on downsides of Agile and Scrum, written by Michael Church.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>